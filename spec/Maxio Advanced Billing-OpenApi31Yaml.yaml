openapi: 3.1.0
info:
  title: Maxio Advanced Billing
  description: >-
    ## Introduction


    ### API Integration


    Maxio Advanced Billing (formerly Chargify API) can be integrated with many environments and programming languages via our REST API. Some of our users have contributed their API wrappers in various programming languages. Check out the [API Code Overview](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDI2-api-code-samples) doc for an introduction to the wrappers and available code samples.


    ### Testing Guide


    Maxio Advanced Billing has compiled a [testing guide](https://chargify.zendesk.com/hc/en-us/articles/4407904658587) that covers a list of important factors to consider while in the testing phase. Here's a high-level overiew of what's covered in our testing guide:


    + Test credit card basics

    + Test site limits

    + Live mode versus test mode


    We strongly suggest reading over the testing guide, as well as the entire set of application-based documentation to aid in your discovery of the product.


    ### Engage Support


    We always enjoy (and appreciate) hearing about larger integrations ahead of time. If you’re planning on importing a large amount of data into Maxio via our API, we suggest sending a “heads up” to “support@chargify.com” so we can coordinate with you to ensure your import process goes smoothly.


    Our API, while considered stable, is continually being improved and polished. Please feel free to contact support if you experience issues when integrating with the Maxio Advanced Billing API.


    If you have any additional questions regarding our documentation please don't hesitate in reaching out.


    ### Support Access


    Access to our Technical Specialist team for API support is currently limited to purchasers of our larger Maxio support plans.


    But don’t worry! There are quite a few options to help you get the answers you need:


    - [Read our documentation for developers](https://developers.chargify.com/docs/developer-docs/ZG9jOjM0NjA3MQ-overview)

    - Explore the endpoints of our API Documentation

    - [Watch our videos and tutorials](https://chargify.com/tutorials)

    - [Check out the Chargify tag on Stack Overflow](http://stackoverflow.com/questions/tagged/chargify)


    ## API Overview


    The Chargify API allows you to interact with our system programmatically from your own application. Using the API you interact with Resources such as:


    - Products

    - Subscriptions

    - Customers

    - etc.


    The API attempts to conform to the [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) design principles.

    You interact with the resources exposed via the API by accessing resource collection and element URIs using the HTTP verbs (GET, POST, PUT, and DELETE).

    Chargify accepts and returns both JSON and XML data via the API.


    You’ll likely need access to a web developer or programmer (if you’re not one) to get the most use out of the API.


    ### Available Formats: JSON and XML


    JSON is the primary and recommended format for use with the Chargify API.  XML is also provided as a backwards compatible option for Merchants who require it.


    ### Authentication


    Authentication is implemented as HTTP Basic Authentication over TLS >= 1.2 (HTTPS), as described in [API Authentication](https://developers.chargify.com/docs/developer-docs/ZG9jOjE1NTUxNQ-authentication)


    ### URL


    The URL for API requests includes the subdomain of the Site you are working with:


    `https://<subdomain>.chargify.com/<resource URI>`


    ### Response Data


    Response data is sent as either XML or JSON, depending on the type of data requested (`HTTP Content-Type` header) or the type specified as being accepted (HTTP `Accept` header).


    GETs for individual statements & invoices may also be requested as PDF using `application/pdf` or appending `.pdf` to the resource URI.


    Response codes are sent via the normal HTTP Response Code, and are documented separately for each resource.


    For boolean fields, please note that a value of `null` may be considered as false. However, this is not true across all cases. Please excercise good judgement here, or contact support with any questions.


    For example:


    + `null` can define that there's no data available for that attribute


    ### Pagination


    When an endpoint returns a list of items, it will be paginated.  Usually, 20 items will be returned by default, and you may request up to a maximum of 200 at a time.  Pagination is done with query string parameters, for example: `?page=5&per_page=200`


    ### Response Time Zones


    API responses from Chargify are sent with the timezone of current Chargify site.


    Alternately, webhooks sent from Chargify globally utilize EST as the timezone for all content in the body of the payload.


    ### Request Data


    POST and PUT request data may be formatted as either XML (`application/xml`) or JSON (`application/json`). For best results, you should set your HTTP `Content-Type` request header accordingly, although you may also specify your format by appending `.xml` or `.json` extensions on to the resource URI.


    Note that Chargify does not accept PUT or POST data sent as query params or form encoded data – data must be sent as either XML or JSON. If you fail to set your `Content-Type` to either `application/xml` or `application/json`, your request may fail due to triggering of forgery protection mechanisms.


    #### About Decimal Numbers


    In order to prevent losing precision, we serialize decimal numbers as strings instead of as JSON numbers.


    We recommend parsing these strings into their decimal equivalent using a decimal number library in your programming language (i.e. `BigDecimal` in Ruby) instead of relying on floating point values or arithmetic.


    #### About Amount Fields


    Fields holding amount values are given as a string representing a decimal whole currency amount.


    For example, `"1.23"` in currency `"USD"` would equate to `$1.23`.


    Not all fields will be rounded to the smallest currency denomination.  Intermediate results, such as those that derive from line-level tax calculations, may hold precision up to 8 decimal places.  However, the top-level totals we provide (e.g. `total_amount`) will be rounded to the smallest currency denomination.


    It is up to API consumers to parse the string into a decimal number representation and do any rounding necessary for your application.


    ### Debugging


    If you’re having difficulty executing a request via our API, try the simplest thing and attempt your request via the curl command-line tool, as shown in the below example. Add the `--verbose` flag to your request to receive even more debugging information.


    Another handy tool is [Beeceptor](https://beeceptor.com/). You can use this to intercept your request to see exactly what is being sent.


    If you are unable to connect at all, check that you are using TLS 1.2 or better.


    If you see a "Could not resolve host" error, double check that the url is correct, including your subdomain. For example: `mysite.chargify.com`.  This error means your DNS server could not find an IP address for the domain you are trying to connect to.


    ### Backwards Compatibility


    We consider the following changes to be backwards compatible and may make them without advance notice:


    + Adding new API endpoints, or adding new attributes in the responses of existing endpoints

    + Adding new optional parameters to be sent to existing API endpoints

    + Adding new fields to exported data

    + Changing the type or length of any of the ID attributes
      + For example, most IDs are currently integers, but you should not assume that this will always be the case.

    In addition, you should not depend on the order of attributes within the API response as this may change.


    Chargify does not provide notifications for additions that are clearly defined as backwards compatible.


    ### Examples


    The following examples use the curl command-line tool to execute API requests.


    #### Subscription Listing


    **Request**

        curl -u <api_key>:x -H Accept:application/json -H Content-Type:application/json https://acme.chargify.com/subscriptions.json


    ## API Access Limitations


    There are a few scenarios that may end up in causing an API request to be blocked even with correct credentials.

    **Please note:** All relevant API requests will be blocked if any of the below conditions are true. These limitations also apply to [Chargify Direct](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDE3-introduction).


    Those scenarios are as follows:


    - Your Chargify subscription is canceled.

    - Your Chargify trial has reached an end.

    - The site you're making a request for is in the process of ["clearing site data"](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405428327309)
      - _Note: any API request for another site that is in a good state will NOT be blocked_
    - The site you're making a request for has been deleted.
      - _Note: any API request for another site that is in a good state will NOT be blocked_

    Read more about your Chargify subscription [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405430043149-Advanced-Billing-Subscription#advanced-billing-subscription-0-0)


    ### What happens when an API request is blocked


    The request will fail with a `422` http status code. The response will also include a message explaining the reason for the request being blocked. For example:


    - If your Chargify subscription is canceled:


    ```json

    {
      "errors" => [
        [0] "Your Chargify account has been canceled. Please contact support@chargify.com to reactivate."
      ]
    }

    ```


    - If your Chargify trial has reached and end and you attempted to make an API request, the response body will look like:


    ```json

    {
      "errors" => [
        [0] "Your trial has ended, please contact sales."
      ]
    }

    ```


    - If the site you're making a request for is in the process of ["clearing site data"](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405428327309):


    ```json

    {
      "errors" => [
        [0] "Site data clearing is in progress. Please try later."
      ]
    }

    ```


    - If the site you're making a request for has been deleted:


    ```json

    {
      "errors" => [
        [0] "This site has been deleted."
      ]
    }

    ```


    ## Secure Applications


    Please note that it is NOT possible to make API requests directly from the customer's browser or device.  Doing so would expose your API key on the client side, and anyone who has that key has full access to all of your Chargify data.


    Instead you will need to take care to tokenize sensitive information by using [Chargify.js](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDI0-overview) or a similar JavaScript library provided by your gateway, and then post the token and other information to your own server, from which you can make the API call to Chargify.


    #### Troubleshooting


    If you attempt to make a Chargify API request directly from the customer's browser, you may see an error such as:


    ```

    Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.

    ```


    or


    ```

    Origin 'https://example.com' is therefore not allowed access.` `The response had HTTP status code 404.

    ```


    This is an error message indicating that Cross-Origin Resource Sharing (CORS) is not enabled on the Chargify server.


    ## Relationship Invoicing


    ### API Compatibility for Relationship Invoicing


    This section describes the API for the new, [Relationship Invoicing](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405078794253) style of invoices introduced in January 2018.


    If you are an existing customer from prior to January 2018 or have not otherwise explicitly opted into this new style of invoices, you are probably looking for the legacy "Invoices" section that describes [invoice-billing legacy-style invoices](./b3A6MTQxMDgzNjQ-read-invoice).


    These new invoices provide a single representation of all of your Chargify billing, whether you collect automatically or via remittance.


    ### About Decimal Numbers


    In order to prevent losing precision, we serialize decimal numbers as strings instead of as JSON numbers.


    We recommend parsing these strings into their decimal equivalent using a decimal number library in your programming language (i.e. `BigDecimal` in Ruby) instead of relying on floating point values or arithmetic.


    ### About Amount Fields


    Fields holding amount values are given as a string representing a decimal whole currency amount.


    For example, `"1.23"` in currency `"USD"` would equate to `$1.23`.


    Not all fields will be rounded to the smallest currency denomination. Intermediate results, such as those that derive from line-level tax calculations, may hold precision up to 8 decimal places.  However, the top-level totals we provide (e.g. `total_amount`) will be rounded to the smallest currency denomination.


    It is up to API consumers to parse the string into a decimal number representation and do any rounding necessary for your application.


    #### Relationship Invoicing Summary


    + If your site **is** using relationship invoicing, you may only use the methods described in this section for working with invoices.


    + If your site is **not** using relationship invoicing, please use the legacy invoice methods:

      + [Invoices](./b3A6MTQxMTA0MTA-read-invoice)
      + [Invoices: Payments](./b3A6MTQxMTA0MTI-create-invoice-payment)
      + [Invoices: Charges](./b3A6MTQxMTA0MTM-create-charge)
      + [Invoices: Credits](./b3A6MTQxMTA0MTQ-create-invoice-credit)
  contact:
    email: support@chargify.com
  version: '1.0'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://{subdomain}.{domain}
  description: Production server
  variables:
    subdomain:
      default: subdomain
      description: The subdomain for your Chargify site.
    domain:
      default: chargify.com
      description: The Chargify server domain.
- url: https://events.chargify.com
  description: Production server
  variables: {}
paths:
  /api_exports/proforma_invoices/{batch_id}/rows.json:
    get:
      tags:
      - API Exports
      summary: listExportedProformaInvoices
      description: >-
        This API returns an array of exported proforma invoices for a provided `batch_id`. Pay close attention to pagination in order to control responses from the server.


        Example: `GET https://{subdomain}.chargify.com/api_exports/proforma_invoices/123/rows?per_page=10000&page=1`.
      operationId: listExportedProformaInvoices
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      - name: per_page
        in: query
        description: "This parameter indicates how many records to fetch in each request. \nDefault value is 100. \nThe maximum allowed values is 10000; any per_page value over 10000 will be changed to 10000."
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 100
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProformaInvoice'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /api_exports/invoices/{batch_id}/rows.json:
    get:
      tags:
      - API Exports
      summary: listExportedInvoices
      description: >-
        This API returns an array of exported invoices for a provided `batch_id`. Pay close attention to pagination in order to control responses from the server.


        Example: `GET https://{subdomain}.chargify.com/api_exports/invoices/123/rows?per_page=10000&page=1`.
      operationId: listExportedInvoices
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      - name: per_page
        in: query
        description: "This parameter indicates how many records to fetch in each request. \nDefault value is 100. \nThe maximum allowed values is 10000; any per_page value over 10000 will be changed to 10000."
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 100
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /api_exports/subscriptions/{batch_id}/rows.json:
    get:
      tags:
      - API Exports
      summary: listExportedSubscriptions
      description: >-
        This API returns an array of exported subscriptions for a provided `batch_id`. Pay close attention to pagination in order to control responses from the server.


        Example: `GET https://{subdomain}.chargify.com/api_exports/subscriptions/123/rows?per_page=200&page=1`.
      operationId: listExportedSubscriptions
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      - name: per_page
        in: query
        description: "This parameter indicates how many records to fetch in each request. \nDefault value is 100. \nThe maximum allowed values is 10000; any per_page value over 10000 will be changed to 10000."
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 100
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /api_exports/proforma_invoices.json:
    post:
      tags:
      - API Exports
      summary: exportProformaInvoices
      description: >-
        This API creates a proforma invoices export and returns a batchjob object.


        It is only available for Relationship Invoicing architecture.
      operationId: exportProformaInvoices
      parameters: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleErrorResponse1'
      deprecated: false
    parameters: []
  /api_exports/invoices.json:
    post:
      tags:
      - API Exports
      summary: exportInvoices
      description: This API creates an invoices export and returns a batchjob object.
      operationId: exportInvoices
      parameters: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleErrorResponse1'
      deprecated: false
    parameters: []
  /api_exports/subscriptions.json:
    post:
      tags:
      - API Exports
      summary: exportSubscriptions
      description: This API creates a subscriptions export and returns a batchjob object.
      operationId: exportSubscriptions
      parameters: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleErrorResponse1'
      deprecated: false
    parameters: []
  /api_exports/proforma_invoices/{batch_id}.json:
    get:
      tags:
      - API Exports
      summary: readProformaInvoicesExport
      description: This API returns a batchjob object for proforma invoices export.
      operationId: readProformaInvoicesExport
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /api_exports/invoices/{batch_id}.json:
    get:
      tags:
      - API Exports
      summary: readInvoicesExport
      description: This API returns a batchjob object for invoices export.
      operationId: readInvoicesExport
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /api_exports/subscriptions/{batch_id}.json:
    get:
      tags:
      - API Exports
      summary: readSubscriptionsExport
      description: This API returns a batchjob object for subscriptions export.
      operationId: readSubscriptionsExport
      parameters:
      - name: batch_id
        in: path
        description: Id of a Batch Job.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchJobResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/advance_invoice/issue.json:
    post:
      tags:
      - Advance Invoice
      summary: issueAdvanceInvoice
      description: >
        Generate an invoice in advance for a subscription's next renewal date. [Please see our docs](reference/Chargify-API.v1.yaml/components/schemas/Invoice) for more information on advance invoices, including eligibility on generating one; for the most part, they function like any other invoice, except they are issued early and have special behavior upon being voided.

        A subscription may only have one advance invoice per billing period. Attempting to issue an advance invoice when one already exists will return an error.

        That said, regeneration of the invoice may be forced with the params `force: true`, which will void an advance invoice if one exists and generate a new one. If no advance invoice exists, a new one will be generated.

        We recommend using either the create or preview endpoints for proforma invoices to preview this advance invoice before using this endpoint to generate it.
      operationId: issueAdvanceInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IssueAdvanceInvoiceRequest'
              - examples:
                - force: true
              contentMediaType: application/json
            examples:
              Force generation:
                value:
                  force: true
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - '{"errors":["Cannot generate an invoice in advance when nothing is due"]}'
                  - '{"errors":["Advance invoice already exists"]}'
                  - '{"errors":["Cannot generate an invoice in advance for subscription in the group"]}'
                  - '{"errors":["Cannot generate an invoice in advance for inactive subscription"]}'
                  - '{"errors":["Cannot generate an invoice in advance for a calendar billing subscription"]}'
                  - '{"errors":["Cannot generate an invoice in advance for a prepaid subscription"]}'
                  - '{"errors":["Cannot generate an invoice in advance within an hour of renewal"]}'
                  - '{"errors":["Cannot generate an invoice in advance for a subscription using the site level exchange rate"]}'
                  - '{"errors":["Cannot generate an invoice in advance when a subscription uses prepaid components"]}'
                contentMediaType: application/json
              examples:
                Nothing due:
                  value:
                    errors:
                    - Cannot generate an invoice in advance when nothing is due
                Already exists:
                  value:
                    errors:
                    - Advance invoice already exists
                Grouped:
                  value:
                    errors:
                    - Cannot generate an invoice in advance for subscription in the group
                End of life:
                  value:
                    errors:
                    - Cannot generate an invoice in advance for inactive subscription
                Calendar billing:
                  value:
                    errors:
                    - Cannot generate an invoice in advance for a calendar billing subscription
                Prepaid subscription:
                  value:
                    errors:
                    - Cannot generate an invoice in advance for a prepaid subscription
                Close to renewal:
                  value:
                    errors:
                    - Cannot generate an invoice in advance within an hour of renewal
                Custom exchange:
                  value:
                    errors:
                    - Cannot generate an invoice in advance for a subscription using the site level exchange rate
                Prepaid components:
                  value:
                    errors:
                    - Cannot generate an invoice in advance when a subscription uses prepaid components
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/advance_invoice.json:
    get:
      tags:
      - Advance Invoice
      summary: readAdvanceInvoice
      description: Once an advance invoice has been generated for a subscription's upcoming renewal, it can be viewed through this endpoint. There can only be one advance invoice per subscription per billing cycle.
      operationId: readAdvanceInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/advance_invoice/void.json:
    post:
      tags:
      - Advance Invoice
      summary: voidAdvanceInvoice
      description: >-
        Void a subscription's existing advance invoice. Once voided, it can later be regenerated if desired.

        A `reason` is required in order to void, and the invoice must have an open status. Voiding will cause any prepayments and credits that were applied to the invoice to be returned to the subscription. For a full overview of the impact of voiding, please [see our help docs](reference/Chargify-API.v1.yaml/components/schemas/Invoice).
      operationId: voidAdvanceInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VoidInvoiceRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /portal/customers/{customer_id}/enable.json:
    post:
      tags:
      - Billing Portal
      summary: enableBillingPortalForCustomer
      description: >-
        ## Billing Portal Documentation


        Full documentation on how the Billing Portal operates within the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407648972443).


        This documentation is focused on how the to configure the Billing Portal Settings, as well as Subscriber Interaction and Merchant Management of the Billing Portal.


        You can use this endpoint to enable Billing Portal access for a Customer, with the option of sending the Customer an Invitation email at the same time.


        ## Billing Portal Security


        If your customer has been invited to the Billing Portal, then they will receive a link to manage their subscription (the “Management URL”) automatically at the bottom of their statements, invoices, and receipts. **This link changes periodically for security and is only valid for 65 days.**


        If you need to provide your customer their Management URL through other means, you can retrieve it via the API. Because the URL is cryptographically signed with a timestamp, it is not possible for merchants to generate the URL without requesting it from Chargify.


        In order to prevent abuse & overuse, we ask that you request a new URL only when absolutely necessary. Management URLs are good for 65 days, so you should re-use a previously generated one as much as possible. If you use the URL frequently (such as to display on your website), please **do not** make an API request to Chargify every time.
      operationId: enableBillingPortalForCustomer
      parameters:
      - name: customer_id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: auto_invite
        in: query
        description: >-
          When set to 1, an Invitation email will be sent to the Customer.

          When set to 0, or not sent, an email will not be sent.

          Use in query: `auto_invite=1`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/AutoInvite'
          - description: >-
              When set to 1, an Invitation email will be sent to the Customer.

              When set to 0, or not sent, an email will not be sent.

              Use in query: `auto_invite=1`.
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Portal is already enabled for this customer.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Portal is already enabled for this customer.
      deprecated: false
    parameters: []
  /portal/customers/{customer_id}/management_link.json:
    get:
      tags:
      - Billing Portal
      summary: readBillingPortalLink
      description: >-
        This method will provide to the API user the exact URL required for a subscriber to access the Billing Portal.


        ## Rules for Management Link API


        + When retrieving a management URL, multiple requests for the same customer in a short period will return the **same** URL

        + We will not generate a new URL for 15 days

        + You must cache and remember this URL if you are going to need it again within 15 days

        + Only request a new URL after the `new_link_available_at` date

        + You are limited to 15 requests for the same URL. If you make more than 15 requests before `new_link_available_at`, you will be blocked from further Management URL requests (with a response code `429`)
      operationId: readBillingPortalLink
      parameters:
      - name: customer_id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PortalManagementLink'
                - examples:
                  - url: https://www.billingportal.com/manage/19804639/1517596469/bd16498719a7d3e6
                    fetch_count: 1
                    created_at: 2018-02-02T18:34:29Z
                    new_link_available_at: 2018-02-17T18:34:29Z
                    expires_at: 2018-04-08T17:34:29Z
                    last_invite_sent_at: 2018-02-02T18:34:29Z
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    url: https://www.billingportal.com/manage/19804639/1517596469/bd16498719a7d3e6
                    fetch_count: 1
                    created_at: 2018-02-02T18:34:29Z
                    new_link_available_at: 2018-02-17T18:34:29Z
                    expires_at: 2018-04-08T17:34:29Z
                    last_invite_sent_at: 2018-02-02T18:34:29Z
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Billing Portal is not enabled for this customer.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Billing Portal is not enabled for this customer.
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TooManyManagementLinkRequestsError1'
                - examples:
                  - errors:
                      error: Too many requests for this customer's management link
                      new_link_available_at: 2023-10-20T10:46:56Z
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      error: Too many requests for this customer's management link
                      new_link_available_at: 2023-10-20T10:46:56Z
      deprecated: false
    parameters: []
  /portal/customers/{customer_id}/invitations/invite.json:
    post:
      tags:
      - Billing Portal
      summary: resendBillingPortalInvitation
      description: >-
        You can resend a customer's Billing Portal invitation.


        If you attempt to resend an invitation 5 times within 30 minutes, you will receive a `422` response with `error` message in the body.


        If you attempt to resend an invitation when the Billing Portal is already disabled for a Customer, you will receive a `422` error response.


        If you attempt to resend an invitation when the Billing Portal is already disabled for a Customer, you will receive a `422` error response.


        If you attempt to resend an invitation when the Customer does not exist a Customer, you will receive a `404` error response.


        ## Limitations


        This endpoint will only return a JSON response.
      operationId: resendBillingPortalInvitation
      parameters:
      - name: customer_id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResentInvitation'
                - examples:
                  - last_sent_at: enim Duis esse dolore
                    last_accepted_at: adipisicing magna do in irure
                    send_invite_link_text: veniam sit
                    uninvited_count: 66254678
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    last_sent_at: enim Duis esse dolore
                    last_accepted_at: adipisicing magna do in irure
                    send_invite_link_text: veniam sit
                    uninvited_count: 66254678
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Too many requests for this customer. You can perform 5 requests within 00:30:00.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Too many requests for this customer. You can perform 5 requests within 00:30:00.
      deprecated: false
    parameters: []
  /portal/customers/{customer_id}/invitations/revoke.json:
    delete:
      tags:
      - Billing Portal
      summary: revokeBillingPortalAccess
      description: >-
        You can revoke a customer's Billing Portal invitation.


        If you attempt to revoke an invitation when the Billing Portal is already disabled for a Customer, you will receive a 422 error response.


        ## Limitations


        This endpoint will only return a JSON response.
      operationId: revokeBillingPortalAccess
      parameters:
      - name: customer_id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RevokedInvitation'
                - examples:
                  - last_sent_at: Not Invited
                    last_accepted_at: Invite Revoked
                    uninvited_count: 8
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    last_sent_at: Not Invited
                    last_accepted_at: Invite Revoked
                    uninvited_count: 8
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/coupons.json:
    post:
      tags:
      - Coupons
      summary: createCoupon
      description: >-
        ## Coupons Documentation


        Coupons can be administered in the Chargify application or created via API. Please view our section on [creating coupons](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404742830733) for more information.


        Additionally, for documentation on how to apply a coupon to a subscription within the Chargify UI, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404761012877).


        ## Create Coupon


        This request will create a coupon, based on the provided information.


        When creating a coupon, you must specify a product family using the `product_family_id`. If no `product_family_id` is passed, the first product family available is used. You will also need to formulate your URL to cite the Product Family ID in your request.


        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:

        `{ "<product/component_id>": boolean_value }`
      operationId: createCoupon
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateorUpdateCoupon'
              - examples:
                - '{"coupon":{"name":"15% off","code":"15OFF","description":"15% off for life","percentage":15,"allow_negative_balance":false,"recurring":false,"end_date":"2012-08-29T12:00:00-04:00","product_family_id":"2","stackable":true,"compounding_strategy":"compound","exclude_mid_period_allocations":true,"apply_on_cancel_at_end_of_period":true},"restricted_products":{"1":true},"restricted_components":{"1":true,"2":false}}'
                - '{"coupon":{"name":"$10 off","code":"10OFF","description":"$10 off for life","amount_in_cents":1000,"allow_negative_balance":false,"recurring":false,"end_date":"2012-08-29T12:00:00-04:00","product_family_id":"2","stackable":true,"compounding_strategy":"compound","exclude_mid_period_allocations":true,"apply_on_cancel_at_end_of_period":true},"restricted_products":{"1":true},"restricted_components":{"1":true,"2":false}}'
              contentMediaType: application/json
            examples:
              Percentage Coupon Example:
                value:
                  coupon:
                    name: 15% off
                    code: 15OFF
                    description: 15% off for life
                    percentage: 15
                    allow_negative_balance: false
                    recurring: false
                    end_date: 2012-08-29T12:00:00-04:00
                    product_family_id: '2'
                    stackable: true
                    compounding_strategy: compound
                    exclude_mid_period_allocations: true
                    apply_on_cancel_at_end_of_period: true
                  restricted_products:
                    '1': true
                  restricted_components:
                    '1': true
                    '2': false
              Flat Amount Coupon Example:
                value:
                  coupon:
                    name: $10 off
                    code: 10OFF
                    description: $10 off for life
                    amount_in_cents: 1000
                    allow_negative_balance: false
                    recurring: false
                    end_date: 2012-08-29T12:00:00-04:00
                    product_family_id: '2'
                    stackable: true
                    compounding_strategy: compound
                    exclude_mid_period_allocations: true
                    apply_on_cancel_at_end_of_period: true
                  restricted_products:
                    '1': true
                  restricted_components:
                    '1': true
                    '2': false
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Expiration Date cannot be in the past
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Expiration Date cannot be in the past
      deprecated: false
    get:
      tags:
      - Coupons
      summary: listCouponsForProductFamily
      description: >-
        List coupons for a specific Product Family in a Site.


        If the coupon is set to `use_site_exchange_rate: true`, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency.
      operationId: listCouponsForProductFamily
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 30. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 30
          examples:
          - 50
      - name: filter[date_field]
        in: query
        description: The type of filter you would like to apply to your search. Use in query `filter[date_field]=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search. Use in query `filter[date_field]=created_at`.
            examples:
            - updated_at
      - name: filter[end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. Use in query `filter[date_field]=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-15
      - name: filter[end_datetime]
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date. Use in query `?filter[end_datetime]=2011-12-1T10:15:30+01:00`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. Use in query `filter[start_date]=2011-12-17`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-17
      - name: filter[start_datetime]
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date. Use in query `filter[start_datetime]=2011-12-19T10:15:30+01:00`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2011-12-19T10:15:30+01:00
      - name: filter[ids]
        in: query
        description: Allows fetching coupons with matching id based on provided values. Use in query `filter[ids]=1,2,3`.
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: filter[codes]
        in: query
        description: Allows fetching coupons with matching codes based on provided values. Use in query `filter[codes]=free,free_trial`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - free
            - free_trial
      - name: currency_prices
        in: query
        description: When fetching coupons, if you have defined multiple currencies at the site level, you can optionally pass the `?currency_prices=true` query param to include an array of currency price data in the response. Use in query `currency_prices=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching coupons with matching use_site_exchange_rate based on provided value. Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CouponResponse'
                description: ''
                examples:
                - - coupon:
                      id: 999999
                      name: 50% coupon
                      code: 50PERCENT
                      description: 50 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '50'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions: []
                      use_site_exchange_rate: true
                  - coupon:
                      id: 123456
                      name: 100% coupon
                      code: 100PERCENT
                      description: 100 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '50'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions: []
                      use_site_exchange_rate: true
                  - coupon:
                      id: 888888
                      name: 25% coupon
                      code: 25PERCENT
                      description: 25 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '25'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions:
                      - id: 37
                        item_type: Component
                        item_id: 519
                        name: test
                        handle: null
                      use_site_exchange_rate: true
                contentMediaType: application/json
              examples:
                example:
                  value:
                  - coupon:
                      id: 999999
                      name: 50% coupon
                      code: 50PERCENT
                      description: 50 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '50'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions: []
                      use_site_exchange_rate: true
                  - coupon:
                      id: 123456
                      name: 100% coupon
                      code: 100PERCENT
                      description: 100 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '50'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions: []
                      use_site_exchange_rate: true
                  - coupon:
                      id: 888888
                      name: 25% coupon
                      code: 25PERCENT
                      description: 25 PERCENT OFF
                      amount_in_cents: null
                      product_family_id: 527890
                      created_at: 2016-10-21T17:02:08-04:00
                      updated_at: 2016-10-21T17:06:11-04:00
                      start_date: 2016-10-21T17:02:08-04:00
                      end_date: null
                      percentage: '25'
                      recurring: true
                      duration_period_count: null
                      duration_interval: 1
                      duration_interval_unit: day
                      allow_negative_balance: true
                      archived_at: null
                      conversion_limit: '100'
                      stackable: false
                      compounding_strategy: compound
                      coupon_restrictions:
                      - id: 37
                        item_type: Component
                        item_id: 519
                        name: test
                        handle: null
                      use_site_exchange_rate: true
      deprecated: false
    parameters: []
  /coupons/find.json:
    get:
      tags:
      - Coupons
      summary: readCouponByCode
      description: >-
        You can search for a coupon via the API with the find method. By passing a code parameter, the find will attempt to locate a coupon that matches that code. If no coupon is found, a 404 is returned.


        If you have more than one product family and if the coupon you are trying to find does not belong to the default product family in your site, then you will need to specify (either in the url or as a query string param) the product family id.
      operationId: readCouponByCode
      parameters:
      - name: product_family_id
        in: query
        description: The Chargify id of the product family to which the coupon belongs
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: code
        in: query
        description: The code of the coupon
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/coupons/{coupon_id}.json:
    get:
      tags:
      - Coupons
      summary: readCoupon
      description: >-
        You can retrieve the Coupon via the API with the Show method. You must identify the Coupon in this call by the ID parameter that Chargify assigns.

        If instead you would like to find a Coupon using a Coupon code, see the Coupon Find method.


        When fetching a coupon, if you have defined multiple currencies at the site level, you can optionally pass the `?currency_prices=true` query param to include an array of currency price data in the response.


        If the coupon is set to `use_site_exchange_rate: true`, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency.
      operationId: readCoupon
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponResponse'
                - examples:
                  - coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: null
                      product_family_id: 4
                      product_family_name: Billing Plans
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: '33.3333'
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: null
                      product_family_id: 4
                      product_family_name: Billing Plans
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: '33.3333'
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
      deprecated: false
    put:
      tags:
      - Coupons
      summary: updateCoupon
      description: >-
        ## Update Coupon


        You can update a Coupon via the API with a PUT request to the resource endpoint.


        You can restrict a coupon to only apply to specific products / components by optionally passing in hashes of `restricted_products` and/or `restricted_components` in the format:

        `{ "<product/component_id>": boolean_value }`
      operationId: updateCoupon
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateorUpdateCoupon'
              - examples:
                - coupon:
                    name: 15% off
                    code: 15OFF
                    description: 15% off for life
                    percentage: 15
                    allow_negative_balance: false
                    recurring: false
                    end_date: 2012-08-29T12:00:00-04:00
                    product_family_id: '2'
                    stackable: true
                    compounding_strategy: compound
                  restricted_products:
                    '1': true
                  restricted_components:
                    '1': true
                    '2': false
              contentMediaType: application/json
            examples:
              Example:
                value:
                  coupon:
                    name: 15% off
                    code: 15OFF
                    description: 15% off for life
                    percentage: 15
                    allow_negative_balance: false
                    recurring: false
                    end_date: 2012-08-29T12:00:00-04:00
                    product_family_id: '2'
                    stackable: true
                    compounding_strategy: compound
                  restricted_products:
                    '1': true
                  restricted_components:
                    '1': true
                    '2': false
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponResponse'
                - examples:
                  - coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
      deprecated: false
    delete:
      tags:
      - Coupons
      summary: archiveCoupon
      description: >-
        You can archive a Coupon via the API with the archive method.

        Archiving makes that Coupon unavailable for future use, but allows it to remain attached and functional on existing Subscriptions that are using it.

        The `archived_at` date and time will be assigned.
      operationId: archiveCoupon
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponResponse'
                - examples:
                  - coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: 2016-12-02T13:09:33-05:00
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    coupon:
                      id: 67
                      name: Foo Bar
                      code: YEPPER99934
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-08T10:01:15-05:00
                      updated_at: 2017-11-08T10:01:15-05:00
                      start_date: 2017-11-08T10:01:15-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: 2016-12-02T13:09:33-05:00
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: compound
                      coupon_restrictions: []
      deprecated: false
    parameters: []
  /coupons.json:
    get:
      tags:
      - Coupons
      summary: listCoupons
      description: >-
        You can retrieve a list of coupons.


        If the coupon is set to `use_site_exchange_rate: true`, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency.
      operationId: listCoupons
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 30. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 30
          examples:
          - 50
      - name: date_field
        in: query
        description: 'The field was deprecated: on January 20, 2022. We recommend using filter[date_field] instead to achieve the same result. The type of filter you would like to apply to your search.'
        deprecated: true
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: 'The field was deprecated: on January 20, 2022. We recommend using filter[date_field] instead to achieve the same result. The type of filter you would like to apply to your search.'
            examples:
            - updated_at
            deprecated: true
      - name: start_date
        in: query
        description: 'The field was deprecated: on January 20, 2022. We recommend using filter[start_date] instead to achieve the same result. The start date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.'
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-17
          deprecated: true
      - name: end_date
        in: query
        description: 'The field was deprecated: on January 20, 2022. We recommend using filter[end_date] instead to achieve the same result. The end date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.'
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          deprecated: true
      - name: start_datetime
        in: query
        description: "The field was deprecated: on January 20, 2022. We recommend using filter[start_datetime] instead to achieve the same result. The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date."
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
          deprecated: true
      - name: end_datetime
        in: query
        description: "The field was deprecated: on January 20, 2022. We recommend using filter[end_datetime] instead to achieve the same result. The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date."
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
          deprecated: true
      - name: filter[ids]
        in: query
        description: Allows fetching coupons with matching id based on provided values. Use in query `filter[ids]=1,2,3`.
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: filter[codes]
        in: query
        description: Allows fetching coupons with matching code based on provided values. Use in query `filter[ids]=1,2,3`.
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
          examples:
          - - free
            - free_trial
      - name: currency_prices
        in: query
        description: When fetching coupons, if you have defined multiple currencies at the site level, you can optionally pass the `?currency_prices=true` query param to include an array of currency price data in the response. Use in query `currency_prices=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      - name: filter[end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. Use in query `filter[end_date]=2011-12-17`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: filter[end_datetime]
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date. Use in query `filter[end_datetime]=2011-12-19T10:15:30+01:00`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns coupons with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. Use in query `filter[start_date]=2011-12-19`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-17
      - name: filter[start_datetime]
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns coupons with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date. Use in query `filter[start_datetime]=2011-12-19T10:15:30+01:00`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[date_field]
        in: query
        description: The type of filter you would like to apply to your search. Use in query `filter[date_field]=updated_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search. Use in query `filter[date_field]=updated_at`.
            examples:
            - updated_at
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching coupons with matching use_site_exchange_rate based on provided value. Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CouponResponse'
                description: ''
                examples:
                - - coupon:
                      id: 0
                      name: string
                      code: string
                      description: string
                      amount: 0
                      amount_in_cents: 0
                      product_family_id: 0
                      product_family_name: string
                      start_date: string
                      end_date: string
                      percentage: '10'
                      recurring: true
                      recurring_scheme: do_not_recur
                      duration_period_count: 0
                      duration_interval: 0
                      duration_interval_unit: string
                      duration_interval_span: string
                      allow_negative_balance: true
                      archived_at: string
                      conversion_limit: string
                      stackable: true
                      compounding_strategy: compound
                      use_site_exchange_rate: true
                      created_at: string
                      updated_at: string
                      discount_type: amount
                      exclude_mid_period_allocations: true
                      apply_on_cancel_at_end_of_period: true
                      coupon_restrictions:
                      - id: 0
                        item_type: Component
                        item_id: 0
                        name: string
                        handle: string
                contentMediaType: application/json
              examples:
                example:
                  value:
                  - coupon:
                      id: 0
                      name: string
                      code: string
                      description: string
                      amount: 0
                      amount_in_cents: 0
                      product_family_id: 0
                      product_family_name: string
                      start_date: string
                      end_date: string
                      percentage: '10'
                      recurring: true
                      recurring_scheme: do_not_recur
                      duration_period_count: 0
                      duration_interval: 0
                      duration_interval_unit: string
                      duration_interval_span: string
                      allow_negative_balance: true
                      archived_at: string
                      conversion_limit: string
                      stackable: true
                      compounding_strategy: compound
                      use_site_exchange_rate: true
                      created_at: string
                      updated_at: string
                      discount_type: amount
                      exclude_mid_period_allocations: true
                      apply_on_cancel_at_end_of_period: true
                      coupon_restrictions:
                      - id: 0
                        item_type: Component
                        item_id: 0
                        name: string
                        handle: string
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/coupons/{coupon_id}/usage.json:
    get:
      tags:
      - Coupons
      summary: readCouponUsage
      description: This request will provide details about the coupon usage as an array of data hashes, one per product.
      operationId: readCouponUsage
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the coupon belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CouponUsage'
                description: ''
                examples:
                - - name: No cost product
                    id: 3903594
                    signups: 0
                    savings: 0
                    savings_in_cents: 0
                    revenue: 0
                    revenue_in_cents: 0
                  - name: Product that expires
                    id: 3853680
                    signups: 0
                    savings: 0
                    savings_in_cents: 0
                    revenue: 0
                    revenue_in_cents: 0
                  - name: Trial Product
                    id: 3861800
                    signups: 1
                    savings: 30
                    savings_in_cents: 3000
                    revenue: 20
                    revenue_in_cents: 2000
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - name: No cost product
                    id: 3903594
                    signups: 0
                    savings: 0
                    savings_in_cents: 0
                    revenue: 0
                    revenue_in_cents: 0
                  - name: Product that expires
                    id: 3853680
                    signups: 0
                    savings: 0
                    savings_in_cents: 0
                    revenue: 0
                    revenue_in_cents: 0
                  - name: Trial Product
                    id: 3861800
                    signups: 1
                    savings: 30
                    savings_in_cents: 3000
                    revenue: 20
                    revenue_in_cents: 2000
      deprecated: false
    parameters: []
  /coupons/validate.json:
    get:
      tags:
      - Coupons
      summary: validateCoupon
      description: >-
        You can verify if a specific coupon code is valid using the `validate` method. This method is useful for validating coupon codes that are entered by a customer. If the coupon is found and is valid, the coupon will be returned with a 200 status code.


        If the coupon is invalid, the status code will be 404 and the response will say why it is invalid. If the coupon is valid, the status code will be 200 and the coupon will be returned. The following reasons for invalidity are supported:


        + Coupon not found

        + Coupon is invalid

        + Coupon expired


        If you have more than one product family and if the coupon you are validating does not belong to the first product family in your site, then you will need to specify the product family, either in the url or as a query string param. This can be done by supplying the id or the handle in the `handle:my-family` format.


        Eg.


        ```

        https://<subdomain>.chargify.com/product_families/handle:<product_family_handle>/coupons/validate.<format>?code=<coupon_code>

        ```


        Or:


        ```

        https://<subdomain>.chargify.com/coupons/validate.<format>?code=<coupon_code>&product_family_id=<id>

        ```
      operationId: validateCoupon
      parameters:
      - name: code
        in: query
        description: The code of the coupon
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: product_family_id
        in: query
        description: The Chargify id of the product family to which the coupon belongs
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponResponse'
                - examples:
                  - coupon:
                      id: 66
                      name: Foo Bar
                      code: YEPPER9993
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-07T14:51:52-05:00
                      updated_at: 2017-11-07T15:14:24-05:00
                      start_date: 2017-11-07T14:51:52-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: full-price
                      coupon_restrictions: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    coupon:
                      id: 66
                      name: Foo Bar
                      code: YEPPER9993
                      description: my cool coupon
                      amount_in_cents: 10000
                      product_family_id: 4
                      created_at: 2017-11-07T14:51:52-05:00
                      updated_at: 2017-11-07T15:14:24-05:00
                      start_date: 2017-11-07T14:51:52-05:00
                      end_date: null
                      percentage: null
                      recurring: false
                      duration_period_count: null
                      duration_interval: null
                      duration_interval_unit: null
                      allow_negative_balance: false
                      archived_at: null
                      conversion_limit: null
                      stackable: true
                      compounding_strategy: full-price
                      coupon_restrictions: []
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleStringErrorResponse1'
                - examples:
                  - errors: Coupon code could not be found.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors: Coupon code could not be found.
      deprecated: false
    parameters: []
  /coupons/{coupon_id}/currency_prices.json:
    put:
      tags:
      - Coupons
      summary: updateCouponCurrencyPrices
      description: >-
        This endpoint allows you to create and/or update currency prices for an existing coupon. Multiple prices can be created or updated in a single request but each of the currencies must be defined on the site level already and the coupon must be an amount-based coupon, not percentage.


        Currency pricing for coupons must mirror the setup of the primary coupon pricing - if the primary coupon is percentage based, you will not be able to define pricing in non-primary currencies.
      operationId: updateCouponCurrencyPrices
      parameters:
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CouponCurrencyRequest'
              - examples:
                - currency_prices:
                  - currency: EUR
                    price: 10
                  - currency: GBP
                    price: 9
              contentMediaType: application/json
            examples:
              Example:
                value:
                  currency_prices:
                  - currency: EUR
                    price: 10
                  - currency: GBP
                    price: 9
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponCurrencyResponse'
      deprecated: false
    parameters: []
  /coupons/{coupon_id}/codes.json:
    post:
      tags:
      - Coupons
      summary: createCouponSubcodes
      description: >-
        ## Coupon Subcodes Intro


        Coupon Subcodes allow you to create a set of unique codes that allow you to expand the use of one coupon.


        For example:


        Master Coupon Code:


        + SPRING2020


        Coupon Subcodes:


        + SPRING90210

        + DP80302

        + SPRINGBALTIMORE


        Coupon subcodes can be administered in the Admin Interface or via the API.


        When creating a coupon subcode, you must specify a coupon to attach it to using the coupon_id. Valid coupon subcodes are all capital letters, contain only letters and numbers, and do not have any spaces. Lowercase letters will be capitalized before the subcode is created.


        ## Coupon Subcodes Documentation


        Full documentation on how to create coupon subcodes in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407755909531#coupon-codes).


        Additionally, for documentation on how to apply a coupon to a Subscription within the Chargify UI, please see our documentation [here](https://chargify.zendesk.com/hc/en-us/articles/4407884887835#coupon).


        ## Create Coupon Subcode


        This request allows you to create specific subcodes underneath an existing coupon code.


        *Note*: If you are using any of the allowed special characters ("%", "@", "+", "-", "_", and "."), you must encode them for use in the URL.

            % to %25
            @ to %40
            + to %2B
            - to %2D
            _ to %5F
            . to %2E

        So, if the coupon subcode is `20%OFF`, the URL to delete this coupon subcode would be: `https://<subdomain>.chargify.com/coupons/567/codes/20%25OFF.<format>`
      operationId: createCouponSubcodes
      parameters:
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CouponSubcodes'
              - examples:
                - codes:
                  - BALTIMOREFALL
                  - ORLANDOFALL
                  - DETROITFALL
              contentMediaType: application/json
            examples:
              Example:
                value:
                  codes:
                  - BALTIMOREFALL
                  - ORLANDOFALL
                  - DETROITFALL
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponSubcodesResponse'
                - examples:
                  - created_codes:
                    - BALTIMOREFALL
                    - ORLANDOFALL
                    - DETROITFALL
                    duplicate_codes: []
                    invalid_codes: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    created_codes:
                    - BALTIMOREFALL
                    - ORLANDOFALL
                    - DETROITFALL
                    duplicate_codes: []
                    invalid_codes: []
      deprecated: false
    get:
      tags:
      - Coupons
      summary: listCouponSubcodes
      description: This request allows you to request the subcodes that are attached to a coupon.
      operationId: listCouponSubcodes
      parameters:
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CouponSubcodes'
                - examples:
                  - codes:
                    - 3JU6PR
                    - 9RO6MP
                    - 8OG1VV
                    - 5FL7VV
                    - 2SV8XK
                    - 4LW8LH
                    - 3VL4GZ
                    - 9UI9XO
                    - 0LZ0CC
                    - 8XI9JV
                    - 9UV5YE
                    - 3UI4GX
                    - 6SL5ST
                    - 9WC8IJ
                    - 2KA3PZ
                    - 7WR1VR
                    - 3VY7MN
                    - 6KC3KB
                    - 7DF7YT
                    - 9FH1ED
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    codes:
                    - 3JU6PR
                    - 9RO6MP
                    - 8OG1VV
                    - 5FL7VV
                    - 2SV8XK
                    - 4LW8LH
                    - 3VL4GZ
                    - 9UI9XO
                    - 0LZ0CC
                    - 8XI9JV
                    - 9UV5YE
                    - 3UI4GX
                    - 6SL5ST
                    - 9WC8IJ
                    - 2KA3PZ
                    - 7WR1VR
                    - 3VY7MN
                    - 6KC3KB
                    - 7DF7YT
                    - 9FH1ED
      deprecated: false
    put:
      tags:
      - Coupons
      summary: updateCouponSubcodes
      description: >-
        You can update the subcodes for the given Coupon via the API with a PUT request to the resource endpoint.

        Send an array of new coupon subcodes.


        **Note**: All current subcodes for that Coupon will be deleted first, and replaced with the list of subcodes sent to this endpoint.

        The response will contain:


        + The created subcodes,


        + Subcodes that were not created because they already exist,


        + Any subcodes not created because they are invalid.
      operationId: updateCouponSubcodes
      parameters:
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CouponSubcodes'
              - examples:
                - codes:
                  - AAAA
                  - BBBB
                  - CCCC
              contentMediaType: application/json
            examples:
              Example:
                value:
                  codes:
                  - AAAA
                  - BBBB
                  - CCCC
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponSubcodesResponse'
      deprecated: false
    parameters: []
  /coupons/{coupon_id}/codes/{subcode}.json:
    delete:
      tags:
      - Coupons
      summary: deleteCouponSubcode
      description: >-
        ## Example


        Given a coupon with an ID of 567, and a coupon subcode of 20OFF, the URL to `DELETE` this coupon subcode would be:


        ```

        http://subdomain.chargify.com/coupons/567/codes/20OFF.<format>

        ```


        Note: If you are using any of the allowed special characters (“%”, “@”, “+”, “-”, “_”, and “.”), you must encode them for use in the URL.


        | Special character | Encoding |

        |-------------------|----------|

        | %                 | %25      |

        | @                 | %40      |

        | +                 | %2B      |

        | –                 | %2D      |

        | _                 | %5F      |

        | .                 | %2E      |


        ## Percent Encoding Example


        Or if the coupon subcode is 20%OFF, the URL to delete this coupon subcode would be: @https://<subdomain>.chargify.com/coupons/567/codes/20%25OFF.<format>
      operationId: deleteCouponSubcode
      parameters:
      - name: coupon_id
        in: path
        description: The Chargify id of the coupon to which the subcode belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: subcode
        in: path
        description: The subcode of the coupon
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/metered_components.json:
    post:
      tags:
      - Components
      summary: createMeteredComponent
      description: >-
        This request will create a component definition of kind **metered_component** under the specified product family. Metered component can then be added and “allocated” for a subscription.


        Metered components are used to bill for any type of unit that resets to 0 at the end of the billing period (think daily Google Adwords clicks or monthly cell phone minutes). This is most commonly associated with usage-based billing and many other pricing schemes.


        Note that this is different from recurring quantity-based components, which DO NOT reset to zero at the start of every billing period. If you want to bill for a quantity of something that does not change unless you change it, then you want quantity components, instead.


        For more information on components, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677).
      operationId: createMeteredComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateMeteredComponent'
              - examples:
                - metered_component:
                    name: Text messages
                    unit_name: text message
                    pricing_scheme: per_unit
                    taxable: false
                    prices:
                    - starting_quantity: 1
                      unit_price: 1
              contentMediaType: application/json
            examples:
              Example:
                value:
                  metered_component:
                    name: Text messages
                    unit_name: text message
                    pricing_scheme: per_unit
                    taxable: false
                    prices:
                    - starting_quantity: 1
                      unit_price: 1
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 292609
                      name: Text messages
                      handle: text-messages
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: metered_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      prices:
                      - id: 55423
                        component_id: 30002
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '10.0'
                        price_point_id: 2944263
                        formatted_unit_price: $10.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 292609
                      name: Text messages
                      handle: text-messages
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: metered_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      prices:
                      - id: 55423
                        component_id: 30002
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '10.0'
                        price_point_id: 2944263
                        formatted_unit_price: $10.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - At least 1 price bracket must be defined
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - At least 1 price bracket must be defined
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/quantity_based_components.json:
    post:
      tags:
      - Components
      summary: createQuantityBasedComponent
      description: >-
        This request will create a component definition of kind **quantity_based_component** under the specified product family. Quantity Based component can then be added and “allocated” for a subscription.


        When defining Quantity Based component, You can choose one of 2 types:

        #### Recurring

        Recurring quantity-based components are used to bill for the number of some unit (think monthly software user licenses or the number of pairs of socks in a box-a-month club). This is most commonly associated with billing for user licenses, number of users, number of employees, etc.


        #### One-time

        One-time quantity-based components are used to create ad hoc usage charges that do not recur. For example, at the time of signup, you might want to charge your customer a one-time fee for onboarding or other services.


        The allocated quantity for one-time quantity-based components immediately gets reset back to zero after the allocation is made.


        For more information on components, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677).
      operationId: createQuantityBasedComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateQuantityBasedComponent'
              - examples:
                - '{"quantity_based_component":{"name":"Quantity Based Component","unit_name":"Component","description":"Example of JSON per-unit component example","pricing_scheme":"per_unit","unit_price":"10","taxable":true,"display_on_hosted_page":true,"allow_fractional_quantities":true,"public_signup_page_ids":[323397]}}'
                - '{"quantity_based_component":{"name":"Quantity Based Component","unit_name":"Quantity Based Component","description":"Example of JSON stairstep example","pricing_scheme":"stairstep","taxable":true,"prices":[{"starting_quantity":"1","ending_quantity":"100","unit_price":"50"},{"starting_quantity":"101","ending_quantity":"200","unit_price":"10"}],"display_on_hosted_page":true,"allow_fractional_quantities":true,"public_signup_page_ids":[323397]}}'
                - '{"quantity_based_component":{"name":"Quantity Based Component","unit_name":"Quantity Based Component","description":"Example of JSON volume component example","pricing_scheme":"volume","taxable":true,"prices":[{"starting_quantity":1,"ending_quantity":10,"unit_price":10.0},{"starting_quantity":11,"ending_quantity":20,"unit_price":5}],"display_on_hosted_page":true,"allow_fractional_quantities":true,"public_signup_page_ids":[323397]}}'
                - '{"quantity_based_component":{"name":"Quantity Based Component","unit_name":"Quantity Based Component","description":"Example of JSON for tiered quantity based component","taxable":true,"pricing_scheme":"tiered","prices":[{"starting_quantity":0,"ending_quantity":20,"unit_price":50},{"starting_quantity":21,"ending_quantity":40,"unit_price":25}],"display_on_hosted_page":true,"allow_fractional_quantities":true,"public_signup_page_ids":[323397]}}'
              contentMediaType: application/json
            examples:
              Quantity Based (per unit):
                value:
                  quantity_based_component:
                    name: Quantity Based Component
                    unit_name: Component
                    description: Example of JSON per-unit component example
                    pricing_scheme: per_unit
                    unit_price: '10'
                    taxable: true
                    display_on_hosted_page: true
                    allow_fractional_quantities: true
                    public_signup_page_ids:
                    - 323397
              Quantity Based (stairstep):
                value:
                  quantity_based_component:
                    name: Quantity Based Component
                    unit_name: Quantity Based Component
                    description: Example of JSON stairstep example
                    pricing_scheme: stairstep
                    taxable: true
                    prices:
                    - starting_quantity: '1'
                      ending_quantity: '100'
                      unit_price: '50'
                    - starting_quantity: '101'
                      ending_quantity: '200'
                      unit_price: '10'
                    display_on_hosted_page: true
                    allow_fractional_quantities: true
                    public_signup_page_ids:
                    - 323397
              Quantity Based (volume):
                value:
                  quantity_based_component:
                    name: Quantity Based Component
                    unit_name: Quantity Based Component
                    description: Example of JSON volume component example
                    pricing_scheme: volume
                    taxable: true
                    prices:
                    - starting_quantity: 1
                      ending_quantity: 10
                      unit_price: 10
                    - starting_quantity: 11
                      ending_quantity: 20
                      unit_price: 5
                    display_on_hosted_page: true
                    allow_fractional_quantities: true
                    public_signup_page_ids:
                    - 323397
              Quantity Based (tiered):
                value:
                  quantity_based_component:
                    name: Quantity Based Component
                    unit_name: Quantity Based Component
                    description: Example of JSON for tiered quantity based component
                    taxable: true
                    pricing_scheme: tiered
                    prices:
                    - starting_quantity: 0
                      ending_quantity: 20
                      unit_price: 50
                    - starting_quantity: 21
                      ending_quantity: 40
                      unit_price: 25
                    display_on_hosted_page: true
                    allow_fractional_quantities: true
                    public_signup_page_ids:
                    - 323397
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 292609
                      name: Text messages
                      handle: text-messages
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      prices:
                      - id: 55423
                        component_id: 30002
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '10.0'
                        price_point_id: 2944263
                        formatted_unit_price: $10.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 292609
                      name: Text messages
                      handle: text-messages
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      prices:
                      - id: 55423
                        component_id: 30002
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '10.0'
                        price_point_id: 2944263
                        formatted_unit_price: $10.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - At least 1 price bracket must be defined
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - At least 1 price bracket must be defined
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/on_off_components.json:
    post:
      tags:
      - Components
      summary: createOnOffComponent
      description: >-
        This request will create a component definition of kind **on_off_component** under the specified product family. On/Off component can then be added and “allocated” for a subscription.


        On/off components are used for any flat fee, recurring add on (think $99/month for tech support or a flat add on shipping fee).


        For more information on components, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677).
      operationId: createOnOffComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateOnOffComponent'
              - examples:
                - '{"on_off_component":{"name":"Annual Support Services","description":"Prepay for support services","taxable":true,"prices":[{"unit_price":"100.00","starting_quantity":"0"}],"display_on_hosted_page":true,"public_signup_page_ids":[320495]}}'
                - '{"on_off_component":{"name":"Annual Support Services","description":"Prepay for support services","taxable":true,"prices":[{"unit_price":"100.00","starting_quantity":0}],"display_on_hosted_page":true,"public_signup_page_ids":[320495],"price_points":[{"name":"Wholesale","handle":"wholesale-handle","pricing_scheme":"per_unit","prices":[{"starting_quantity":0,"unit_price":"89.00"}]}]}}'
                - '{"on_off_component":{"name":"Annual Support Services","description":"Prepay for support services","taxable":true,"prices":[{"unit_price":"100.00","starting_quantity":0}],"display_on_hosted_page":true,"public_signup_page_ids":[320495],"upgrade_charge":"full","downgrade_credit":"prorated"}}'
              contentMediaType: application/json
            examples:
              On/Off:
                value:
                  on_off_component:
                    name: Annual Support Services
                    description: Prepay for support services
                    taxable: true
                    prices:
                    - unit_price: '100.00'
                      starting_quantity: '0'
                    display_on_hosted_page: true
                    public_signup_page_ids:
                    - 320495
              On/Off with Price Points:
                value:
                  on_off_component:
                    name: Annual Support Services
                    description: Prepay for support services
                    taxable: true
                    prices:
                    - unit_price: '100.00'
                      starting_quantity: 0
                    display_on_hosted_page: true
                    public_signup_page_ids:
                    - 320495
                    price_points:
                    - name: Wholesale
                      handle: wholesale-handle
                      pricing_scheme: per_unit
                      prices:
                      - starting_quantity: 0
                        unit_price: '89.00'
              On/Off with Default Proration Schemes:
                value:
                  on_off_component:
                    name: Annual Support Services
                    description: Prepay for support services
                    taxable: true
                    prices:
                    - unit_price: '100.00'
                      starting_quantity: 0
                    display_on_hosted_page: true
                    public_signup_page_ids:
                    - 320495
                    upgrade_charge: full
                    downgrade_credit: prorated
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 292609
                      name: Test On-Off Component 46124
                      handle: test-on-off-component-4612422802
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 292609
                      name: Test On-Off Component 46124
                      handle: test-on-off-component-4612422802
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Cloud Compute Servers
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: 2944263
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                    - 'Unit price: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
                    - 'Unit price: cannot be blank.'
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/prepaid_usage_components.json:
    post:
      tags:
      - Components
      summary: createPrepaidUsageComponent
      description: >-
        This request will create a component definition of kind **prepaid_usage_component** under the specified product family. Prepaid component can then be added and “allocated” for a subscription.


        Prepaid components allow customers to pre-purchase units that can be used up over time on their subscription. In a sense, they are the mirror image of metered components; while metered components charge at the end of the period for the amount of units used, prepaid components are charged for at the time of purchase, and we subsequently keep track of the usage against the amount purchased.


        For more information on components, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677).
      operationId: createPrepaidUsageComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePrepaidComponent'
              - examples:
                - prepaid_usage_component:
                    name: Minutes
                    unit_name: minutes
                    unit_price: 2
                    pricing_scheme: per_unit
                    rollover_prepaid_remainder: true
                    renew_prepaid_allocation: true
                    expiration_interval: 15
                    expiration_interval_unit: day
                    overage_pricing:
                      pricing_scheme: stairstep
                      prices:
                      - starting_quantity: 1
                        ending_quantity: 100
                        unit_price: 3
                      - starting_quantity: 101
                        unit_price: 5
              contentMediaType: application/json
            examples:
              Prepaid Usage:
                value:
                  prepaid_usage_component:
                    name: Minutes
                    unit_name: minutes
                    unit_price: 2
                    pricing_scheme: per_unit
                    rollover_prepaid_remainder: true
                    renew_prepaid_allocation: true
                    expiration_interval: 15
                    expiration_interval_unit: day
                    overage_pricing:
                      pricing_scheme: stairstep
                      prices:
                      - starting_quantity: 1
                        ending_quantity: 100
                        unit_price: 3
                      - starting_quantity: 101
                        unit_price: 5
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 292609
                      name: Test Prepaid Component 98505
                      handle: test-prepaid-component-9850584842
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Test Product Family 27791
                      price_per_unit_in_cents: null
                      kind: prepaid_usage_component
                      archived: false
                      taxable: false
                      description: 'Description for: Test Prepaid Component 98505'
                      default_price_point_id: 2944263
                      overage_prices:
                      - id: 55964
                        component_id: 30427
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 2944756
                        formatted_unit_price: $1.00
                        segment_id: null
                      prices:
                      - id: 55963
                        component_id: 30427
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 2944756
                        formatted_unit_price: $1.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 292609
                      name: Test Prepaid Component 98505
                      handle: test-prepaid-component-9850584842
                      pricing_scheme: per_unit
                      unit_name: unit
                      unit_price: '10.0'
                      product_family_id: 528484
                      product_family_name: Test Product Family 27791
                      price_per_unit_in_cents: null
                      kind: prepaid_usage_component
                      archived: false
                      taxable: false
                      description: 'Description for: Test Prepaid Component 98505'
                      default_price_point_id: 2944263
                      overage_prices:
                      - id: 55964
                        component_id: 30427
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 2944756
                        formatted_unit_price: $1.00
                        segment_id: null
                      prices:
                      - id: 55963
                        component_id: 30427
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 2944756
                        formatted_unit_price: $1.00
                        segment_id: null
                      price_point_count: 1
                      price_points_url: https://demo-3238403362.chargify.com/components/30002/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2024-01-23T06:08:05-05:00
                      updated_at: 2024-01-23T06:08:05-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: true
                      item_category: null
                      accounting_code: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - '{"errors":["Handle must be unique within a Site.","Name: must be unique - that value has been taken."]}'
                  - '{"errors":["Name: cannot be blank.","Pricing scheme: cannot be blank.","Pricing scheme: is not one of the allowed values."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                    - Handle must be unique within a Site.
                    - 'Name: must be unique - that value has been taken.'
                Example-2:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/event_based_components.json:
    post:
      tags:
      - Components
      summary: createEventBasedComponent
      description: "This request will create a component definition of kind **event_based_component** under the specified product family. Event-based component can then be added and “allocated” for a subscription.\n\nEvent-based components are similar to other component types, in that you define the component parameters (such as name and taxability) and the pricing. A key difference for the event-based component is that it must be attached to a metric. This is because the metric provides the component with the actual quantity used in computing what and how much will be billed each period for each subscription.\n\nSo, instead of reporting usage directly for each component (as you would with metered components), the usage is derived from analysis of your events. \n\nFor more information on components, please see our documentation [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677)."
      operationId: createEventBasedComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateEBBComponent'
              - examples:
                - event_based_component:
                    name: Component Name
                    unit_name: string
                    description: string
                    handle: some_handle
                    taxable: true
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: '0.49'
                    event_based_billing_metric_id: 123
              contentMediaType: application/json
            examples:
              Event Based Component:
                value:
                  event_based_component:
                    name: Component Name
                    unit_name: string
                    description: string
                    handle: some_handle
                    taxable: true
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: '0.49'
                    event_based_billing_metric_id: 123
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 1489581
                      name: stripeCharges
                      handle: null
                      pricing_scheme: null
                      unit_name: charge
                      unit_price: null
                      product_family_id: 1517093
                      product_family_name: Billing Plans
                      price_per_unit_in_cents: null
                      kind: event_based_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: null
                      prices: []
                      price_point_count: 0
                      price_points_url: https://staging.chargify.com/components/1489581/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2021-10-12T07:33:24-05:00
                      updated_at: 2021-10-12T07:33:24-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: null
                      item_category: null
                      accounting_code: null
                      event_based_billing_metric_id: 1163
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 1489581
                      name: stripeCharges
                      handle: null
                      pricing_scheme: null
                      unit_name: charge
                      unit_price: null
                      product_family_id: 1517093
                      product_family_name: Billing Plans
                      price_per_unit_in_cents: null
                      kind: event_based_component
                      archived: false
                      taxable: false
                      description: null
                      default_price_point_id: null
                      prices: []
                      price_point_count: 0
                      price_points_url: https://staging.chargify.com/components/1489581/price_points
                      default_price_point_name: Original
                      tax_code: null
                      recurring: false
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2021-10-12T07:33:24-05:00
                      updated_at: 2021-10-12T07:33:24-05:00
                      archived_at: null
                      hide_date_range_on_invoice: false
                      allow_fractional_quantities: false
                      use_site_exchange_rate: null
                      item_category: null
                      accounting_code: null
                      event_based_billing_metric_id: 1163
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Metric: cannot be blank.'
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Metric: cannot be blank.'
                    - 'Name: cannot be blank.'
                    - 'Unit name: cannot be blank.'
                    - 'Pricing scheme: cannot be blank.'
                    - 'Pricing scheme: is not one of the allowed values.'
      deprecated: false
    parameters: []
  /components/lookup.json:
    get:
      tags:
      - Components
      summary: readComponentByHandle
      description: This request will return information regarding a component having the handle you provide. You can identify your components with a handle so you don't have to save or reference the IDs we generate.
      operationId: readComponentByHandle
      parameters:
      - name: handle
        in: query
        description: The handle of the component to find
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/components/{component_id}.json:
    get:
      tags:
      - Components
      summary: readComponentById
      description: >-
        This request will return information regarding a component from a specific product family.


        You may read the component by either the component's id or handle. When using the handle, it must be prefixed with `handle:`.
      operationId: readComponentById
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: Either the Chargify id of the component or the handle for the component prefixed with `handle:`
        required: true
        style: simple
        schema:
          pattern: /\A(?:\d+|handle:(?:uuid:|[a-z])(?:\w|-)+)\z/
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
      deprecated: false
    put:
      tags:
      - Components
      summary: updateProductFamilyComponent
      description: >-
        This request will update a component from a specific product family.


        You may read the component by either the component's id or handle. When using the handle, it must be prefixed with `handle:`.
      operationId: updateProductFamilyComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: Either the Chargify id of the component or the handle for the component prefixed with `handle:`
        required: true
        style: simple
        schema:
          pattern: /\A(?:\d+|handle:(?:uuid:|[a-z])(?:\w|-)+)\z/
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateComponentRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
      deprecated: false
    delete:
      tags:
      - Components
      summary: archiveComponent
      description: Sending a DELETE request to this endpoint will archive the component. All current subscribers will be unffected; their subscription/purchase will continue to be charged as usual.
      operationId: archiveComponent
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the component belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: Either the Chargify id of the component or the handle for the component prefixed with `handle:`
        required: true
        style: simple
        schema:
          pattern: /\A(?:\d+|handle:(?:uuid:|[a-z])(?:\w|-)+)\z/
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Component'
                - examples:
                  - id: 25407138
                    name: cillum aute
                    pricing_scheme: stairstep
                    unit_name: nulla in
                    unit_price: Excepteur veniam
                    product_family_id: -56705047
                    kind: prepaid_usage_component
                    archived: true
                    taxable: false
                    description: reprehenderit laborum qui fugiat
                    default_price_point_id: -64328176
                    price_point_count: 15252407
                    price_points_url: dolor mollit consequat
                    tax_code: ea nisi
                    recurring: false
                    created_at: 2016-11-08T16:22:26-05:00
                    default_price_point_name: cupidatat Lorem non aliqua
                    product_family_name: do elit
                    hide_date_range_on_invoice: false
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    id: 25407138
                    name: cillum aute
                    pricing_scheme: stairstep
                    unit_name: nulla in
                    unit_price: Excepteur veniam
                    product_family_id: -56705047
                    kind: prepaid_usage_component
                    archived: true
                    taxable: false
                    description: reprehenderit laborum qui fugiat
                    default_price_point_id: -64328176
                    price_point_count: 15252407
                    price_points_url: dolor mollit consequat
                    tax_code: ea nisi
                    recurring: false
                    created_at: 2016-11-08T16:22:26-05:00
                    default_price_point_name: cupidatat Lorem non aliqua
                    product_family_name: do elit
                    hide_date_range_on_invoice: false
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Component cannot be archived. Please make sure it hasn't already been archived.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Component cannot be archived. Please make sure it hasn't already been archived.
      deprecated: false
    parameters: []
  /components.json:
    get:
      tags:
      - Components
      summary: listComponents
      description: This request will return a list of components for a site.
      operationId: listComponents
      parameters:
      - name: date_field
        in: query
        description: The type of filter you would like to apply to your search.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.  optional
        style: form
        explode: true
        schema:
          type: string
      - name: include_archived
        in: query
        description: Include archived items
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: filter[ids]
        in: query
        description: Allows fetching components with matching id based on provided value. Use in query `filter[ids]=1,2,3`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - '1'
            - '2'
            - '3'
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching components with matching use_site_exchange_rate based on provided value (refers to default price point). Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentResponse'
                description: ''
                examples:
                - - component:
                      id: 399850
                      name: $1.00 component
                      pricing_scheme: per_unit
                      unit_name: Component
                      unit_price: '1.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: Component
                      default_price_point_id: 121000
                      prices:
                      - id: 630687
                        component_id: 399850
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 121000
                        formatted_unit_price: $1.00
                      price_point_count: 2
                      price_points_url: https://general-goods.chargify.com/components/399850/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:37-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 386937
                      name: Cancellation fee
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '35.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: ''
                      default_price_point_id: 108307
                      price_point_count: 1
                      price_points_url: https://general-goods.chargify.com/components/386937/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - component:
                      id: 399850
                      name: $1.00 component
                      pricing_scheme: per_unit
                      unit_name: Component
                      unit_price: '1.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: Component
                      default_price_point_id: 121000
                      prices:
                      - id: 630687
                        component_id: 399850
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 121000
                        formatted_unit_price: $1.00
                      price_point_count: 2
                      price_points_url: https://general-goods.chargify.com/components/399850/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:37-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 386937
                      name: Cancellation fee
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '35.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: ''
                      default_price_point_id: 108307
                      price_point_count: 1
                      price_points_url: https://general-goods.chargify.com/components/386937/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
      deprecated: false
    parameters: []
  /components/{component_id}.json:
    put:
      tags:
      - Components
      summary: updateComponent
      description: >-
        This request will update a component.


        You may read the component by either the component's id or handle. When using the handle, it must be prefixed with `handle:`.
      operationId: updateComponent
      parameters:
      - name: component_id
        in: path
        description: The id or handle of the component
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateComponentRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-02T05:54:53-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}/default.json:
    put:
      tags:
      - Components
      summary: updateDefaultPricePointForComponent
      description: >-
        Sets a new default price point for the component. This new default will apply to all new subscriptions going forward - existing subscriptions will remain on their current price point.


        See [Price Points Documentation](https://chargify.zendesk.com/hc/en-us/articles/4407755865883#price-points) for more information on price points and moving subscriptions between price points.


        Note: Custom price points are not able to be set as the default for a component.
      operationId: updateDefaultPricePointForComponent
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentResponse'
                - examples:
                  - component:
                      id: 292609
                      name: Text messages
                      pricing_scheme: stairstep
                      unit_name: text message
                      unit_price: null
                      product_family_id: 528484
                      price_per_unit_in_cents: null
                      kind: metered_component
                      archived: false
                      taxable: false
                      description: null
                      created_at: 2019-08-02T05:54:53-04:00
                      prices:
                      - id: 47
                        component_id: 292609
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 173
                        formatted_unit_price: $1.00
                      default_price_point_name: Original
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      id: 292609
                      name: Text messages
                      pricing_scheme: stairstep
                      unit_name: text message
                      unit_price: null
                      product_family_id: 528484
                      price_per_unit_in_cents: null
                      kind: metered_component
                      archived: false
                      taxable: false
                      description: null
                      created_at: 2019-08-02T05:54:53-04:00
                      prices:
                      - id: 47
                        component_id: 292609
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 173
                        formatted_unit_price: $1.00
                      default_price_point_name: Original
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/components.json:
    get:
      tags:
      - Components
      summary: listComponentsForProductFamily
      description: This request will return a list of components for a particular product family.
      operationId: listComponentsForProductFamily
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: include_archived
        in: query
        description: Include archived items.
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter[ids]
        in: query
        description: Allows fetching components with matching id based on provided value. Use in query `filter[ids]=1,2`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: date_field
        in: query
        description: The type of filter you would like to apply to your search. Use in query `date_field=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search. Use in query `date_field=created_at`.
            examples:
            - updated_at
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date. optional.
        style: form
        explode: true
        schema:
          type: string
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching components with matching use_site_exchange_rate based on provided value (refers to default price point). Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentResponse'
                description: ''
                examples:
                - - component:
                      id: 399850
                      name: $1.00 component
                      pricing_scheme: per_unit
                      unit_name: Component
                      unit_price: '1.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: Component
                      default_price_point_id: 121000
                      prices:
                      - id: 630687
                        component_id: 399850
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 121000
                        formatted_unit_price: $1.00
                      price_point_count: 2
                      price_points_url: https://general-goods.chargify.com/components/399850/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:37-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 386937
                      name: Cancellation fee
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '35.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: ''
                      default_price_point_id: 108307
                      price_point_count: 1
                      price_points_url: https://general-goods.chargify.com/components/386937/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - component:
                      id: 399850
                      name: $1.00 component
                      pricing_scheme: per_unit
                      unit_name: Component
                      unit_price: '1.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: quantity_based_component
                      archived: false
                      taxable: false
                      description: Component
                      default_price_point_id: 121000
                      prices:
                      - id: 630687
                        component_id: 399850
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 121000
                        formatted_unit_price: $1.00
                      price_point_count: 2
                      price_points_url: https://general-goods.chargify.com/components/399850/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 399853
                      name: Annual Support Services
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '100.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: true
                      description: Prepay for support services
                      default_price_point_id: 121003
                      price_point_count: 4
                      price_points_url: https://general-goods.chargify.com/components/399853/price_points
                      tax_code: D0000000
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:37-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
                  - component:
                      id: 386937
                      name: Cancellation fee
                      pricing_scheme: null
                      unit_name: on/off
                      unit_price: '35.0'
                      product_family_id: 997233
                      price_per_unit_in_cents: null
                      kind: on_off_component
                      archived: false
                      taxable: false
                      description: ''
                      default_price_point_id: 108307
                      price_point_count: 1
                      price_points_url: https://general-goods.chargify.com/components/386937/price_points
                      tax_code: null
                      recurring: true
                      upgrade_charge: null
                      downgrade_credit: null
                      created_at: 2019-08-01T09:35:38-04:00
                      default_price_point_name: Original
                      product_family_name: Chargify
                      use_site_exchange_rate: true
      deprecated: false
    parameters: []
  /components/{component_id}/price_points.json:
    post:
      tags:
      - Components
      summary: createComponentPricePoint
      description: This endpoint can be used to create a new price point for an existing component.
      operationId: createComponentPricePoint
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateComponentPricePointRequest'
              - examples:
                - '{"price_point":{"name":"Wholesale","handle":"wholesale-handle","pricing_scheme":"stairstep","use_site_exchange_rate":false,"prices":[{"starting_quantity":"1","ending_quantity":"100","unit_price":"5.00"},{"starting_quantity":"101","ending_quantity":null,"unit_price":"4.00"}]}}'
                - '{"price_point":{"name":"MSRP","handle":"msrp","pricing_scheme":"stairstep","renew_prepaid_allocation":false,"rollover_prepaid_remainder":true,"expiration_interval":2,"expiration_interval_unit":"month","prices":[{"starting_quantity":1,"ending_quantity":100,"unit_price":5},{"starting_quantity":101,"ending_quantity":null,"unit_price":4}],"overage_pricing":{"pricing_scheme":"stairstep","prices":[{"starting_quantity":1,"ending_quantity":100,"unit_price":4}]}}}'
                - '{"price_point":{"name":"Special Pricing","handle":"special","pricing_scheme":"per_unit","prices":[{"starting_quantity":1,"unit_price":5}]}}'
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_point:
                    name: Wholesale
                    handle: wholesale-handle
                    pricing_scheme: stairstep
                    use_site_exchange_rate: false
                    prices:
                    - starting_quantity: '1'
                      ending_quantity: '100'
                      unit_price: '5.00'
                    - starting_quantity: '101'
                      ending_quantity: null
                      unit_price: '4.00'
              Prepaid Usage Component:
                value:
                  price_point:
                    name: MSRP
                    handle: msrp
                    pricing_scheme: stairstep
                    renew_prepaid_allocation: false
                    rollover_prepaid_remainder: true
                    expiration_interval: 2
                    expiration_interval_unit: month
                    prices:
                    - starting_quantity: 1
                      ending_quantity: 100
                      unit_price: 5
                    - starting_quantity: 101
                      ending_quantity: null
                      unit_price: 4
                    overage_pricing:
                      pricing_scheme: stairstep
                      prices:
                      - starting_quantity: 1
                        ending_quantity: 100
                        unit_price: 4
              On Off Component:
                value:
                  price_point:
                    name: Special Pricing
                    handle: special
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 5
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentPricePointResponse'
      deprecated: false
    get:
      tags:
      - Components
      summary: listComponentPricePoints
      description: >-
        Use this endpoint to read current price points that are associated with a component.


        You may specify the component by using either the numeric id or the `handle:gold` syntax.


        When fetching a component's price points, if you have defined multiple currencies at the site level, you can optionally pass the `?currency_prices=true` query param to include an array of currency price data in the response.


        If the price point is set to `use_site_exchange_rate: true`, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency.
      operationId: listComponentPricePoints
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: currency_prices
        in: query
        description: Include an array of currency price data
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: filter[type]
        in: query
        description: 'Use in query: `filter[type]=catalog,default`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PricePointType'
          examples:
          - - catalog
            - default
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentPricePointsresponse'
                - examples:
                  - price_points:
                    - id: 80
                      default: false
                      name: Wholesale Two
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: wholesale-two
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 121
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '5.0'
                    - id: 81
                      default: false
                      name: MSRP
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: msrp
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 122
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '4.0'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_points:
                    - id: 80
                      default: false
                      name: Wholesale Two
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: wholesale-two
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 121
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '5.0'
                    - id: 81
                      default: false
                      name: MSRP
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: msrp
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 122
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '4.0'
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/bulk.json:
    post:
      tags:
      - Components
      summary: createComponentPricePoints
      description: Use this endpoint to create multiple component price points in one request.
      operationId: createComponentPricePoints
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component for which you want to fetch price points.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateComponentPricePointsRequest'
              - examples:
                - price_points:
                  - name: Wholesale
                    handle: wholesale
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 5
                  - name: MSRP
                    handle: msrp
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 4
                  - name: Special Pricing
                    handle: special
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 5
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_points:
                  - name: Wholesale
                    handle: wholesale
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 5
                  - name: MSRP
                    handle: msrp
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 4
                  - name: Special Pricing
                    handle: special
                    pricing_scheme: per_unit
                    prices:
                    - starting_quantity: 1
                      unit_price: 5
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentPricePointsresponse'
                - examples:
                  - price_points:
                    - id: 80
                      default: false
                      name: Wholesale Two
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: wholesale-two
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 121
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '5.0'
                    - id: 81
                      default: false
                      name: MSRP
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: msrp
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 122
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '4.0'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_points:
                    - id: 80
                      default: false
                      name: Wholesale Two
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: wholesale-two
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 121
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '5.0'
                    - id: 81
                      default: false
                      name: MSRP
                      pricing_scheme: per_unit
                      component_id: 74
                      handle: msrp
                      archived_at: null
                      created_at: 2017-07-05T13:55:40-04:00
                      updated_at: 2017-07-05T13:55:40-04:00
                      prices:
                      - id: 122
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: null
                        unit_price: '4.0'
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}.json:
    put:
      tags:
      - Components
      summary: updateComponentPricePoint
      description: >-
        When updating a price point, it's prices can be updated as well by creating new prices or editing / removing existing ones.


        Passing in a price bracket without an `id` will attempt to create a new price.


        Including an `id` will update the corresponding price, and including the `_destroy` flag set to true along with the `id` will remove that price.


        Note: Custom price points cannot be updated directly. They must be edited through the Subscription.
      operationId: updateComponentPricePoint
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateComponentPricePointRequest'
              - examples:
                - price_point:
                    name: Default
                    prices:
                    - id: 1
                      ending_quantity: 100
                      unit_price: 5
                    - id: 2
                      _destroy: true
                    - starting_quantity: 101
                      unit_price: 4
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_point:
                    name: Default
                    prices:
                    - id: 1
                      ending_quantity: 100
                      unit_price: 5
                    - id: 2
                      _destroy: true
                    - starting_quantity: 101
                      unit_price: 4
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentPricePointResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - '{"errors":{"base":["all prices must belong to the price point"]}}'
                  - '{"errors":{"prices":["Successive brackets may not have gaps in quantity (i.e. if one bracket ends at quantity 10, the next must begin at quantity 11)"]}}'
                  - '{"errors":{"prices":["At least 1 price bracket must be defined"]}}'
                  - '{"errors":{"prices":["There cannot be any overlapping bracket ranges"]}}'
                  - '{"errors":{"handle":["Handle: This handle is already in use."]}}'
                  - '{"errors":{"prices.ending_quantity":["Ending quantity: must be greater than the low end bracket quantity, if given"]}}'
                contentMediaType: application/json
              examples:
                Invalid price id:
                  value:
                    errors:
                      base:
                      - all prices must belong to the price point
                Invalid price definition:
                  value:
                    errors:
                      prices:
                      - Successive brackets may not have gaps in quantity (i.e. if one bracket ends at quantity 10, the next must begin at quantity 11)
                Missing price:
                  value:
                    errors:
                      prices:
                      - At least 1 price bracket must be defined
                Overlapping prices:
                  value:
                    errors:
                      prices:
                      - There cannot be any overlapping bracket ranges
                Invalid handle:
                  value:
                    errors:
                      handle:
                      - 'Handle: This handle is already in use.'
                Invalid quantity:
                  value:
                    errors:
                      prices.ending_quantity:
                      - 'Ending quantity: must be greater than the low end bracket quantity, if given'
      deprecated: false
    delete:
      tags:
      - Components
      summary: archiveComponentPricePoint
      description: A price point can be archived at any time. Subscriptions using a price point that has been archived will continue using it until they're moved to another price point.
      operationId: archiveComponentPricePoint
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentPricePointResponse'
                - examples:
                  - price_point:
                      id: 79
                      default: false
                      name: Wholesale
                      pricing_scheme: stairstep
                      component_id: 74
                      handle: wholesale-handle
                      archived_at: 2017-07-06T15:04:00-04:00
                      created_at: 2017-07-05T13:44:30-04:00
                      updated_at: 2017-07-05T13:44:30-04:00
                      prices:
                      - id: 119
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: 100
                        unit_price: '5.0'
                      - id: 120
                        component_id: 74
                        starting_quantity: 101
                        ending_quantity: null
                        unit_price: '4.0'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 79
                      default: false
                      name: Wholesale
                      pricing_scheme: stairstep
                      component_id: 74
                      handle: wholesale-handle
                      archived_at: 2017-07-06T15:04:00-04:00
                      created_at: 2017-07-05T13:44:30-04:00
                      updated_at: 2017-07-05T13:44:30-04:00
                      prices:
                      - id: 119
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: 100
                        unit_price: '5.0'
                      - id: 120
                        component_id: 74
                        starting_quantity: 101
                        ending_quantity: null
                        unit_price: '4.0'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Price point is already archived.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Price point is already archived.
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}/unarchive.json:
    put:
      tags:
      - Components
      summary: unarchiveComponentPricePoint
      description: Use this endpoint to unarchive a component price point.
      operationId: unarchiveComponentPricePoint
      parameters:
      - name: component_id
        in: path
        description: The Chargify id of the component to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentPricePointResponse'
                - examples:
                  - price_point:
                      id: 79
                      default: false
                      name: Wholesale
                      pricing_scheme: stairstep
                      component_id: 74
                      handle: wholesale-handle
                      archived_at: null
                      created_at: 2017-07-05T13:44:30-04:00
                      updated_at: 2017-07-05T13:44:30-04:00
                      prices:
                      - id: 119
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: 100
                        unit_price: '5.0'
                      - id: 120
                        component_id: 74
                        starting_quantity: 101
                        ending_quantity: null
                        unit_price: '4.0'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 79
                      default: false
                      name: Wholesale
                      pricing_scheme: stairstep
                      component_id: 74
                      handle: wholesale-handle
                      archived_at: null
                      created_at: 2017-07-05T13:44:30-04:00
                      updated_at: 2017-07-05T13:44:30-04:00
                      prices:
                      - id: 119
                        component_id: 74
                        starting_quantity: 1
                        ending_quantity: 100
                        unit_price: '5.0'
                      - id: 120
                        component_id: 74
                        starting_quantity: 101
                        ending_quantity: null
                        unit_price: '4.0'
      deprecated: false
    parameters: []
  /price_points/{price_point_id}/currency_prices.json:
    post:
      tags:
      - Components
      summary: createCurrencyPrices
      description: >-
        This endpoint allows you to create currency prices for a given currency that has been defined on the site level in your settings.


        When creating currency prices, they need to mirror the structure of your primary pricing. For each price level defined on the component price point, there should be a matching price level created in the given currency.


        Note: Currency Prices are not able to be created for custom price points.
      operationId: createCurrencyPrices
      parameters:
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateCurrencyPricesRequest'
              - examples:
                - currency_prices:
                  - currency: EUR
                    price: 50
                    price_id: 20
                  - currency: EUR
                    price: 40
                    price_id: 21
              contentMediaType: application/json
            examples:
              Example:
                value:
                  currency_prices:
                  - currency: EUR
                    price: 50
                    price_id: 20
                  - currency: EUR
                    price: 40
                    price_id: 21
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentCurrencyPricesResponse'
                - examples:
                  - currency_prices:
                    - id: 100
                      currency: EUR
                      price: '123'
                      formatted_price: €123,00
                      price_id: 32669
                      price_point_id: 25554
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    currency_prices:
                    - id: 100
                      currency: EUR
                      price: '123'
                      formatted_price: €123,00
                      price_id: 32669
                      price_point_id: 25554
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      currency_prices[0].currency:
                      - 'Currency: cannot be blank.'
                      - 'Currency: is not one of the allowed values.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      currency_prices[0].currency:
                      - 'Currency: cannot be blank.'
                      - 'Currency: is not one of the allowed values.'
      deprecated: false
    put:
      tags:
      - Components
      summary: updateCurrencyPrices
      description: >-
        This endpoint allows you to update currency prices for a given currency that has been defined on the site level in your settings.


        Note: Currency Prices are not able to be updated for custom price points.
      operationId: updateCurrencyPrices
      parameters:
      - name: price_point_id
        in: path
        description: The Chargify id of the price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateCurrencyPricesRequest'
              - examples:
                - currency_prices:
                  - id: 100
                    price: 51
                  - id: 101
                    price: 41
              contentMediaType: application/json
            examples:
              Example:
                value:
                  currency_prices:
                  - id: 100
                    price: 51
                  - id: 101
                    price: 41
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentCurrencyPricesResponse'
                - examples:
                  - currency_prices:
                    - id: 100
                      currency: EUR
                      price: '123'
                      formatted_price: €123,00
                      price_id: 32669
                      price_point_id: 25554
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    currency_prices:
                    - id: 100
                      currency: EUR
                      price: '123'
                      formatted_price: €123,00
                      price_id: 32669
                      price_point_id: 25554
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      currency_prices[0].currency:
                      - Pricing already exists for this currency.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      currency_prices[0].currency:
                      - Pricing already exists for this currency.
      deprecated: false
    parameters: []
  /components_price_points.json:
    get:
      tags:
      - Components
      summary: listAllComponentPricePoints
      description: This method allows to retrieve a list of Components Price Points belonging to a Site.
      operationId: listAllComponentPricePoints
      parameters:
      - name: filter[date_field]
        in: query
        description: 'The type of filter you would like to apply to your search. Use in query: `filter[date_field]=created_at`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: 'The type of filter you would like to apply to your search. Use in query: `filter[date_field]=created_at`.'
            examples:
            - updated_at
      - name: filter[end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns price points with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: filter[end_datetime]
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: include
        in: query
        description: 'Allows including additional data in the response. Use in query: `include=currency_prices`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListComponentsPricePointsInclude'
          - description: 'Allows including additional data in the response. Use in query: `include=currency_prices`.'
            examples:
            - currency_prices
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: filter[start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns price points with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-17
      - name: filter[start_datetime]
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[type]
        in: query
        description: 'Allows fetching price points with matching type. Use in query: `filter[type]=custom,catalog`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PricePointType'
          examples:
          - - catalog
            - default
            - custom
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      - name: filter[ids]
        in: query
        description: 'Allows fetching price points with matching id based on provided values. Use in query: `filter[ids]=1,2,3`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: filter[archived_at]
        in: query
        description: 'Allows fetching price points only if archived_at is present or not. Use in query: `filter[archived_at]=not_null`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: 'Allows fetching price points only if archived_at is present or not. Use in query: `filter[archived_at]=not_null`.'
            examples:
            - not_null
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListComponentsPricePointsResponse'
                - examples:
                  - price_points:
                    - id: 1
                      name: Auto-created
                      type: default
                      pricing_scheme: per_unit
                      component_id: 2
                      handle: auto-created
                      archived_at: null
                      created_at: 2021-02-21T11:05:57-05:00
                      updated_at: 2021-02-21T11:05:57-05:00
                      prices:
                      - id: 3
                        component_id: 2
                        starting_quantity: 0
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 1
                        formatted_unit_price: $1.00
                        segment_id: null
                      tax_included: false
                contentMediaType: application/json
              examples:
                example:
                  value:
                    price_points:
                    - id: 1
                      name: Auto-created
                      type: default
                      pricing_scheme: per_unit
                      component_id: 2
                      handle: auto-created
                      archived_at: null
                      created_at: 2021-02-21T11:05:57-05:00
                      updated_at: 2021-02-21T11:05:57-05:00
                      prices:
                      - id: 3
                        component_id: 2
                        starting_quantity: 0
                        ending_quantity: null
                        unit_price: '1.0'
                        price_point_id: 1
                        formatted_unit_price: $1.00
                        segment_id: null
                      tax_included: false
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - start_date supplied value is invalid, expected ISO 8601 format
                contentMediaType: application/json
              examples:
                Invalid date format:
                  value:
                    errors:
                    - start_date supplied value is invalid, expected ISO 8601 format
      deprecated: false
    parameters: []
  /customers.json:
    post:
      tags:
      - Customers
      summary: createCustomer
      description: >-
        You may create a new Customer at any time, or you may create a Customer at the same time you create a Subscription. The only validation restriction is that you may only create one customer for a given reference value.


        If provided, the `reference` value must be unique. It represents a unique identifier for the customer from your own app, i.e. the customer’s ID. This allows you to retrieve a given customer via a piece of shared information. Alternatively, you may choose to leave `reference` blank, and store Chargify’s unique ID for the customer, which is in the `id` attribute.


        Full documentation on how to locate, create and edit Customers in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407659914267).


        ## Required Country Format


        Chargify requires that you use the ISO Standard Country codes when formatting country attribute of the customer.


        Countries should be formatted as 2 characters. For more information, please see the following wikipedia article on [ISO_3166-1.](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes)


        ## Required State Format


        Chargify requires that you use the ISO Standard State codes when formatting state attribute of the customer.


        + US States (2 characters): [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2:US)


        + States Outside the US (2-3 characters): To find the correct state codes outside of the US, please go to [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) and click on the link in the “ISO 3166-2 codes” column next to country you wish to populate.


        ## Locale


        Chargify allows you to attribute a language/region to your customer to deliver invoices in any required language.

        For more: [Customer Locale](https://chargify.zendesk.com/hc/en-us/articles/4407870384283#customer-locale)
      operationId: createCustomer
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateCustomerRequest'
              - examples:
                - customer:
                    first_name: Martha
                    last_name: Washington
                    email: martha@example.com
                    cc_emails: george@example.com
                    organization: ABC, Inc.
                    reference: '1234567890'
                    address: 123 Main Street
                    address_2: Unit 10
                    city: Anytown
                    state: MA
                    zip: '02120'
                    country: US
                    phone: 555-555-1212
                    locale: es-MX
              contentMediaType: application/json
            examples:
              Example:
                value:
                  customer:
                    first_name: Martha
                    last_name: Washington
                    email: martha@example.com
                    cc_emails: george@example.com
                    organization: ABC, Inc.
                    reference: '1234567890'
                    address: 123 Main Street
                    address_2: Unit 10
                    city: Anytown
                    state: MA
                    zip: '02120'
                    country: US
                    phone: 555-555-1212
                    locale: es-MX
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerResponse'
                - examples:
                  - customer:
                      first_name: Cathryn
                      last_name: Parisian
                      email: Stella.McLaughlin6@example.net
                      cc_emails: null
                      organization: Greenholt - Oberbrunner
                      reference: null
                      id: 76
                      created_at: 2021-03-29T07:47:00-04:00
                      updated_at: 2021-03-29T07:47:00-04:00
                      address: 739 Stephon Bypass
                      address_2: Apt. 386
                      city: Sedrickchester
                      state: KY
                      state_name: Kentucky
                      zip: 46979-7719
                      country: US
                      country_name: United States
                      phone: 230-934-3685
                      verified: false
                      portal_customer_created_at: null
                      portal_invite_last_sent_at: null
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      vat_number: null
                      parent_id: null
                      locale: en-US
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    customer:
                      first_name: Cathryn
                      last_name: Parisian
                      email: Stella.McLaughlin6@example.net
                      cc_emails: null
                      organization: Greenholt - Oberbrunner
                      reference: null
                      id: 76
                      created_at: 2021-03-29T07:47:00-04:00
                      updated_at: 2021-03-29T07:47:00-04:00
                      address: 739 Stephon Bypass
                      address_2: Apt. 386
                      city: Sedrickchester
                      state: KY
                      state_name: Kentucky
                      zip: 46979-7719
                      country: US
                      country_name: United States
                      phone: 230-934-3685
                      verified: false
                      portal_customer_created_at: null
                      portal_invite_last_sent_at: null
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      vat_number: null
                      parent_id: null
                      locale: en-US
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerErrorResponse1'
                - examples:
                  - "{\"errors\":{\"customer\":\"can't be blank\"}}"
                  - '{"errors":["First name: cannot be blank.","Last name: cannot be blank.","Email address: cannot be blank."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                      customer: can't be blank
                Example-2:
                  value:
                    errors:
                    - 'First name: cannot be blank.'
                    - 'Last name: cannot be blank.'
                    - 'Email address: cannot be blank.'
      deprecated: false
    get:
      tags:
      - Customers
      summary: listCustomers
      description: >-
        This request will by default list all customers associated with your Site.


        ## Find Customer


        Use the search feature with the `q` query parameter to retrieve an array of customers that matches the search query.


        Common use cases are:


        + Search by an email

        + Search by a Chargify ID

        + Search by an organization

        + Search by a reference value from your application

        + Search by a first or last name


        To retrieve a single, exact match by reference, please use the [lookup endpoint](https://developers.chargify.com/docs/api-docs/b710d8fbef104-read-customer-by-reference).
      operationId: listCustomers
      parameters:
      - name: direction
        in: query
        description: Direction to sort customers by time of creation
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: Direction to sort customers by time of creation
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 50. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 30
      - name: date_field
        in: query
        description: >-
          The type of filter you would like to apply to your search.

          Use in query: `date_field=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: >-
              The type of filter you would like to apply to your search.

              Use in query: `date_field=created_at`.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns subscriptions with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns subscriptions with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns subscriptions with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns subscriptions with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
      - name: q
        in: query
        description: A search query by which to filter customers (can be an email, an ID, a reference, organization)
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
                description: ''
                examples:
                - - customer:
                      first_name: Kayla
                      last_name: Test
                      email: kayla@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14126091
                      created_at: 2016-10-04T15:22:27-04:00
                      updated_at: 2016-10-04T15:22:30-04:00
                      address: ''
                      address_2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-04T15:22:29-04:00
                      portal_invite_last_sent_at: 2016-10-04T15:22:30-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                  - customer:
                      first_name: 'Nick '
                      last_name: Test
                      email: nick@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14254093
                      created_at: 2016-10-13T16:52:51-04:00
                      updated_at: 2016-10-13T16:52:54-04:00
                      address: ''
                      address_2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-13T16:52:54-04:00
                      portal_invite_last_sent_at: 2016-10-13T16:52:54-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      parent_id: 123
                  - customer:
                      first_name: Don
                      last_name: Test
                      email: don@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14332342
                      created_at: 2016-10-19T10:49:13-04:00
                      updated_at: 2016-10-19T10:49:19-04:00
                      address: 1737 15th St
                      address_2: ''
                      city: Boulder
                      state: CO
                      zip: '80302'
                      country: US
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-19T10:49:19-04:00
                      portal_invite_last_sent_at: 2016-10-19T10:49:19-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      parent_id: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - customer:
                      first_name: Kayla
                      last_name: Test
                      email: kayla@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14126091
                      created_at: 2016-10-04T15:22:27-04:00
                      updated_at: 2016-10-04T15:22:30-04:00
                      address: ''
                      address_2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-04T15:22:29-04:00
                      portal_invite_last_sent_at: 2016-10-04T15:22:30-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                  - customer:
                      first_name: 'Nick '
                      last_name: Test
                      email: nick@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14254093
                      created_at: 2016-10-13T16:52:51-04:00
                      updated_at: 2016-10-13T16:52:54-04:00
                      address: ''
                      address_2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-13T16:52:54-04:00
                      portal_invite_last_sent_at: 2016-10-13T16:52:54-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      parent_id: 123
                  - customer:
                      first_name: Don
                      last_name: Test
                      email: don@example.com
                      cc_emails: john@example.com, sue@example.com
                      organization: ''
                      reference: null
                      id: 14332342
                      created_at: 2016-10-19T10:49:13-04:00
                      updated_at: 2016-10-19T10:49:19-04:00
                      address: 1737 15th St
                      address_2: ''
                      city: Boulder
                      state: CO
                      zip: '80302'
                      country: US
                      phone: ''
                      verified: null
                      portal_customer_created_at: 2016-10-19T10:49:19-04:00
                      portal_invite_last_sent_at: 2016-10-19T10:49:19-04:00
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      parent_id: null
      deprecated: false
    parameters: []
  /customers/{id}.json:
    get:
      tags:
      - Customers
      summary: readCustomer
      description: This method allows to retrieve the Customer properties by Chargify-generated Customer ID.
      operationId: readCustomer
      parameters:
      - name: id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
      deprecated: false
    put:
      tags:
      - Customers
      summary: updateCustomer
      description: This method allows to update the Customer.
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateCustomerRequest'
              - examples:
                - customer:
                    first_name: Martha
                    last_name: Washington
                    email: martha.washington@example.com
              contentMediaType: application/json
            examples:
              Example:
                value:
                  customer:
                    first_name: Martha
                    last_name: Washington
                    email: martha.washington@example.com
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerResponse'
                - examples:
                  - customer:
                      first_name: Martha
                      last_name: Washington
                      email: martha.washington@example.com
                      cc_emails: george.washington@example.com
                      organization: null
                      reference: null
                      id: 14967442
                      created_at: 2016-12-05T10:33:07-05:00
                      updated_at: 2016-12-05T10:38:00-05:00
                      address: null
                      address_2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                      phone: null
                      verified: false
                      portal_customer_created_at: null
                      portal_invite_last_sent_at: null
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      vat_number: '012345678'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    customer:
                      first_name: Martha
                      last_name: Washington
                      email: martha.washington@example.com
                      cc_emails: george.washington@example.com
                      organization: null
                      reference: null
                      id: 14967442
                      created_at: 2016-12-05T10:33:07-05:00
                      updated_at: 2016-12-05T10:38:00-05:00
                      address: null
                      address_2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                      phone: null
                      verified: false
                      portal_customer_created_at: null
                      portal_invite_last_sent_at: null
                      portal_invite_last_accepted_at: null
                      tax_exempt: false
                      vat_number: '012345678'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerErrorResponse1'
                - examples:
                  - "{\"errors\":{\"customer\":\"can't be blank\"}}"
                  - '{"errors":["First name: cannot be blank.","Last name: cannot be blank.","Email address: cannot be blank."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                      customer: can't be blank
                Example-2:
                  value:
                    errors:
                    - 'First name: cannot be blank.'
                    - 'Last name: cannot be blank.'
                    - 'Email address: cannot be blank.'
      deprecated: false
    delete:
      tags:
      - Customers
      summary: deleteCustomer
      description: This method allows you to delete the Customer.
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /customers/lookup.json:
    get:
      tags:
      - Customers
      summary: readCustomerByReference
      description: Use this method to return the customer object if you have the unique **Reference ID (Your App)** value handy. It will return a single match.
      operationId: readCustomerByReference
      parameters:
      - name: reference
        in: query
        description: Customer reference
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
      deprecated: false
    parameters: []
  /customers/{customer_id}/subscriptions.json:
    get:
      tags:
      - Customers
      summary: listCustomerSubscriptions
      description: This method lists all subscriptions that belong to a customer.
      operationId: listCustomerSubscriptions
      parameters:
      - name: customer_id
        in: path
        description: The Chargify id of the customer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResponse'
                description: ''
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /{resource_type}/metafields.json:
    post:
      tags:
      - Custom Fields
      summary: createMetafields
      description: >-
        ## Custom Fields: Metafield Intro


        **Chargify refers to Custom Fields in the API documentation as metafields and metadata.** Within the Chargify UI, metadata and metafields are grouped together under the umbrella of "Custom Fields." All of our UI-based documentation that references custom fields will not cite the terminology metafields or metadata.


        + **Metafield is the custom field**

        + **Metadata is the data populating the custom field.**


        Chargify Metafields are used to add meaningful attributes to subscription and customer resources. Full documentation on how to create Custom Fields in the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405332553613-Custom-Fields-Reference). For additional documentation on how to record data within custom fields, please see our subscription-based documentation [here.](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404434903181-Subscription-Summary#custom-fields)


        Metafield are the place where you will set up your resource to accept additional data. It is scoped to the site instead of a specific customer or subscription. Think of it as the key, and Metadata as the value on every record.


        ## Create Metafields


        Use this endpoint to create metafields for your Site. Metafields can be populated with metadata after the fact.


        Each site is limited to 100 unique Metafields (i.e. keys, or names) per resource. This means you can have 100 Metafields for Subscription and another 100 for Customer.


        ### Metafields "On-the-Fly"


        It is possible to create Metafields “on the fly” when you create your Metadata – if a non-existant name is passed when creating Metadata, a Metafield for that key will be automatically created. The Metafield API, however, gives you more control over your “keys”.


        ### Metafield Scope Warning


        If configuring metafields in the Admin UI or via the API, be careful sending updates to metafields with the scope attribute – **if a partial update is sent it will overwrite the current configuration**.
      operationId: createMetafields
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateMetafieldsRequest'
              - examples:
                - '{"metafields":{"name":"Dropdown field","input_type":"dropdown","enum":["option 1","option 2"],"scope":{"public_edit":"1","public_show":"1"}}}'
                - '{"metafields":[{"name":"Color"},{"name":"Brand"}]}'
              contentMediaType: application/json
            examples:
              Single-Metafield:
                value:
                  metafields:
                    name: Dropdown field
                    input_type: dropdown
                    enum:
                    - option 1
                    - option 2
                    scope:
                      public_edit: '1'
                      public_show: '1'
              Multiple-Metafields:
                value:
                  metafields:
                  - name: Color
                  - name: Brand
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metafield'
                description: ''
                examples:
                - - name: Color
                    scope:
                      hosted: []
                      csv: '0'
                      statements: '0'
                      invoices: '0'
                      portal: '0'
                    data_count: 0
                    input_type: text
                    enum: null
                  - name: Brand
                    scope:
                      hosted: []
                      csv: '0'
                      statements: '0'
                      invoices: '0'
                      portal: '0'
                    data_count: 0
                    input_type: text
                    enum: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - name: Color
                    scope:
                      hosted: []
                      csv: '0'
                      statements: '0'
                      invoices: '0'
                      portal: '0'
                    data_count: 0
                    input_type: text
                    enum: null
                  - name: Brand
                    scope:
                      hosted: []
                      csv: '0'
                      statements: '0'
                      invoices: '0'
                      portal: '0'
                    data_count: 0
                    input_type: text
                    enum: null
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleErrorResponse1'
                - examples:
                  - error: "'name' must be present to create or update metafields"
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    error: "'name' must be present to create or update metafields"
      deprecated: false
    get:
      tags:
      - Custom Fields
      summary: listMetafields
      description: This endpoint lists metafields associated with a site. The metafield description and usage is contained in the response.
      operationId: listMetafields
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: name
        in: query
        description: filter by the name of the metafield
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListMetafieldsResponse'
                - examples:
                  - total_count: 0
                    current_page: 0
                    total_pages: 0
                    per_page: 0
                    metafields:
                    - id: 0
                      name: string
                      scope:
                        csv: '0'
                        statements: '0'
                        invoices: '0'
                        portal: '0'
                        public_show: '0'
                        public_edit: '0'
                      data_count: 0
                      input_type: text
                      enum: null
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    total_count: 0
                    current_page: 0
                    total_pages: 0
                    per_page: 0
                    metafields:
                    - id: 0
                      name: string
                      scope:
                        csv: '0'
                        statements: '0'
                        invoices: '0'
                        portal: '0'
                        public_show: '0'
                        public_edit: '0'
                      data_count: 0
                      input_type: text
                      enum: null
      deprecated: false
    put:
      tags:
      - Custom Fields
      summary: updateMetafield
      description: Use the following method to update metafields for your Site. Metafields can be populated with metadata after the fact.
      operationId: updateMetafield
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMetafieldsRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metafield'
                description: ''
                contentMediaType: application/json
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleErrorResponse1'
                - examples:
                  - error: Metafield name must be unique for the Attachment Type
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    error: Metafield name must be unique for the Attachment Type
      deprecated: false
    delete:
      tags:
      - Custom Fields
      summary: deleteMetafield
      description: >-
        Use the following method to delete a metafield. This will remove the metafield from the Site.


        Additionally, this will remove the metafield and associated metadata with all Subscriptions on the Site.
      operationId: deleteMetafield
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: name
        in: query
        description: The name of the metafield to be deleted
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /{resource_type}/{resource_id}/metadata.json:
    post:
      tags:
      - Custom Fields
      summary: createMetadata
      description: >-
        ## Custom Fields: Metadata Intro


        **Chargify refers to Custom Fields in the API documentation as metafields and metadata.** Within the Chargify UI, metadata and metafields are grouped together under the umbrella of "Custom Fields." All of our UI-based documentation that references custom fields will not cite the terminology metafields or metadata.


        + **Metafield is the custom field**

        + **Metadata is the data populating the custom field.**


        Chargify Metafields are used to add meaningful attributes to subscription and customer resources. Full documentation on how to create Custom Fields in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407659856411). For additional documentation on how to record data within custom fields, please see our subscription-based documentation [here.](https://chargify.zendesk.com/hc/en-us/articles/4407884887835#custom-fields)


        Metadata is associated to a customer or subscription, and corresponds to a Metafield. When creating a new metadata object for a given record, **if the metafield is not present it will be created**.


        ## Metadata limits


        Metadata values are limited to 2kB in size. Additonally, there are limits on the number of unique metafields available per resource.


        ## Create Metadata


        This method will create a metafield for the site on the fly if it does not already exist, and populate the metadata value.


        ### Subscription or Customer Resource


        Please pay special attention to the resource you use when creating metadata.
      operationId: createMetadata
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: resource_id
        in: path
        description: The Chargify id of the customer or the subscription for which the metadata applies
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateMetadataRequest'
              - examples:
                - metadata:
                  - name: Color
                    value: Blue
                  - name: Something
                    value: Useful
              contentMediaType: application/json
            examples:
              Example:
                value:
                  metadata:
                  - name: Color
                    value: Blue
                  - name: Something
                    value: Useful
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'
                description: ''
                contentMediaType: application/json
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleErrorResponse1'
                - examples:
                  - error: "'name' must be present to create or update metafields"
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    error: "'name' must be present to create or update metafields"
      deprecated: false
    get:
      tags:
      - Custom Fields
      summary: listMetadata
      description: >-
        This request will list all of the metadata belonging to a particular resource (ie. subscription, customer) that is specified.


        ## Metadata Data


        This endpoint will also display the current stats of your metadata to use as a tool for pagination.
      operationId: listMetadata
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: resource_id
        in: path
        description: The Chargify id of the customer or the subscription for which the metadata applies
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetadata'
      deprecated: false
    put:
      tags:
      - Custom Fields
      summary: updateMetadata
      description: This method allows you to update the existing metadata associated with a subscription or customer.
      operationId: updateMetadata
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: resource_id
        in: path
        description: The Chargify id of the customer or the subscription for which the metadata applies
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMetadataRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'
                description: ''
                contentMediaType: application/json
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleErrorResponse1'
                - examples:
                  - error: "'name' must be present to create or update metafields"
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    error: "'name' must be present to create or update metafields"
      deprecated: false
    delete:
      tags:
      - Custom Fields
      summary: deleteMetadata
      description: >-
        This method removes the metadata from the subscriber/customer cited.


        ## Query String Usage


        For instance if you wanted to delete the metadata for customer 99 named weight you would request:


        ```

        https://acme.chargify.com/customers/99/metadata.json?name=weight

        ```


        If you want to delete multiple metadata fields for a customer 99 named: `weight` and `age` you wrould request:

        ```

        https://acme.chargify.com/customers/99/metadata.json?names[]=weight&names[]=age

        ```


        ## Successful Response


        For a success, there will be a code `200` and the plain text response `true`.


        ## Unsuccessful Response


        When a failed response is encountered, you will receive a `404` response and the plain text response of `true`.
      operationId: deleteMetadata
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: resource_id
        in: path
        description: The Chargify id of the customer or the subscription for which the metadata applies
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: name
        in: query
        description: Name of field to be removed.
        style: form
        explode: true
        schema:
          type: string
      - name: names[]
        in: query
        description: 'Names of fields to be removed. Use in query: `names[]=field1&names[]=my-field&names[]=another-field`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /{resource_type}/metadata.json:
    get:
      tags:
      - Custom Fields
      summary: listMetadataForResourceType
      description: >-
        This method will provide you information on usage of metadata across your selected resource (ie. subscriptions, customers)


        ## Metadata Data


        This endpoint will also display the current stats of your metadata to use as a tool for pagination.


        ### Metadata for multiple records


        `https://acme.chargify.com/subscriptions/metadata.json?resource_ids[]=1&resource_ids[]=2`


        ## Read Metadata for a Site


        This endpoint will list the number of pages of metadata information that are contained within a site.
      operationId: listMetadataForResourceType
      parameters:
      - name: resource_type
        in: path
        description: the resource type to which the metafields belong
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: the resource type to which the metafields belong
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: date_field
        in: query
        description: The type of filter you would like to apply to your search.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns metadata with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns metadata with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns metadata with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns metadata with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
      - name: with_deleted
        in: query
        description: Allow to fetch deleted metadata.
        style: form
        explode: true
        schema:
          type: boolean
      - name: resource_ids[]
        in: query
        description: 'Allow to fetch metadata for multiple records based on provided ids. Use in query: `resource_ids[]=122&resource_ids[]=123&resource_ids[]=124`.'
        style: form
        explode: true
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            contentEncoding: int32
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetadata'
      deprecated: false
    parameters: []
  /events.json:
    get:
      tags:
      - Events
      summary: listEvents
      description: >-
        ## Events Intro


        Chargify Events include various activity that happens around a Site. This information is **especially** useful to track down issues that arise when subscriptions are not created due to errors.


        Within the Chargify UI, "Events" are referred to as "Site Activity".  Full documentation on how to record view Events / Site Activty in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407864698139).


        ## List Events for a Site


        This method will retrieve a list of events for a site. Use query string filters to narrow down results. You may use the `key` filter as part of your query string to narrow down results.


        ### Legacy Filters


        The following keys are no longer supported.


        + `payment_failure_recreated`

        + `payment_success_recreated`

        + `renewal_failure_recreated`

        + `renewal_success_recreated`

        + `zferral_revenue_post_failure` - (Specific to the deprecated Zferral integration)

        + `zferral_revenue_post_success` - (Specific to the deprecated Zferral integration)


        ## Event Specific Data


        Event Specific Data


        Each event type has its own `event_specific_data` specified.


        Here’s an example event for the `subscription_product_change` event:


        ```

        {
            "event": {
                "id": 351,
                "key": "subscription_product_change",
                "message": "Product changed on Marky Mark's subscription from 'Basic' to 'Pro'",
                "subscription_id": 205,
                "event_specific_data": {
                    "new_product_id": 3,
                    "previous_product_id": 2
                },
                "created_at": "2012-01-30T10:43:31-05:00"
            }
        }

        ```


        Here’s an example event for the `subscription_state_change` event:


        ```
         {
             "event": {
                 "id": 353,
                 "key": "subscription_state_change",
                 "message": "State changed on Marky Mark's subscription to Pro from trialing to active",
                 "subscription_id": 205,
                 "event_specific_data": {
                     "new_subscription_state": "active",
                     "previous_subscription_state": "trialing"
                 },
                 "created_at": "2012-01-30T10:43:33-05:00"
             }
         }
        ```
      operationId: listEvents
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: since_id
        in: query
        description: Returns events with an id greater than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: max_id
        in: query
        description: Returns events with an id less than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: direction
        in: query
        description: The sort direction of the returned events.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: The sort direction of the returned events.
      - name: filter
        in: query
        description: >-
          You can pass multiple event keys after comma.

          Use in query `filter=signup_success,payment_success`.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
          examples:
          - - custom_field_value_change
            - payment_success
      - name: date_field
        in: query
        description: The type of filter you would like to apply to your search.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListEventsDateField'
          - description: The type of filter you would like to apply to your search.
            examples:
            - created_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                minItems: 1
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
                description: ''
                examples:
                - - event:
                      id: 343087780
                      key: subscription_state_change
                      message: State changed on Test subscription to Monthly Product from active to past_due
                      subscription_id: 14950962
                      customer_id: 12345678
                      created_at: 2016-10-27T16:42:22-04:00
                      event_specific_data:
                        previous_subscription_state: active
                        new_subscription_state: past_due
                  - event:
                      id: 343087742
                      key: billing_date_change
                      message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
                      subscription_id: 14950962
                      customer_id: 12345678
                      created_at: 2016-10-27T16:42:19-04:00
                      event_specific_data: null
                  - event:
                      id: 343085267
                      key: statement_closed
                      message: Statement 79401838 closed (but not settled) for Test's subscription to ANNUAL product
                      subscription_id: 14950975
                      customer_id: 87654321
                      created_at: 2016-10-27T16:40:40-04:00
                      event_specific_data: null
                  - event:
                      id: 4481
                      key: custom_field_value_change
                      message: Custom field (Extra support included) changed for Subscription 117 from 'Yes' to 'No'.
                      subscription_id: 117
                      customer_id: 22334455
                      created_at: 2022-03-24T07:55:06-04:00
                      event_specific_data:
                        event_type: updated
                        metafield_name: Extra support included
                        metafield_id: 2
                        old_value: Yes
                        new_value: No
                        resource_type: Subscription
                        resource_id: 117
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - event:
                      id: 343087780
                      key: subscription_state_change
                      message: State changed on Test subscription to Monthly Product from active to past_due
                      subscription_id: 14950962
                      customer_id: 12345678
                      created_at: 2016-10-27T16:42:22-04:00
                      event_specific_data:
                        previous_subscription_state: active
                        new_subscription_state: past_due
                  - event:
                      id: 343087742
                      key: billing_date_change
                      message: Billing date changed on Test's subscription to Monthly Product from 11/27/2016 to 10/27/2016
                      subscription_id: 14950962
                      customer_id: 12345678
                      created_at: 2016-10-27T16:42:19-04:00
                      event_specific_data: null
                  - event:
                      id: 343085267
                      key: statement_closed
                      message: Statement 79401838 closed (but not settled) for Test's subscription to ANNUAL product
                      subscription_id: 14950975
                      customer_id: 87654321
                      created_at: 2016-10-27T16:40:40-04:00
                      event_specific_data: null
                  - event:
                      id: 4481
                      key: custom_field_value_change
                      message: Custom field (Extra support included) changed for Subscription 117 from 'Yes' to 'No'.
                      subscription_id: 117
                      customer_id: 22334455
                      created_at: 2022-03-24T07:55:06-04:00
                      event_specific_data:
                        event_type: updated
                        metafield_name: Extra support included
                        metafield_id: 2
                        old_value: Yes
                        new_value: No
                        resource_type: Subscription
                        resource_id: 117
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
                description: ''
                xml:
                  attribute: false
                  wrapped: false
                contentMediaType: application/xml
            multipart/form-data:
              schema:
                contentMediaType: multipart/form-data
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/events.json:
    get:
      tags:
      - Events
      summary: listSubscriptionEvents
      description: >-
        The following request will return a list of events for a subscription.


        Each event type has its own `event_specific_data` specified.
      operationId: listSubscriptionEvents
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: since_id
        in: query
        description: Returns events with an id greater than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: max_id
        in: query
        description: Returns events with an id less than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: direction
        in: query
        description: The sort direction of the returned events.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: The sort direction of the returned events.
      - name: filter
        in: query
        description: >-
          You can pass multiple event keys after comma.

          Use in query `filter=signup_success,payment_success`.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
          examples:
          - - custom_field_value_change
            - payment_success
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
                description: ''
                examples:
                - - event:
                      id: 344799837
                      key: statement_settled
                      message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:29-04:00
                      event_specific_data: null
                  - event:
                      id: 344799815
                      key: renewal_success
                      message: Successful renewal for Amelia Example's subscription to Basic Plan
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:28-04:00
                      event_specific_data:
                        product_id: 3792003
                        account_transaction_id: 7590246
                  - event:
                      id: 344799705
                      key: billing_date_change
                      message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:25-04:00
                      event_specific_data: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - event:
                      id: 344799837
                      key: statement_settled
                      message: Statement 79702531 settled successfully for Amelia Example's subscription to Basic Plan
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:29-04:00
                      event_specific_data: null
                  - event:
                      id: 344799815
                      key: renewal_success
                      message: Successful renewal for Amelia Example's subscription to Basic Plan
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:28-04:00
                      event_specific_data:
                        product_id: 3792003
                        account_transaction_id: 7590246
                  - event:
                      id: 344799705
                      key: billing_date_change
                      message: Billing date changed on Amelia Example's subscription to Basic Plan from 11/26/2016 to 11/01/2016
                      subscription_id: 14900541
                      customer_id: 77223344
                      created_at: 2016-11-01T12:41:25-04:00
                      event_specific_data: null
      deprecated: false
    parameters: []
  /events/count.json:
    get:
      tags:
      - Events
      summary: readEventsCount
      description: Get a count of all the events for a given site by using this method.
      operationId: readEventsCount
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: since_id
        in: query
        description: Returns events with an id greater than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: max_id
        in: query
        description: Returns events with an id less than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: direction
        in: query
        description: The sort direction of the returned events.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: The sort direction of the returned events.
      - name: filter
        in: query
        description: >-
          You can pass multiple event keys after comma.

          Use in query `filter=signup_success,payment_success`.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
          examples:
          - - custom_field_value_change
            - payment_success
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CountResponse'
                - examples:
                  - count: 144
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    count: 144
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}/segments.json:
    post:
      tags:
      - 'Events-Based Billing: Segments'
      summary: createSegment
      description: >-
        This endpoint creates a new Segment for a Component with segmented Metric. It allows you to specify properties to bill upon and prices for each Segment. You can only pass as many "property_values" as the related Metric has segmenting properties defined.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: createSegment
      parameters:
      - name: component_id
        in: path
        description: ID or Handle for the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle for the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSegmentRequest'
              - examples:
                - segment:
                    segment_property_1_value: France
                    segment_property_2_value: Spain
                    pricing_scheme: volume
                    prices:
                    - starting_quantity: 1
                      ending_quantity: 10000
                      unit_price: 0.19
                    - starting_quantity: 10001
                      unit_price: 0.09
              contentMediaType: application/json
            examples:
              Create a Single Segment (related Metric has 2 segmented properties):
                value:
                  segment:
                    segment_property_1_value: France
                    segment_property_2_value: Spain
                    pricing_scheme: volume
                    prices:
                    - starting_quantity: 1
                      ending_quantity: 10000
                      unit_price: 0.19
                    - starting_quantity: 10001
                      unit_price: 0.09
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventBasedBillingSegmentErrors1'
      deprecated: false
    get:
      tags:
      - 'Events-Based Billing: Segments'
      summary: listSegmentsForPricePoint
      description: >-
        This endpoint allows you to fetch Segments created for a given Price Point. They will be returned in the order of creation.


        You can pass `page` and `per_page` parameters in order to access all of the segments. By default it will return `30` records. You can set `per_page` to `200` at most.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: listSegmentsForPricePoint
      parameters:
      - name: component_id
        in: path
        description: ID or Handle for the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle for the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 30. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 30
          examples:
          - 50
      - name: filter[segment_property_1_value]
        in: query
        description: The value passed here would be used to filter segments. Pass a value related to `segment_property_1` on attached Metric. If empty string is passed, this filter would be rejected. Use in query `filter[segment_property_1_value]=EU`.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - EU
      - name: filter[segment_property_2_value]
        in: query
        description: The value passed here would be used to filter segments. Pass a value related to `segment_property_2` on attached Metric. If empty string is passed, this filter would be rejected.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[segment_property_3_value]
        in: query
        description: The value passed here would be used to filter segments. Pass a value related to `segment_property_3` on attached Metric. If empty string is passed, this filter would be rejected.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[segment_property_4_value]
        in: query
        description: The value passed here would be used to filter segments. Pass a value related to `segment_property_4` on attached Metric. If empty string is passed, this filter would be rejected.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentsResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventBasedBillingListSegmentsErrors1'
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}/segments/{id}.json:
    put:
      tags:
      - 'Events-Based Billing: Segments'
      summary: updateSegment
      description: >-
        This endpoint updates a single Segment for a Component with a segmented Metric. It allows you to update the pricing for the segment.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: updateSegment
      parameters:
      - name: component_id
        in: path
        description: ID or Handle of the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle of the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the Segment
        required: true
        style: simple
        schema:
          type: number
          contentEncoding: double
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSegmentRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventBasedBillingSegmentErrors1'
      deprecated: false
    delete:
      tags:
      - 'Events-Based Billing: Segments'
      summary: deleteSegment
      description: >-
        This endpoint allows you to delete a Segment with specified ID.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: deleteSegment
      parameters:
      - name: component_id
        in: path
        description: ID or Handle of the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle of the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the Segment
        required: true
        style: simple
        schema:
          type: number
          contentEncoding: double
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /components/{component_id}/price_points/{price_point_id}/segments/bulk.json:
    post:
      tags:
      - 'Events-Based Billing: Segments'
      summary: createSegments
      description: >-
        This endpoint allows you to create multiple segments in one request. The array of segments can contain up to `2000` records.


        If any of the records contain an error the whole request would fail and none of the requested segments get created. The error response contains a message for only the one segment that failed validation, with the corresponding index in the array.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: createSegments
      parameters:
      - name: component_id
        in: path
        description: ID or Handle for the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle for the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BulkCreateSegments'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentsResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EventBasedBillingSegment1'
                - examples:
                  - errors:
                      segments:
                        '1':
                          pricing_scheme:
                          - 'Pricing scheme: cannot be blank'
                contentMediaType: application/json
              examples:
                Error response when Pricing Scheme is missing:
                  value:
                    errors:
                      segments:
                        '1':
                          pricing_scheme:
                          - 'Pricing scheme: cannot be blank'
      deprecated: false
    put:
      tags:
      - 'Events-Based Billing: Segments'
      summary: updateSegments
      description: >-
        This endpoint allows you to update multiple segments in one request. The array of segments can contain up to `1000` records.


        If any of the records contain an error the whole request would fail and none of the requested segments get updated. The error response contains a message for only the one segment that failed validation, with the corresponding index in the array.


        You may specify component and/or price point by using either the numeric ID or the `handle:gold` syntax.
      operationId: updateSegments
      parameters:
      - name: component_id
        in: path
        description: ID or Handle for the Component
        required: true
        style: simple
        schema:
          type: string
      - name: price_point_id
        in: path
        description: ID or Handle for the Price Point belonging to the Component
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BulkUpdateSegments'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentsResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EventBasedBillingSegment1'
                - examples:
                  - errors:
                      segments:
                        '1':
                          pricing_scheme:
                          - 'Pricing scheme: cannot be blank'
                contentMediaType: application/json
              examples:
                Error response when Pricing Scheme is missing:
                  value:
                    errors:
                      segments:
                        '1':
                          pricing_scheme:
                          - 'Pricing scheme: cannot be blank'
      deprecated: false
    parameters: []
  /stats.json:
    get:
      tags:
      - Insights
      summary: readSiteStats
      description: >-
        The Stats API is a very basic view of some Site-level stats. This API call only answers with JSON responses. An XML version is not provided.


        ## Stats Documentation


        There currently is not a complimentary matching set of documentation that compliments this endpoint. However, each Site's dashboard will reflect the summary of information provided in the Stats reposnse.


        ```

        https://subdomain.chargify.com/dashboard

        ```
      operationId: readSiteStats
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SiteSummary'
                - examples:
                  - seller_name: Acme, Inc.
                    site_name: Production
                    site_id: 12345
                    site_currency: USD
                    stats:
                      total_subscriptions: 120
                      subscriptions_today: 4
                      total_revenue: $45,978.81
                      revenue_today: $1,405.12
                      revenue_this_month: $10,000.00
                      revenue_this_year: $27,935.24
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    seller_name: Acme, Inc.
                    site_name: Production
                    site_id: 12345
                    site_currency: USD
                    stats:
                      total_subscriptions: 120
                      subscriptions_today: 4
                      total_revenue: $45,978.81
                      revenue_today: $1,405.12
                      revenue_this_month: $10,000.00
                      revenue_this_year: $27,935.24
      deprecated: false
    parameters: []
  /mrr.json:
    get:
      tags:
      - Insights
      summary: readMrr
      description: This endpoint returns your site's current MRR, including plan and usage breakouts.
      operationId: readMrr
      parameters:
      - name: at_time
        in: query
        description: submit a timestamp in ISO8601 format to request MRR for a historic time
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
      - name: subscription_id
        in: query
        description: submit the id of a subscription in order to limit results
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MRRresponse'
                - examples:
                  - mrr:
                      amount_in_cents: 9915593
                      amount_formatted: $99,155.93
                      currency: USD
                      currency_symbol: $
                      at_time: 2021-02-03T14:23:17-05:00
                      breakouts:
                        plan_amount_in_cents: 9913593
                        plan_amount_formatted: $99,135.93
                        usage_amount_in_cents: 2000
                        usage_amount_formatted: $20.00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    mrr:
                      amount_in_cents: 9915593
                      amount_formatted: $99,155.93
                      currency: USD
                      currency_symbol: $
                      at_time: 2021-02-03T14:23:17-05:00
                      breakouts:
                        plan_amount_in_cents: 9913593
                        plan_amount_formatted: $99,135.93
                        usage_amount_in_cents: 2000
                        usage_amount_formatted: $20.00
      deprecated: true
    parameters: []
  /mrr_movements.json:
    get:
      tags:
      - Insights
      summary: readMrrMovements
      description: >-
        This endpoint returns your site's MRR movements.


        ## Understanding MRR movements


        This endpoint will aid in accessing your site's [MRR Report](https://chargify.zendesk.com/hc/en-us/articles/4407838249627) data.


        Whenever a subscription event occurs that causes your site's MRR to change (such as a signup or upgrade), we record an MRR movement. These records are accessible via the MRR Movements endpoint.


        Each MRR Movement belongs to a subscription and contains a timestamp, category, and an amount. `line_items` represent the subscription's product configuration at the time of the movement.


        ### Plan & Usage Breakouts


        In the MRR Report UI, we support a setting to [include or exclude](https://chargify.zendesk.com/hc/en-us/articles/4407838249627#displaying-component-based-metered-usage-in-mrr) usage revenue. In the MRR APIs, responses include `plan` and `usage` breakouts.


        Plan includes revenue from:

        * Products

        * Quantity-Based Components

        * On/Off Components


        Usage includes revenue from:

        * Metered Components

        * Prepaid Usage Components
      operationId: readMrrMovements
      parameters:
      - name: subscription_id
        in: query
        description: optionally filter results by subscription
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 10. The maximum allowed values is 50; any per_page value over 50 will be changed to 50.

          Use in query `per_page=20`.
        style: form
        explode: true
        schema:
          maximum: 50
          type: integer
          contentEncoding: int32
          default: 10
          examples:
          - 20
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListMRRResponse'
                - examples:
                  - mrr:
                      page: 0
                      per_page: 10
                      total_pages: 80
                      total_entries: 791
                      currency: USD
                      currency_symbol: $
                      movements:
                      - timestamp: 2014-12-03T13:59:46-05:00
                        amount_in_cents: 2173
                        amount_formatted: $21.73
                        description: Awesome Company signed up for Super Product ($21.73/mo)
                        category: new_business
                        breakouts:
                          plan_amount_in_cents: 2173
                          plan_amount_formatted: $21.73
                          usage_amount_in_cents: 0
                          usage_amount_formatted: $0.00
                        line_items:
                        - product_id: 306386
                          component_id: 0
                          price_point_id: 3856987
                          name: Cached Queries
                          mrr: 2173
                          mrr_movements:
                          - amount: 2173
                            category: new_business
                            subscriber_delta: 0
                            lead_delta: 0
                          quantity: 1
                          prev_quantity: 0
                          recurring: true
                        subscription_id: 12355
                        subscriber_name: Amy Smith
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    mrr:
                      page: 0
                      per_page: 10
                      total_pages: 80
                      total_entries: 791
                      currency: USD
                      currency_symbol: $
                      movements:
                      - timestamp: 2014-12-03T13:59:46-05:00
                        amount_in_cents: 2173
                        amount_formatted: $21.73
                        description: Awesome Company signed up for Super Product ($21.73/mo)
                        category: new_business
                        breakouts:
                          plan_amount_in_cents: 2173
                          plan_amount_formatted: $21.73
                          usage_amount_in_cents: 0
                          usage_amount_formatted: $0.00
                        line_items:
                        - product_id: 306386
                          component_id: 0
                          price_point_id: 3856987
                          name: Cached Queries
                          mrr: 2173
                          mrr_movements:
                          - amount: 2173
                            category: new_business
                            subscriber_delta: 0
                            lead_delta: 0
                          quantity: 1
                          prev_quantity: 0
                          recurring: true
                        subscription_id: 12355
                        subscriber_name: Amy Smith
      deprecated: true
    parameters: []
  /subscriptions_mrr.json:
    get:
      tags:
      - Insights
      summary: listMrrPerSubscription
      description: This endpoint returns your site's current MRR, including plan and usage breakouts split per subscription.
      operationId: listMrrPerSubscription
      parameters:
      - name: filter[subscription_ids]
        in: query
        description: 'Submit ids in order to limit results. Use in query: `filter[subscription_ids]=1,2,3`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: at_time
        in: query
        description: 'Submit a timestamp in ISO8601 format to request MRR for a historic time. Use in query: `at_time=2022-01-10T10:00:00-05:00`.'
        style: form
        explode: true
        schema:
          type: string
          examples:
          - at_time=2022-01-10T10:00:00-05:00
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: direction
        in: query
        description: Controls the order in which results are returned. Records are ordered by subscription_id in ascending order by default. Use in query `direction=desc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: Controls the order in which results are returned. Records are ordered by subscription_id in ascending order by default. Use in query `direction=desc`.
            examples:
            - desc
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionMRRResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionsMrrErrorResponse1'
                - examples:
                  - errors:
                      attribute:
                      - supplied value is invalid, expected ISO 8601 format
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    errors:
                      attribute:
                      - supplied value is invalid, expected ISO 8601 format
      deprecated: true
    parameters: []
  /invoices/{uid}/refunds.json:
    post:
      tags:
      - Invoices
      summary: refundInvoice
      description: >-
        Refund an invoice, segment, or consolidated invoice.


        ## Partial Refund for Consolidated Invoice


        A refund less than the total of a consolidated invoice will be split across its segments.


        A $50.00 refund on a $100.00 consolidated invoice with one $60.00 and one $40.00 segment, the refunded amount will be applied as 50% of each ($30.00 and $20.00 respectively).
      operationId: refundInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RefundInvoiceRequest'
              - examples:
                - '{"refund":{"amount":"100.00","memo":"Refund for Basic Plan renewal","payment_id":12345,"external":false,"apply_credit":false,"void_invoice":true}}'
                - '{"refund":{"memo":"Refund for basic plan renewal","payment_id":101,"amount":"125.00","segment_uids":["inv_123","inv_789"]}}'
                - '{"refund":{"memo":"Refund for basic plan renewal","payment_id":10101,"segment_uids":"all"}}'
              contentMediaType: application/json
            examples:
              Refund Invoice:
                value:
                  refund:
                    amount: '100.00'
                    memo: Refund for Basic Plan renewal
                    payment_id: 12345
                    external: false
                    apply_credit: false
                    void_invoice: true
              Refund Consolidated Invoice:
                value:
                  refund:
                    memo: Refund for basic plan renewal
                    payment_id: 101
                    amount: '125.00'
                    segment_uids:
                    - inv_123
                    - inv_789
              Refund All Segments of Consolidated Invoice:
                value:
                  refund:
                    memo: Refund for basic plan renewal
                    payment_id: 10101
                    segment_uids: all
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Amount: must be greater than 0.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Amount: must be greater than 0.'
      deprecated: false
    parameters: []
  /invoices.json:
    get:
      tags:
      - Invoices
      summary: listInvoices
      description: By default, invoices returned on the index will only include totals, not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`, `custom_fields`, or `refunds`. To include breakdowns, pass the specific field as a key in the query with a value set to `true`.
      operationId: listInvoices
      parameters:
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns invoices with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns invoices with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'The current status of the invoice.  Allowed Values: draft, open, paid, pending, voided'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: 'The current status of the invoice.  Allowed Values: draft, open, paid, pending, voided'
      - name: subscription_id
        in: query
        description: The subscription's ID.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: subscription_group_uid
        in: query
        description: The UID of the subscription group you want to fetch consolidated invoices for. This will return a paginated list of consolidated invoices for the specified group.
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: direction
        in: query
        description: The sort direction of the returned invoices.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: The sort direction of the returned invoices.
      - name: line_items
        in: query
        description: Include line items data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: discounts
        in: query
        description: Include discounts data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: taxes
        in: query
        description: Include taxes data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: credits
        in: query
        description: Include credits data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: payments
        in: query
        description: Include payments data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: custom_fields
        in: query
        description: Include custom fields data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: refunds
        in: query
        description: Include refunds data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: date_field
        in: query
        description: The type of filter you would like to apply to your search. Use in query `date_field=issue_date`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/InvoiceDateField'
          - description: The type of filter you would like to apply to your search. Use in query `date_field=issue_date`.
            examples:
            - issue_date
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns invoices with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date. Allowed to be used only along with date_field set to created_at or updated_at.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns invoices with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date. Allowed to be used only along with date_field set to created_at or updated_at.
        style: form
        explode: true
        schema:
          type: string
      - name: customer_ids
        in: query
        description: Allows fetching invoices with matching customer id based on provided values. Use in query `customer_ids=1,2,3`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: number
        in: query
        description: Allows fetching invoices with matching invoice number based on provided values. Use in query `number=1234,1235`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - '1234'
            - '1235'
      - name: product_ids
        in: query
        description: Allows fetching invoices with matching line items product ids based on provided values. Use in query `product_ids=23,34`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 23
            - 34
      - name: sort
        in: query
        description: Allows specification of the order of the returned list. Use in query `sort=total_amount`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/InvoiceSortField'
          - description: Allows specification of the order of the returned list. Use in query `sort=total_amount`.
            examples:
            - total_amount
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListInvoicesResponse'
                - examples:
                  - invoices:
                    - uid: inv_8htcd29wcq3q6
                      site_id: 51288
                      customer_id: 20153415
                      subscription_id: 23277588
                      number: '125'
                      sequence_number: 125
                      issue_date: 2018-09-20
                      due_date: 2018-09-20
                      paid_date: 2018-09-20
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: parent
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: 23277588
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20153415
                        first_name: Meg
                        last_name: Example
                        organization: ''
                        email: meg@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '100.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8htcd29wcq3q6?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hr3546xp4h8n
                      site_id: 51288
                      customer_id: 21687686
                      subscription_id: 22007644
                      number: '124'
                      sequence_number: 124
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687686
                        first_name: Charlene
                        last_name: Tester
                        organization: ''
                        email: food@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      shipping_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '100.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546xp4h8n?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hr3546wdwxkr
                      site_id: 51288
                      customer_id: 21687670
                      subscription_id: 22007627
                      number: '123'
                      sequence_number: 123
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: 2018-09-18
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial End - Free
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687670
                        first_name: Hello
                        last_name: World
                        organization: '123'
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 Anywhere Street
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      shipping_address:
                        street: ''
                        line2: ''
                        city: Boston
                        state: AL
                        zip: '02120'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546wdwxkr?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hjtk8bz56bbp
                      site_id: 51288
                      customer_id: 20137757
                      subscription_id: 20541100
                      number: '122'
                      sequence_number: 122
                      issue_date: 2018-09-10
                      due_date: 2018-09-10
                      paid_date: 2018-09-10
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: $0 Product
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20137757
                        first_name: Sasha
                        last_name: Example
                        organization: ''
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: AL
                        zip: '90210'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hjtk8bz56bbp?token=fb6kpjz5rcr2vttyjs4rcv6y
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    invoices:
                    - uid: inv_8htcd29wcq3q6
                      site_id: 51288
                      customer_id: 20153415
                      subscription_id: 23277588
                      number: '125'
                      sequence_number: 125
                      issue_date: 2018-09-20
                      due_date: 2018-09-20
                      paid_date: 2018-09-20
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: parent
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: 23277588
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20153415
                        first_name: Meg
                        last_name: Example
                        organization: ''
                        email: meg@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '100.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8htcd29wcq3q6?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hr3546xp4h8n
                      site_id: 51288
                      customer_id: 21687686
                      subscription_id: 22007644
                      number: '124'
                      sequence_number: 124
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687686
                        first_name: Charlene
                        last_name: Tester
                        organization: ''
                        email: food@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      shipping_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '100.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546xp4h8n?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hr3546wdwxkr
                      site_id: 51288
                      customer_id: 21687670
                      subscription_id: 22007627
                      number: '123'
                      sequence_number: 123
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: 2018-09-18
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial End - Free
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687670
                        first_name: Hello
                        last_name: World
                        organization: '123'
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 Anywhere Street
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      shipping_address:
                        street: ''
                        line2: ''
                        city: Boston
                        state: AL
                        zip: '02120'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546wdwxkr?token=n9fr5fxff5v74c7h9srg3cwd
                    - uid: inv_8hjtk8bz56bbp
                      site_id: 51288
                      customer_id: 20137757
                      subscription_id: 20541100
                      number: '122'
                      sequence_number: 122
                      issue_date: 2018-09-10
                      due_date: 2018-09-10
                      paid_date: 2018-09-10
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: $0 Product
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20137757
                        first_name: Sasha
                        last_name: Example
                        organization: ''
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: AL
                        zip: '90210'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hjtk8bz56bbp?token=fb6kpjz5rcr2vttyjs4rcv6y
      deprecated: false
    parameters: []
  /invoices/{uid}.json:
    get:
      tags:
      - Invoices
      summary: readInvoice
      description: Use this endpoint to retrieve the details for an invoice.
      operationId: readInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Invoice'
                - examples:
                  - uid: inv_8gd8tdhtd3hgr
                    site_id: 51288
                    customer_id: 20194505
                    subscription_id: 20597774
                    number: '117'
                    sequence_number: 117
                    issue_date: 2018-07-26
                    due_date: 2018-07-26
                    paid_date: 2018-07-26
                    status: paid
                    collection_method: automatic
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: none
                    parent_invoice_uid: null
                    parent_invoice_number: null
                    group_primary_subscription_id: null
                    product_name: Monthly Product
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 20194505
                      first_name: Joe
                      last_name: Example
                      organization: null
                      email: joe@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: null
                      line2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                    shipping_address:
                      street: null
                      line2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                    subtotal_amount: '100.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '100.0'
                    credit_amount: '0.0'
                    paid_amount: '100.0'
                    refund_amount: '0.0'
                    due_amount: '0.0'
                    line_items:
                    - uid: li_8gd8tdhhgk55k
                      title: Monthly Product
                      description: Jul 26, 2018 - Aug 26, 2018
                      quantity: '1.0'
                      unit_price: '100.0'
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      tiered_unit_price: false
                      period_range_start: 2018-07-26
                      period_range_end: 2018-08-26
                      product_id: 4607632
                      product_version: 1
                      component_id: null
                      price_point_id: null
                    discounts: []
                    taxes: []
                    credits: []
                    payments:
                    - transaction_time: 2018-07-26T15:22:02Z
                      memo: 'Joe Example - Monthly Product: Renewal payment'
                      original_amount: '100.0'
                      applied_amount: '100.0'
                      payment_method:
                        card_brand: bogus
                        card_expiration: 10/2020
                        last_four: null
                        masked_card_number: XXXX-XXXX-XXXX-1
                        type: credit_card
                      transaction_id: 253028955
                      prepayment: false
                    refunds: []
                    custom_fields: []
                    public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: inv_8gd8tdhtd3hgr
                    site_id: 51288
                    customer_id: 20194505
                    subscription_id: 20597774
                    number: '117'
                    sequence_number: 117
                    issue_date: 2018-07-26
                    due_date: 2018-07-26
                    paid_date: 2018-07-26
                    status: paid
                    collection_method: automatic
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: none
                    parent_invoice_uid: null
                    parent_invoice_number: null
                    group_primary_subscription_id: null
                    product_name: Monthly Product
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 20194505
                      first_name: Joe
                      last_name: Example
                      organization: null
                      email: joe@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: null
                      line2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                    shipping_address:
                      street: null
                      line2: null
                      city: null
                      state: null
                      zip: null
                      country: null
                    subtotal_amount: '100.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '100.0'
                    credit_amount: '0.0'
                    paid_amount: '100.0'
                    refund_amount: '0.0'
                    due_amount: '0.0'
                    line_items:
                    - uid: li_8gd8tdhhgk55k
                      title: Monthly Product
                      description: Jul 26, 2018 - Aug 26, 2018
                      quantity: '1.0'
                      unit_price: '100.0'
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      tiered_unit_price: false
                      period_range_start: 2018-07-26
                      period_range_end: 2018-08-26
                      product_id: 4607632
                      product_version: 1
                      component_id: null
                      price_point_id: null
                    discounts: []
                    taxes: []
                    credits: []
                    payments:
                    - transaction_time: 2018-07-26T15:22:02Z
                      memo: 'Joe Example - Monthly Product: Renewal payment'
                      original_amount: '100.0'
                      applied_amount: '100.0'
                      payment_method:
                        card_brand: bogus
                        card_expiration: 10/2020
                        last_four: null
                        masked_card_number: XXXX-XXXX-XXXX-1
                        type: credit_card
                      transaction_id: 253028955
                      prepayment: false
                    refunds: []
                    custom_fields: []
                    public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
      deprecated: false
    parameters: []
  /invoices/events.json:
    get:
      tags:
      - Invoices
      summary: listInvoiceEvents
      description: >-
        This endpoint returns a list of invoice events. Each event contains event "data" (such as an applied payment) as well as a snapshot of the `invoice` at the time of event completion.


        Exposed event types are:


        + issue_invoice

        + apply_credit_note

        + apply_payment

        + refund_invoice

        + void_invoice

        + void_remainder

        + backport_invoice

        + change_invoice_status

        + change_invoice_collection_method

        + remove_payment

        + failed_payment

        + apply_debit_note

        + create_debit_note

        + change_chargeback_status


        Invoice events are returned in ascending order.


        If both a `since_date` and `since_id` are provided in request parameters, the `since_date` will be used.


        Note - invoice events that occurred prior to 09/05/2018 __will not__ contain an `invoice` snapshot.
      operationId: listInvoiceEvents
      parameters:
      - name: since_date
        in: query
        description: The timestamp in a format `YYYY-MM-DD T HH:MM:SS Z`, or `YYYY-MM-DD`(in this case, it returns data from the beginning of the day). of the event from which you want to start the search. All the events before the `since_date` timestamp are not returned in the response.
        style: form
        explode: true
        schema:
          type: string
      - name: since_id
        in: query
        description: The ID of the event from which you want to start the search(ID is not included. e.g. if ID is set to 2, then all events with ID 3 and more will be shown) This parameter is not used if since_date is defined.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: This parameter indicates how many records to fetch in each request. Default value is 100. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          default: 100
      - name: invoice_uid
        in: query
        description: Providing an invoice_uid allows for scoping of the invoice events to a single invoice or credit note.
        style: form
        explode: true
        schema:
          type: string
      - name: with_change_invoice_status
        in: query
        description: Use this parameter if you want to fetch also invoice events with change_invoice_status type.
        style: form
        explode: true
        schema:
          type: string
      - name: event_types
        in: query
        description: 'Filter results by event_type. Supply a comma separated list of event types (listed above). Use in query: `event_types=void_invoice,void_remainder`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceEventType'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListInvoiceEventsResponse'
                - examples:
                  - events:
                    - id: 83
                      event_type: apply_payment
                      event_data:
                        memo: 'Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment'
                        original_amount: '168.61'
                        applied_amount: '168.61'
                        transaction_time: 2018-08-01T16:00:00Z
                        payment_method:
                          card_brand: visa
                          card_expiration: 12/2022
                          last_four: null
                          masked_card_number: XXXX-XXXX-XXXX-1111
                          type: credit_card
                        consolidation_level: none
                      timestamp: 2018-08-01T16:00:00Z
                      invoice:
                        id: 614942008934401500
                        uid: inv_8gk5bwkct3gqt
                        site_id: 20
                        customer_id: 6
                        subscription_id: 10
                        number: '25'
                        sequence_number: 25
                        transaction_time: 2018-08-01T16:00:00Z
                        created_at: 2018-08-01T16:00:00Z
                        updated_at: 2018-08-01T16:00:00Z
                        issue_date: 2018-08-01
                        due_date: 2018-08-01
                        paid_date: 2018-08-01
                        status: paid
                        role: renewal
                        collection_method: automatic
                        payment_instructions: Please make checks payable to "Acme, Inc."
                        currency: USD
                        consolidation_level: none
                        parent_invoice_id: null
                        subscription_group_id: null
                        parent_invoice_number: null
                        product_name: Standard Plan
                        product_family_name: Cloud Compute Servers
                        seller:
                          name: Acme, Inc.
                          address:
                            street: null
                            line2: null
                            city: null
                            state: null
                            zip: null
                            country: null
                          phone: 555-555-1234 x137
                          logo_url: null
                        customer:
                          chargify_id: 6
                          first_name: Non-Resumable
                          last_name: Canceled On Purpose
                          organization: null
                          email: evan4@example.com
                        payer:
                          chargify_id: 6
                          first_name: Non-Resumable
                          last_name: Canceled On Purpose
                          organization: null
                          email: evan4@example.com
                        recipient_emails: []
                        net_terms: 0
                        memo: Thanks for your business! If you have any questions, please contact your account manager.
                        billing_address:
                          street: 200 Billing Rd.
                          line2: Suite 100
                          city: Needham
                          state: MA
                          zip: '02494'
                          country: US
                        shipping_address:
                          street: 100 Shipping St.
                          line2: Apt 200
                          city: Pleasantville
                          state: NC
                          zip: '12345'
                          country: US
                        line_items:
                        - uid: li_8gk5bwkct3gqk
                          title: Standard Plan
                          description: 08/01/2018 - 09/01/2018
                          quantity: '1.0'
                          unit_price: '99.0'
                          subtotal_amount: '99.0'
                          discount_amount: '9.9'
                          tax_amount: '6.01425'
                          total_amount: '95.11425'
                          tiered_unit_price: false
                          period_range_start: 2018-08-01
                          period_range_end: 2018-09-01
                          transaction_id: 120
                          product_id: 84
                          product_version: 1
                          component_id: null
                          price_point_id: null
                          hide: false
                        - uid: li_8gk5bwkct3gqm
                          title: Small Instance (Hourly)
                          description: 07/22/2018 - 08/01/2018
                          quantity: '162.0'
                          unit_price: '0.09567901'
                          subtotal_amount: '15.5'
                          discount_amount: '1.55'
                          tax_amount: '0.941625'
                          total_amount: '14.891625'
                          tiered_unit_price: true
                          period_range_start: 2018-07-22
                          period_range_end: 2018-08-01
                          transaction_id: 121
                          product_id: 84
                          product_version: 1
                          component_id: 76
                          price_point_id: null
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 160
                              product_id: 84
                              quantity: '162.0'
                              amount: '15.5'
                              pricing_scheme: tiered
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: 100
                                quantity: '100.0'
                                unit_price: '0.0'
                                amount: '0.0'
                              - starting_quantity: 101
                                ending_quantity: null
                                quantity: '62.0'
                                unit_price: '0.25'
                                amount: '15.5'
                        - uid: li_8gk5bwkct3gqn
                          title: Large Instance (Hourly)
                          description: 07/22/2018 - 08/01/2018
                          quantity: '194.0'
                          unit_price: '0.24226804'
                          subtotal_amount: '47.0'
                          discount_amount: '4.7'
                          tax_amount: '2.85525'
                          total_amount: '45.15525'
                          tiered_unit_price: true
                          period_range_start: 2018-07-22
                          period_range_end: 2018-08-01
                          transaction_id: 122
                          product_id: 84
                          product_version: 1
                          component_id: 77
                          price_point_id: null
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 161
                              product_id: 84
                              quantity: '194.0'
                              amount: '47.0'
                              pricing_scheme: tiered
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: 100
                                quantity: '100.0'
                                unit_price: '0.0'
                                amount: '0.0'
                              - starting_quantity: 101
                                ending_quantity: null
                                quantity: '94.0'
                                unit_price: '0.5'
                                amount: '47.0'
                        - uid: li_8gk5bwkct3gqp
                          title: IP Addresses
                          description: 08/01/2018 - 09/01/2018
                          quantity: '7.0'
                          unit_price: '2.0'
                          subtotal_amount: '14.0'
                          discount_amount: '1.4'
                          tax_amount: '0.8505'
                          total_amount: '13.4505'
                          tiered_unit_price: false
                          period_range_start: 2018-08-01
                          period_range_end: 2018-09-01
                          transaction_id: 123
                          product_id: 84
                          product_version: 1
                          component_id: 79
                          price_point_id: 163
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 163
                              product_id: 84
                              quantity: '7.0'
                              amount: '14.0'
                              pricing_scheme: per_unit
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: null
                                quantity: '7.0'
                                unit_price: '2.0'
                                amount: '14.0'
                        subtotal_amount: '175.5'
                        discount_amount: '17.55'
                        discounts:
                        - uid: dli_8gk5bwkct3gqq
                          title: Multi-service discount (10%)
                          description: null
                          code: MULTI3
                          source_type: Coupon
                          source_id: 40
                          discount_type: percentage
                          percentage: '10.0'
                          eligible_amount: '175.5'
                          discount_amount: '17.55'
                          transaction_id: 124
                          line_item_breakouts:
                          - uid: li_8gk5bwkct3gqk
                            eligible_amount: '99.0'
                            discount_amount: '9.9'
                          - uid: li_8gk5bwkct3gqm
                            eligible_amount: '15.5'
                            discount_amount: '1.55'
                          - uid: li_8gk5bwkct3gqn
                            eligible_amount: '47.0'
                            discount_amount: '4.7'
                          - uid: li_8gk5bwkct3gqp
                            eligible_amount: '14.0'
                            discount_amount: '1.4'
                        tax_amount: '10.66'
                        taxes:
                        - uid: tli_8gk5bwkct3gqr
                          title: NC Sales Tax
                          description: null
                          source_type: Tax
                          source_id: 1
                          percentage: '6.75'
                          taxable_amount: '157.95'
                          tax_amount: '10.66'
                          transaction_id: 125
                          line_item_breakouts:
                          - uid: li_8gk5bwkct3gqk
                            taxable_amount: '89.1'
                            tax_amount: '6.01425'
                          - uid: li_8gk5bwkct3gqm
                            taxable_amount: '13.95'
                            tax_amount: '0.941625'
                          - uid: li_8gk5bwkct3gqn
                            taxable_amount: '42.3'
                            tax_amount: '2.85525'
                          - uid: li_8gk5bwkct3gqp
                            taxable_amount: '12.6'
                            tax_amount: '0.8505'
                          tax_component_breakouts:
                          - tax_rule_id: 1
                            percentage: '6.75'
                            country_code: US
                            subdivision_code: NC
                        credit_amount: '0.0'
                        refund_amount: '0.0'
                        total_amount: '168.61'
                        paid_amount: '168.61'
                        due_amount: '0.0'
                        credits: []
                        refunds: []
                        payments:
                        - memo: 'Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment'
                          original_amount: '168.61'
                          applied_amount: '168.61'
                          transaction_time: 2018-08-01T16:00:00Z
                          payment_method:
                            card_brand: visa
                            card_expiration: 12/2022
                            last_four: null
                            masked_card_number: XXXX-XXXX-XXXX-1111
                            type: credit_card
                          transaction_id: 126
                          prepayment: false
                        custom_fields: []
                        display_settings:
                          hide_zero_subtotal_lines: false
                          include_discounts_on_lines: false
                    page: 48
                    per_page: 1
                    total_pages: 102
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    events:
                    - id: 83
                      event_type: apply_payment
                      event_data:
                        memo: 'Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment'
                        original_amount: '168.61'
                        applied_amount: '168.61'
                        transaction_time: 2018-08-01T16:00:00Z
                        payment_method:
                          card_brand: visa
                          card_expiration: 12/2022
                          last_four: null
                          masked_card_number: XXXX-XXXX-XXXX-1111
                          type: credit_card
                        consolidation_level: none
                      timestamp: 2018-08-01T16:00:00Z
                      invoice:
                        id: 614942008934401500
                        uid: inv_8gk5bwkct3gqt
                        site_id: 20
                        customer_id: 6
                        subscription_id: 10
                        number: '25'
                        sequence_number: 25
                        transaction_time: 2018-08-01T16:00:00Z
                        created_at: 2018-08-01T16:00:00Z
                        updated_at: 2018-08-01T16:00:00Z
                        issue_date: 2018-08-01
                        due_date: 2018-08-01
                        paid_date: 2018-08-01
                        status: paid
                        role: renewal
                        collection_method: automatic
                        payment_instructions: Please make checks payable to "Acme, Inc."
                        currency: USD
                        consolidation_level: none
                        parent_invoice_id: null
                        subscription_group_id: null
                        parent_invoice_number: null
                        product_name: Standard Plan
                        product_family_name: Cloud Compute Servers
                        seller:
                          name: Acme, Inc.
                          address:
                            street: null
                            line2: null
                            city: null
                            state: null
                            zip: null
                            country: null
                          phone: 555-555-1234 x137
                          logo_url: null
                        customer:
                          chargify_id: 6
                          first_name: Non-Resumable
                          last_name: Canceled On Purpose
                          organization: null
                          email: evan4@example.com
                        payer:
                          chargify_id: 6
                          first_name: Non-Resumable
                          last_name: Canceled On Purpose
                          organization: null
                          email: evan4@example.com
                        recipient_emails: []
                        net_terms: 0
                        memo: Thanks for your business! If you have any questions, please contact your account manager.
                        billing_address:
                          street: 200 Billing Rd.
                          line2: Suite 100
                          city: Needham
                          state: MA
                          zip: '02494'
                          country: US
                        shipping_address:
                          street: 100 Shipping St.
                          line2: Apt 200
                          city: Pleasantville
                          state: NC
                          zip: '12345'
                          country: US
                        line_items:
                        - uid: li_8gk5bwkct3gqk
                          title: Standard Plan
                          description: 08/01/2018 - 09/01/2018
                          quantity: '1.0'
                          unit_price: '99.0'
                          subtotal_amount: '99.0'
                          discount_amount: '9.9'
                          tax_amount: '6.01425'
                          total_amount: '95.11425'
                          tiered_unit_price: false
                          period_range_start: 2018-08-01
                          period_range_end: 2018-09-01
                          transaction_id: 120
                          product_id: 84
                          product_version: 1
                          component_id: null
                          price_point_id: null
                          hide: false
                        - uid: li_8gk5bwkct3gqm
                          title: Small Instance (Hourly)
                          description: 07/22/2018 - 08/01/2018
                          quantity: '162.0'
                          unit_price: '0.09567901'
                          subtotal_amount: '15.5'
                          discount_amount: '1.55'
                          tax_amount: '0.941625'
                          total_amount: '14.891625'
                          tiered_unit_price: true
                          period_range_start: 2018-07-22
                          period_range_end: 2018-08-01
                          transaction_id: 121
                          product_id: 84
                          product_version: 1
                          component_id: 76
                          price_point_id: null
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 160
                              product_id: 84
                              quantity: '162.0'
                              amount: '15.5'
                              pricing_scheme: tiered
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: 100
                                quantity: '100.0'
                                unit_price: '0.0'
                                amount: '0.0'
                              - starting_quantity: 101
                                ending_quantity: null
                                quantity: '62.0'
                                unit_price: '0.25'
                                amount: '15.5'
                        - uid: li_8gk5bwkct3gqn
                          title: Large Instance (Hourly)
                          description: 07/22/2018 - 08/01/2018
                          quantity: '194.0'
                          unit_price: '0.24226804'
                          subtotal_amount: '47.0'
                          discount_amount: '4.7'
                          tax_amount: '2.85525'
                          total_amount: '45.15525'
                          tiered_unit_price: true
                          period_range_start: 2018-07-22
                          period_range_end: 2018-08-01
                          transaction_id: 122
                          product_id: 84
                          product_version: 1
                          component_id: 77
                          price_point_id: null
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 161
                              product_id: 84
                              quantity: '194.0'
                              amount: '47.0'
                              pricing_scheme: tiered
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: 100
                                quantity: '100.0'
                                unit_price: '0.0'
                                amount: '0.0'
                              - starting_quantity: 101
                                ending_quantity: null
                                quantity: '94.0'
                                unit_price: '0.5'
                                amount: '47.0'
                        - uid: li_8gk5bwkct3gqp
                          title: IP Addresses
                          description: 08/01/2018 - 09/01/2018
                          quantity: '7.0'
                          unit_price: '2.0'
                          subtotal_amount: '14.0'
                          discount_amount: '1.4'
                          tax_amount: '0.8505'
                          total_amount: '13.4505'
                          tiered_unit_price: false
                          period_range_start: 2018-08-01
                          period_range_end: 2018-09-01
                          transaction_id: 123
                          product_id: 84
                          product_version: 1
                          component_id: 79
                          price_point_id: 163
                          hide: false
                          component_cost_data:
                            rates:
                            - component_code_id: null
                              price_point_id: 163
                              product_id: 84
                              quantity: '7.0'
                              amount: '14.0'
                              pricing_scheme: per_unit
                              tiers:
                              - starting_quantity: 1
                                ending_quantity: null
                                quantity: '7.0'
                                unit_price: '2.0'
                                amount: '14.0'
                        subtotal_amount: '175.5'
                        discount_amount: '17.55'
                        discounts:
                        - uid: dli_8gk5bwkct3gqq
                          title: Multi-service discount (10%)
                          description: null
                          code: MULTI3
                          source_type: Coupon
                          source_id: 40
                          discount_type: percentage
                          percentage: '10.0'
                          eligible_amount: '175.5'
                          discount_amount: '17.55'
                          transaction_id: 124
                          line_item_breakouts:
                          - uid: li_8gk5bwkct3gqk
                            eligible_amount: '99.0'
                            discount_amount: '9.9'
                          - uid: li_8gk5bwkct3gqm
                            eligible_amount: '15.5'
                            discount_amount: '1.55'
                          - uid: li_8gk5bwkct3gqn
                            eligible_amount: '47.0'
                            discount_amount: '4.7'
                          - uid: li_8gk5bwkct3gqp
                            eligible_amount: '14.0'
                            discount_amount: '1.4'
                        tax_amount: '10.66'
                        taxes:
                        - uid: tli_8gk5bwkct3gqr
                          title: NC Sales Tax
                          description: null
                          source_type: Tax
                          source_id: 1
                          percentage: '6.75'
                          taxable_amount: '157.95'
                          tax_amount: '10.66'
                          transaction_id: 125
                          line_item_breakouts:
                          - uid: li_8gk5bwkct3gqk
                            taxable_amount: '89.1'
                            tax_amount: '6.01425'
                          - uid: li_8gk5bwkct3gqm
                            taxable_amount: '13.95'
                            tax_amount: '0.941625'
                          - uid: li_8gk5bwkct3gqn
                            taxable_amount: '42.3'
                            tax_amount: '2.85525'
                          - uid: li_8gk5bwkct3gqp
                            taxable_amount: '12.6'
                            tax_amount: '0.8505'
                          tax_component_breakouts:
                          - tax_rule_id: 1
                            percentage: '6.75'
                            country_code: US
                            subdivision_code: NC
                        credit_amount: '0.0'
                        refund_amount: '0.0'
                        total_amount: '168.61'
                        paid_amount: '168.61'
                        due_amount: '0.0'
                        credits: []
                        refunds: []
                        payments:
                        - memo: 'Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment'
                          original_amount: '168.61'
                          applied_amount: '168.61'
                          transaction_time: 2018-08-01T16:00:00Z
                          payment_method:
                            card_brand: visa
                            card_expiration: 12/2022
                            last_four: null
                            masked_card_number: XXXX-XXXX-XXXX-1111
                            type: credit_card
                          transaction_id: 126
                          prepayment: false
                        custom_fields: []
                        display_settings:
                          hide_zero_subtotal_lines: false
                          include_discounts_on_lines: false
                    page: 48
                    per_page: 1
                    total_pages: 102
      deprecated: false
    parameters: []
  /invoices/{uid}/payments.json:
    post:
      tags:
      - Invoices
      summary: recordPaymentForInvoice
      description: >-
        This API call should be used when you want to record a payment of a given type against a specific invoice. If you would like to apply a payment across multiple invoices, you can use the Bulk Payment endpoint.


        ## Create a Payment from the existing payment profile


        In order to apply a payment to an invoice using an existing payment profile, specify `type` as `payment`, the amount less than the invoice total, and the customer's `payment_profile_id`. The ID of a payment profile might be retrieved via the Payment Profiles API endpoint.


        ```

        {
          "type": "payment",
          "payment": {
            "amount": 10.00,
            "payment_profile_id": 123
          }
        }

        ```


        ## Create a Payment from the Subscription's Prepayment Account


        In order apply a prepayment to an invoice, specify the `type` as `prepayment`, and also the `amount`.


        ```

        {
          "type": "prepayment",
          "payment": {
            "amount": 10.00
          }
        }

        ```


        Note that the `amount` must be less than or equal to the Subscription's Prepayment account balance.


        ## Create a Payment from the Subscription's Service Credit Account


        In order to apply a service credit to an invoice, specify the `type` as `service_credit`, and also the `amount`:



        ```

        {
          "type": "service_credit",
          "payment": {
            "amount": 10.00
          }
        }

        ```


        Note that Chargify will attempt to fully pay the invoice's `due_amount` from the Subscription's Service Credit account. At this time, partial payments from a Service Credit Account are only allowed for consolidated invoices (subscription groups). Therefore, for normal invoices the Service Credit account balance must be greater than or equal to the invoice's `due_amount`.
      operationId: recordPaymentForInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateInvoicePaymentRequest'
              - examples:
                - '{"payment":{"amount":124.33,"memo":"for John Smith","method":"check","details":"#0102"}}'
                - '{"type":"prepayment","payment":{"amount":10}}'
              contentMediaType: application/json
            examples:
              Example 1:
                value:
                  payment:
                    amount: 124.33
                    memo: for John Smith
                    method: check
                    details: '#0102'
              Example 2:
                value:
                  type: prepayment
                  payment:
                    amount: 10
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      deprecated: false
    parameters: []
  /invoices/payments.json:
    post:
      tags:
      - Invoices
      summary: recordExternalPaymentForInvoices
      description: >-
        This API call should be used when you want to record an external payment against multiple invoices.

         In order apply a payment to multiple invoices, at minimum, specify the `amount` and `applications` (i.e., `invoice_uid` and `amount`) details.

        ```

        {
          "payment": {
            "memo": "to pay the bills",
            "details": "check number 8675309",
            "method": "check",
            "amount": "250.00",
            "applications": [
              {
                "invoice_uid": "inv_8gk5bwkct3gqt",
                "amount": "100.00"
              },
              {
                "invoice_uid": "inv_7bc6bwkct3lyt",
                "amount": "150.00"
              }
            ]
          }
        }

        ```


        Note that the invoice payment amounts must be greater than 0. Total amount must be greater or equal to invoices payment amount sum.
      operationId: recordExternalPaymentForInvoices
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateMultiInvoicePaymentRequest'
              - examples:
                - payment:
                    memo: to pay the bills
                    details: check number 8675309
                    method: check
                    amount: '100.00'
                    applications:
                    - invoice_uid: inv_8gk5bwkct3gqt
                      amount: '50.00'
                    - invoice_uid: inv_7bc6bwkct3lyt
                      amount: '50.00'
              contentMediaType: application/json
            examples:
              Example:
                value:
                  payment:
                    memo: to pay the bills
                    details: check number 8675309
                    method: check
                    amount: '100.00'
                    applications:
                    - invoice_uid: inv_8gk5bwkct3gqt
                      amount: '50.00'
                    - invoice_uid: inv_7bc6bwkct3lyt
                      amount: '50.00'
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MultiInvoicePaymentResponse'
                - examples:
                  - payment:
                      transaction_id: 1
                      total_amount: '100.00'
                      currency_code: USD
                      applications:
                      - invoice_uid: inv_8gk5bwkct3gqt
                        application_uid: pmt_1tr0hgsct3ybx
                        applied_amount: '50.00'
                      - invoice_uid: inv_7bc6bwkct3lyt
                        application_uid: pmt_2
                        applied_amount: '50.00'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment:
                      transaction_id: 1
                      total_amount: '100.00'
                      currency_code: USD
                      applications:
                      - invoice_uid: inv_8gk5bwkct3gqt
                        application_uid: pmt_1tr0hgsct3ybx
                        applied_amount: '50.00'
                      - invoice_uid: inv_7bc6bwkct3lyt
                        application_uid: pmt_2
                        applied_amount: '50.00'
        '422':
          description: Unprocessable Entity
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Total amount must be greater than 0
                    - Total amount must be higher or equal to invoices payment amount sum
                    - Invoice does not exist
                    - Payment method must valid
                    - Invoices must be in the same currency
                    - A required parameter is missing
                    - Invoices belong to different subscriptions. Only invoices from same subscriptions are allowed when total amount exceeds invoices due amount.
                    - Individual invoices may not be overpaid. To create a prepayment, add overage to the total amount.
                    - Paying consolidated invoices is forbidden
                    - Invoice payment amounts must be greater than 0
                    - Invoice must have an open balance
                    - Effective date is missing
                    - Effective date is invalid or malformed
                    - Effective date must occur in the past
                    - Multiple applications associated to a single invoice, please aggregate and send as a single application per invoice.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Total amount must be greater than 0
                    - Total amount must be higher or equal to invoices payment amount sum
                    - Invoice does not exist
                    - Payment method must valid
                    - Invoices must be in the same currency
                    - A required parameter is missing
                    - Invoices belong to different subscriptions. Only invoices from same subscriptions are allowed when total amount exceeds invoices due amount.
                    - Individual invoices may not be overpaid. To create a prepayment, add overage to the total amount.
                    - Paying consolidated invoices is forbidden
                    - Invoice payment amounts must be greater than 0
                    - Invoice must have an open balance
                    - Effective date is missing
                    - Effective date is invalid or malformed
                    - Effective date must occur in the past
                    - Multiple applications associated to a single invoice, please aggregate and send as a single application per invoice.
      deprecated: false
    parameters: []
  /credit_notes.json:
    get:
      tags:
      - Invoices
      summary: listCreditNotes
      description: >-
        Credit Notes are like inverse invoices. They reduce the amount a customer owes.


        By default, the credit notes returned by this endpoint will exclude the arrays of `line_items`, `discounts`, `taxes`, `applications`, or `refunds`. To include these arrays, pass the specific field as a key in the query with a value set to `true`.
      operationId: listCreditNotes
      parameters:
      - name: subscription_id
        in: query
        description: The subscription's Chargify id
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: line_items
        in: query
        description: Include line items data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: discounts
        in: query
        description: Include discounts data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: taxes
        in: query
        description: Include taxes data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: refunds
        in: query
        description: Include refunds data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: applications
        in: query
        description: Include applications data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListCreditNotesResponse'
                - examples:
                  - credit_notes:
                    - uid: cn_8m9vbd5kkv7kr
                      site_id: 20
                      customer_id: 3
                      subscription_id: 2
                      number: '77'
                      sequence_number: 78
                      issue_date: 2018-12-31
                      applied_date: 2018-12-31
                      status: applied
                      currency: USD
                      memo: Refund for overpayment
                      seller:
                        name: Acme, Inc.
                        address:
                          street: 122 E Houston St
                          line2: Suite 105
                          city: San Antonio
                          state: TX
                          zip: '78205'
                          country: US
                        phone: 555-555-1234 x137
                      customer:
                        chargify_id: 3
                        first_name: Marty
                        last_name: McFly
                        organization: Time Travellers, Inc.
                        email: timetraveller1985@example.com
                        reference: null
                      billing_address:
                        street: 200 Billing Rd.
                        line2: Suite 100
                        city: Needham
                        state: MA
                        zip: '02494'
                        country: US
                      shipping_address:
                        street: 100 Shipping St.
                        line2: Apt 200
                        city: Pleasantville
                        state: NC
                        zip: '12345'
                        country: US
                      subtotal_amount: '208.69341779'
                      discount_amount: '20.87125167'
                      tax_amount: '12.67783387'
                      total_amount: '200.5'
                      applied_amount: '200.5'
                      remaining_amount: '0.0'
                      line_items:
                      - uid: cnli_8k5jvdzct4h9x
                        title: 'IP Addresses: 5 to 10 addresses'
                        description: 38.2% credit
                        quantity: '0.9855'
                        unit_price: '2.0'
                        subtotal_amount: '1.971004'
                        discount_amount: '0.19862831'
                        tax_amount: '0.11963536'
                        total_amount: '1.89201105'
                        tiered_unit_price: false
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 81
                        price_point_id: 165
                      - uid: cnli_8kjttvjcjx8b4
                        title: Professional Plan
                        description: 38.2% credit
                        quantity: '0.382'
                        unit_price: '299.0'
                        subtotal_amount: '114.21127834'
                        discount_amount: '11.42112783'
                        tax_amount: '6.93833516'
                        total_amount: '109.72848567'
                        tiered_unit_price: false
                        period_range_start: 2018-12-30
                        period_range_end: 2018-12-30
                        product_id: 85
                        product_version: 1
                        component_id: null
                        price_point_id: null
                      - uid: cnli_8kjttvjknzhx7
                        title: Small Instance (Hourly)
                        description: 38.2% credit
                        quantity: '74.8676'
                        unit_price: '0.12244898'
                        subtotal_amount: '9.16746047'
                        discount_amount: '0.91674605'
                        tax_amount: '0.55692322'
                        total_amount: '8.80763764'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 78
                        price_point_id: null
                      - uid: cnli_8kjttvjnmh25w
                        title: Large Instance (Hourly)
                        description: 38.2% credit
                        quantity: '183.3492'
                        unit_price: '0.39583333'
                        subtotal_amount: '72.57572871'
                        discount_amount: '7.25757287'
                        tax_amount: '4.40897552'
                        total_amount: '69.72713136'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 79
                        price_point_id: null
                      - uid: cnli_8kjttvjqn86kc
                        title: Email Messages
                        description: 38.2% credit
                        quantity: '10076.9489'
                        unit_price: '0.00031045'
                        subtotal_amount: '3.12839588'
                        discount_amount: '0.31322157'
                        tax_amount: '0.19002427'
                        total_amount: '3.00519858'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 80
                        price_point_id: null
                      - uid: cnli_8kjttvjtxxbdd
                        title: IP Addresses
                        description: 38.2% credit
                        quantity: '3.8198'
                        unit_price: '2.0'
                        subtotal_amount: '7.63955039'
                        discount_amount: '0.76395504'
                        tax_amount: '0.46410269'
                        total_amount: '7.33969804'
                        tiered_unit_price: false
                        period_range_start: 2018-12-30
                        period_range_end: 2018-12-30
                        product_id: 85
                        product_version: 1
                        component_id: 81
                        price_point_id: 165
                      discounts:
                      - uid: cndli_8k5jvdzct4h9y
                        title: Multi-service discount (10%)
                        code: MULTI3
                        source_type: Coupon
                        source_id: 40
                        discount_type: percentage
                        percentage: '10.0'
                        eligible_amount: '208.69341779'
                        discount_amount: '20.87125167'
                        line_item_breakouts:
                        - uid: cnli_8k5jvdzct4h9x
                          eligible_amount: '1.971004'
                          discount_amount: '0.19862831'
                        - uid: cnli_8kjttvjcjx8b4
                          eligible_amount: '114.21127834'
                          discount_amount: '11.42112783'
                        - uid: cnli_8kjttvjknzhx7
                          eligible_amount: '9.16746047'
                          discount_amount: '0.91674605'
                        - uid: cnli_8kjttvjnmh25w
                          eligible_amount: '72.57572871'
                          discount_amount: '7.25757287'
                        - uid: cnli_8kjttvjqn86kc
                          eligible_amount: '3.12839588'
                          discount_amount: '0.31322157'
                        - uid: cnli_8kjttvjtxxbdd
                          eligible_amount: '7.63955039'
                          discount_amount: '0.76395504'
                      taxes:
                      - uid: cntli_8k5jvdzct4h9z
                        title: NC Sales Tax
                        source_type: Tax
                        source_id: 1
                        percentage: '6.75'
                        taxable_amount: '187.82216613'
                        tax_amount: '12.67783387'
                        line_item_breakouts:
                        - uid: cnli_8k5jvdzct4h9x
                          taxable_amount: '1.77237569'
                          tax_amount: '0.11963536'
                        - uid: cnli_8kjttvjcjx8b4
                          taxable_amount: '102.7901505'
                          tax_amount: '6.93833516'
                        - uid: cnli_8kjttvjknzhx7
                          taxable_amount: '8.25071442'
                          tax_amount: '0.55692322'
                        - uid: cnli_8kjttvjnmh25w
                          taxable_amount: '65.31815584'
                          tax_amount: '4.40897552'
                        - uid: cnli_8kjttvjqn86kc
                          taxable_amount: '2.81517432'
                          tax_amount: '0.19002427'
                        - uid: cnli_8kjttvjtxxbdd
                          taxable_amount: '6.87559535'
                          tax_amount: '0.46410269'
                      applications:
                      - uid: cdt_8m9vbdbdwd28n
                        transaction_time: 2018-12-31T21:19:28Z
                        invoice_uid: inv_8k5jvdzct4hb2
                        memo: Refund for overpayment
                        applied_amount: '200.5'
                      refunds:
                      - transaction_id: 329
                        payment_id: 39
                        memo: Refund for overpayment
                        original_amount: '524.9'
                        applied_amount: '200.5'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    credit_notes:
                    - uid: cn_8m9vbd5kkv7kr
                      site_id: 20
                      customer_id: 3
                      subscription_id: 2
                      number: '77'
                      sequence_number: 78
                      issue_date: 2018-12-31
                      applied_date: 2018-12-31
                      status: applied
                      currency: USD
                      memo: Refund for overpayment
                      seller:
                        name: Acme, Inc.
                        address:
                          street: 122 E Houston St
                          line2: Suite 105
                          city: San Antonio
                          state: TX
                          zip: '78205'
                          country: US
                        phone: 555-555-1234 x137
                      customer:
                        chargify_id: 3
                        first_name: Marty
                        last_name: McFly
                        organization: Time Travellers, Inc.
                        email: timetraveller1985@example.com
                        reference: null
                      billing_address:
                        street: 200 Billing Rd.
                        line2: Suite 100
                        city: Needham
                        state: MA
                        zip: '02494'
                        country: US
                      shipping_address:
                        street: 100 Shipping St.
                        line2: Apt 200
                        city: Pleasantville
                        state: NC
                        zip: '12345'
                        country: US
                      subtotal_amount: '208.69341779'
                      discount_amount: '20.87125167'
                      tax_amount: '12.67783387'
                      total_amount: '200.5'
                      applied_amount: '200.5'
                      remaining_amount: '0.0'
                      line_items:
                      - uid: cnli_8k5jvdzct4h9x
                        title: 'IP Addresses: 5 to 10 addresses'
                        description: 38.2% credit
                        quantity: '0.9855'
                        unit_price: '2.0'
                        subtotal_amount: '1.971004'
                        discount_amount: '0.19862831'
                        tax_amount: '0.11963536'
                        total_amount: '1.89201105'
                        tiered_unit_price: false
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 81
                        price_point_id: 165
                      - uid: cnli_8kjttvjcjx8b4
                        title: Professional Plan
                        description: 38.2% credit
                        quantity: '0.382'
                        unit_price: '299.0'
                        subtotal_amount: '114.21127834'
                        discount_amount: '11.42112783'
                        tax_amount: '6.93833516'
                        total_amount: '109.72848567'
                        tiered_unit_price: false
                        period_range_start: 2018-12-30
                        period_range_end: 2018-12-30
                        product_id: 85
                        product_version: 1
                        component_id: null
                        price_point_id: null
                      - uid: cnli_8kjttvjknzhx7
                        title: Small Instance (Hourly)
                        description: 38.2% credit
                        quantity: '74.8676'
                        unit_price: '0.12244898'
                        subtotal_amount: '9.16746047'
                        discount_amount: '0.91674605'
                        tax_amount: '0.55692322'
                        total_amount: '8.80763764'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 78
                        price_point_id: null
                      - uid: cnli_8kjttvjnmh25w
                        title: Large Instance (Hourly)
                        description: 38.2% credit
                        quantity: '183.3492'
                        unit_price: '0.39583333'
                        subtotal_amount: '72.57572871'
                        discount_amount: '7.25757287'
                        tax_amount: '4.40897552'
                        total_amount: '69.72713136'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 79
                        price_point_id: null
                      - uid: cnli_8kjttvjqn86kc
                        title: Email Messages
                        description: 38.2% credit
                        quantity: '10076.9489'
                        unit_price: '0.00031045'
                        subtotal_amount: '3.12839588'
                        discount_amount: '0.31322157'
                        tax_amount: '0.19002427'
                        total_amount: '3.00519858'
                        tiered_unit_price: true
                        period_range_start: 2018-11-30
                        period_range_end: 2018-11-30
                        product_id: 85
                        product_version: 1
                        component_id: 80
                        price_point_id: null
                      - uid: cnli_8kjttvjtxxbdd
                        title: IP Addresses
                        description: 38.2% credit
                        quantity: '3.8198'
                        unit_price: '2.0'
                        subtotal_amount: '7.63955039'
                        discount_amount: '0.76395504'
                        tax_amount: '0.46410269'
                        total_amount: '7.33969804'
                        tiered_unit_price: false
                        period_range_start: 2018-12-30
                        period_range_end: 2018-12-30
                        product_id: 85
                        product_version: 1
                        component_id: 81
                        price_point_id: 165
                      discounts:
                      - uid: cndli_8k5jvdzct4h9y
                        title: Multi-service discount (10%)
                        code: MULTI3
                        source_type: Coupon
                        source_id: 40
                        discount_type: percentage
                        percentage: '10.0'
                        eligible_amount: '208.69341779'
                        discount_amount: '20.87125167'
                        line_item_breakouts:
                        - uid: cnli_8k5jvdzct4h9x
                          eligible_amount: '1.971004'
                          discount_amount: '0.19862831'
                        - uid: cnli_8kjttvjcjx8b4
                          eligible_amount: '114.21127834'
                          discount_amount: '11.42112783'
                        - uid: cnli_8kjttvjknzhx7
                          eligible_amount: '9.16746047'
                          discount_amount: '0.91674605'
                        - uid: cnli_8kjttvjnmh25w
                          eligible_amount: '72.57572871'
                          discount_amount: '7.25757287'
                        - uid: cnli_8kjttvjqn86kc
                          eligible_amount: '3.12839588'
                          discount_amount: '0.31322157'
                        - uid: cnli_8kjttvjtxxbdd
                          eligible_amount: '7.63955039'
                          discount_amount: '0.76395504'
                      taxes:
                      - uid: cntli_8k5jvdzct4h9z
                        title: NC Sales Tax
                        source_type: Tax
                        source_id: 1
                        percentage: '6.75'
                        taxable_amount: '187.82216613'
                        tax_amount: '12.67783387'
                        line_item_breakouts:
                        - uid: cnli_8k5jvdzct4h9x
                          taxable_amount: '1.77237569'
                          tax_amount: '0.11963536'
                        - uid: cnli_8kjttvjcjx8b4
                          taxable_amount: '102.7901505'
                          tax_amount: '6.93833516'
                        - uid: cnli_8kjttvjknzhx7
                          taxable_amount: '8.25071442'
                          tax_amount: '0.55692322'
                        - uid: cnli_8kjttvjnmh25w
                          taxable_amount: '65.31815584'
                          tax_amount: '4.40897552'
                        - uid: cnli_8kjttvjqn86kc
                          taxable_amount: '2.81517432'
                          tax_amount: '0.19002427'
                        - uid: cnli_8kjttvjtxxbdd
                          taxable_amount: '6.87559535'
                          tax_amount: '0.46410269'
                      applications:
                      - uid: cdt_8m9vbdbdwd28n
                        transaction_time: 2018-12-31T21:19:28Z
                        invoice_uid: inv_8k5jvdzct4hb2
                        memo: Refund for overpayment
                        applied_amount: '200.5'
                      refunds:
                      - transaction_id: 329
                        payment_id: 39
                        memo: Refund for overpayment
                        original_amount: '524.9'
                        applied_amount: '200.5'
      deprecated: false
    parameters: []
  /credit_notes/{uid}.json:
    get:
      tags:
      - Invoices
      summary: readCreditNote
      description: Use this endpoint to retrieve the details for a credit note.
      operationId: readCreditNote
      parameters:
      - name: uid
        in: path
        description: The unique identifier of the credit note
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreditNote'
                - examples:
                  - uid: cn_8m9vbd5kkv7kr
                    site_id: 20
                    customer_id: 3
                    subscription_id: 2
                    number: '77'
                    sequence_number: 78
                    issue_date: 2018-12-31
                    applied_date: 2018-12-31
                    status: applied
                    currency: USD
                    memo: Refund for overpayment
                    seller:
                      name: Acme, Inc.
                      address:
                        street: 122 E Houston St
                        line2: Suite 105
                        city: San Antonio
                        state: TX
                        zip: '78205'
                        country: US
                      phone: 555-555-1234 x137
                    customer:
                      chargify_id: 3
                      first_name: Marty
                      last_name: McFly
                      organization: Time Travellers, Inc.
                      email: timetraveller1985@example.com
                      reference: null
                    billing_address:
                      street: 200 Billing Rd.
                      line2: Suite 100
                      city: Needham
                      state: MA
                      zip: '02494'
                      country: US
                    shipping_address:
                      street: 100 Shipping St.
                      line2: Apt 200
                      city: Pleasantville
                      state: NC
                      zip: '12345'
                      country: US
                    subtotal_amount: '208.69341779'
                    discount_amount: '20.87125167'
                    tax_amount: '12.67783387'
                    total_amount: '200.5'
                    applied_amount: '200.5'
                    remaining_amount: '0.0'
                    line_items:
                    - uid: cnli_8k5jvdzct4h9x
                      title: 'IP Addresses: 5 to 10 addresses'
                      description: 38.2% credit
                      quantity: '0.9855'
                      unit_price: '2.0'
                      subtotal_amount: '1.971004'
                      discount_amount: '0.19862831'
                      tax_amount: '0.11963536'
                      total_amount: '1.89201105'
                      tiered_unit_price: false
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 81
                      price_point_id: 165
                    - uid: cnli_8kjttvjcjx8b4
                      title: Professional Plan
                      description: 38.2% credit
                      quantity: '0.382'
                      unit_price: '299.0'
                      subtotal_amount: '114.21127834'
                      discount_amount: '11.42112783'
                      tax_amount: '6.93833516'
                      total_amount: '109.72848567'
                      tiered_unit_price: false
                      period_range_start: 2018-12-30
                      period_range_end: 2018-12-30
                      product_id: 85
                      product_version: 1
                      component_id: null
                      price_point_id: null
                    - uid: cnli_8kjttvjknzhx7
                      title: Small Instance (Hourly)
                      description: 38.2% credit
                      quantity: '74.8676'
                      unit_price: '0.12244898'
                      subtotal_amount: '9.16746047'
                      discount_amount: '0.91674605'
                      tax_amount: '0.55692322'
                      total_amount: '8.80763764'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 78
                      price_point_id: null
                    - uid: cnli_8kjttvjnmh25w
                      title: Large Instance (Hourly)
                      description: 38.2% credit
                      quantity: '183.3492'
                      unit_price: '0.39583333'
                      subtotal_amount: '72.57572871'
                      discount_amount: '7.25757287'
                      tax_amount: '4.40897552'
                      total_amount: '69.72713136'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 79
                      price_point_id: null
                    - uid: cnli_8kjttvjqn86kc
                      title: Email Messages
                      description: 38.2% credit
                      quantity: '10076.9489'
                      unit_price: '0.00031045'
                      subtotal_amount: '3.12839588'
                      discount_amount: '0.31322157'
                      tax_amount: '0.19002427'
                      total_amount: '3.00519858'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 80
                      price_point_id: null
                    - uid: cnli_8kjttvjtxxbdd
                      title: IP Addresses
                      description: 38.2% credit
                      quantity: '3.8198'
                      unit_price: '2.0'
                      subtotal_amount: '7.63955039'
                      discount_amount: '0.76395504'
                      tax_amount: '0.46410269'
                      total_amount: '7.33969804'
                      tiered_unit_price: false
                      period_range_start: 2018-12-30
                      period_range_end: 2018-12-30
                      product_id: 85
                      product_version: 1
                      component_id: 81
                      price_point_id: 165
                    discounts:
                    - uid: cndli_8k5jvdzct4h9y
                      title: Multi-service discount (10%)
                      code: MULTI3
                      source_type: Coupon
                      source_id: 40
                      discount_type: percentage
                      percentage: '10.0'
                      eligible_amount: '208.69341779'
                      discount_amount: '20.87125167'
                      line_item_breakouts:
                      - uid: cnli_8k5jvdzct4h9x
                        eligible_amount: '1.971004'
                        discount_amount: '0.19862831'
                      - uid: cnli_8kjttvjcjx8b4
                        eligible_amount: '114.21127834'
                        discount_amount: '11.42112783'
                      - uid: cnli_8kjttvjknzhx7
                        eligible_amount: '9.16746047'
                        discount_amount: '0.91674605'
                      - uid: cnli_8kjttvjnmh25w
                        eligible_amount: '72.57572871'
                        discount_amount: '7.25757287'
                      - uid: cnli_8kjttvjqn86kc
                        eligible_amount: '3.12839588'
                        discount_amount: '0.31322157'
                      - uid: cnli_8kjttvjtxxbdd
                        eligible_amount: '7.63955039'
                        discount_amount: '0.76395504'
                    taxes:
                    - uid: cntli_8k5jvdzct4h9z
                      title: NC Sales Tax
                      source_type: Tax
                      source_id: 1
                      percentage: '6.75'
                      taxable_amount: '187.82216613'
                      tax_amount: '12.67783387'
                      line_item_breakouts:
                      - uid: cnli_8k5jvdzct4h9x
                        taxable_amount: '1.77237569'
                        tax_amount: '0.11963536'
                      - uid: cnli_8kjttvjcjx8b4
                        taxable_amount: '102.7901505'
                        tax_amount: '6.93833516'
                      - uid: cnli_8kjttvjknzhx7
                        taxable_amount: '8.25071442'
                        tax_amount: '0.55692322'
                      - uid: cnli_8kjttvjnmh25w
                        taxable_amount: '65.31815584'
                        tax_amount: '4.40897552'
                      - uid: cnli_8kjttvjqn86kc
                        taxable_amount: '2.81517432'
                        tax_amount: '0.19002427'
                      - uid: cnli_8kjttvjtxxbdd
                        taxable_amount: '6.87559535'
                        tax_amount: '0.46410269'
                    applications:
                    - uid: cdt_8m9vbdbdwd28n
                      transaction_time: 2018-12-31T21:19:28Z
                      invoice_uid: inv_8k5jvdzct4hb2
                      memo: Refund for overpayment
                      applied_amount: '200.5'
                    refunds:
                    - transaction_id: 329
                      payment_id: 39
                      memo: Refund for overpayment
                      original_amount: '524.9'
                      applied_amount: '200.5'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: cn_8m9vbd5kkv7kr
                    site_id: 20
                    customer_id: 3
                    subscription_id: 2
                    number: '77'
                    sequence_number: 78
                    issue_date: 2018-12-31
                    applied_date: 2018-12-31
                    status: applied
                    currency: USD
                    memo: Refund for overpayment
                    seller:
                      name: Acme, Inc.
                      address:
                        street: 122 E Houston St
                        line2: Suite 105
                        city: San Antonio
                        state: TX
                        zip: '78205'
                        country: US
                      phone: 555-555-1234 x137
                    customer:
                      chargify_id: 3
                      first_name: Marty
                      last_name: McFly
                      organization: Time Travellers, Inc.
                      email: timetraveller1985@example.com
                      reference: null
                    billing_address:
                      street: 200 Billing Rd.
                      line2: Suite 100
                      city: Needham
                      state: MA
                      zip: '02494'
                      country: US
                    shipping_address:
                      street: 100 Shipping St.
                      line2: Apt 200
                      city: Pleasantville
                      state: NC
                      zip: '12345'
                      country: US
                    subtotal_amount: '208.69341779'
                    discount_amount: '20.87125167'
                    tax_amount: '12.67783387'
                    total_amount: '200.5'
                    applied_amount: '200.5'
                    remaining_amount: '0.0'
                    line_items:
                    - uid: cnli_8k5jvdzct4h9x
                      title: 'IP Addresses: 5 to 10 addresses'
                      description: 38.2% credit
                      quantity: '0.9855'
                      unit_price: '2.0'
                      subtotal_amount: '1.971004'
                      discount_amount: '0.19862831'
                      tax_amount: '0.11963536'
                      total_amount: '1.89201105'
                      tiered_unit_price: false
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 81
                      price_point_id: 165
                    - uid: cnli_8kjttvjcjx8b4
                      title: Professional Plan
                      description: 38.2% credit
                      quantity: '0.382'
                      unit_price: '299.0'
                      subtotal_amount: '114.21127834'
                      discount_amount: '11.42112783'
                      tax_amount: '6.93833516'
                      total_amount: '109.72848567'
                      tiered_unit_price: false
                      period_range_start: 2018-12-30
                      period_range_end: 2018-12-30
                      product_id: 85
                      product_version: 1
                      component_id: null
                      price_point_id: null
                    - uid: cnli_8kjttvjknzhx7
                      title: Small Instance (Hourly)
                      description: 38.2% credit
                      quantity: '74.8676'
                      unit_price: '0.12244898'
                      subtotal_amount: '9.16746047'
                      discount_amount: '0.91674605'
                      tax_amount: '0.55692322'
                      total_amount: '8.80763764'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 78
                      price_point_id: null
                    - uid: cnli_8kjttvjnmh25w
                      title: Large Instance (Hourly)
                      description: 38.2% credit
                      quantity: '183.3492'
                      unit_price: '0.39583333'
                      subtotal_amount: '72.57572871'
                      discount_amount: '7.25757287'
                      tax_amount: '4.40897552'
                      total_amount: '69.72713136'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 79
                      price_point_id: null
                    - uid: cnli_8kjttvjqn86kc
                      title: Email Messages
                      description: 38.2% credit
                      quantity: '10076.9489'
                      unit_price: '0.00031045'
                      subtotal_amount: '3.12839588'
                      discount_amount: '0.31322157'
                      tax_amount: '0.19002427'
                      total_amount: '3.00519858'
                      tiered_unit_price: true
                      period_range_start: 2018-11-30
                      period_range_end: 2018-11-30
                      product_id: 85
                      product_version: 1
                      component_id: 80
                      price_point_id: null
                    - uid: cnli_8kjttvjtxxbdd
                      title: IP Addresses
                      description: 38.2% credit
                      quantity: '3.8198'
                      unit_price: '2.0'
                      subtotal_amount: '7.63955039'
                      discount_amount: '0.76395504'
                      tax_amount: '0.46410269'
                      total_amount: '7.33969804'
                      tiered_unit_price: false
                      period_range_start: 2018-12-30
                      period_range_end: 2018-12-30
                      product_id: 85
                      product_version: 1
                      component_id: 81
                      price_point_id: 165
                    discounts:
                    - uid: cndli_8k5jvdzct4h9y
                      title: Multi-service discount (10%)
                      code: MULTI3
                      source_type: Coupon
                      source_id: 40
                      discount_type: percentage
                      percentage: '10.0'
                      eligible_amount: '208.69341779'
                      discount_amount: '20.87125167'
                      line_item_breakouts:
                      - uid: cnli_8k5jvdzct4h9x
                        eligible_amount: '1.971004'
                        discount_amount: '0.19862831'
                      - uid: cnli_8kjttvjcjx8b4
                        eligible_amount: '114.21127834'
                        discount_amount: '11.42112783'
                      - uid: cnli_8kjttvjknzhx7
                        eligible_amount: '9.16746047'
                        discount_amount: '0.91674605'
                      - uid: cnli_8kjttvjnmh25w
                        eligible_amount: '72.57572871'
                        discount_amount: '7.25757287'
                      - uid: cnli_8kjttvjqn86kc
                        eligible_amount: '3.12839588'
                        discount_amount: '0.31322157'
                      - uid: cnli_8kjttvjtxxbdd
                        eligible_amount: '7.63955039'
                        discount_amount: '0.76395504'
                    taxes:
                    - uid: cntli_8k5jvdzct4h9z
                      title: NC Sales Tax
                      source_type: Tax
                      source_id: 1
                      percentage: '6.75'
                      taxable_amount: '187.82216613'
                      tax_amount: '12.67783387'
                      line_item_breakouts:
                      - uid: cnli_8k5jvdzct4h9x
                        taxable_amount: '1.77237569'
                        tax_amount: '0.11963536'
                      - uid: cnli_8kjttvjcjx8b4
                        taxable_amount: '102.7901505'
                        tax_amount: '6.93833516'
                      - uid: cnli_8kjttvjknzhx7
                        taxable_amount: '8.25071442'
                        tax_amount: '0.55692322'
                      - uid: cnli_8kjttvjnmh25w
                        taxable_amount: '65.31815584'
                        tax_amount: '4.40897552'
                      - uid: cnli_8kjttvjqn86kc
                        taxable_amount: '2.81517432'
                        tax_amount: '0.19002427'
                      - uid: cnli_8kjttvjtxxbdd
                        taxable_amount: '6.87559535'
                        tax_amount: '0.46410269'
                    applications:
                    - uid: cdt_8m9vbdbdwd28n
                      transaction_time: 2018-12-31T21:19:28Z
                      invoice_uid: inv_8k5jvdzct4hb2
                      memo: Refund for overpayment
                      applied_amount: '200.5'
                    refunds:
                    - transaction_id: 329
                      payment_id: 39
                      memo: Refund for overpayment
                      original_amount: '524.9'
                      applied_amount: '200.5'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/payments.json:
    post:
      tags:
      - Invoices
      summary: recordPaymentForSubscription
      description: >-
        Record an external payment made against a subscription that will pay partially or in full one or more invoices.


        Payment will be applied starting with the oldest open invoice and then next oldest, and so on until the amount of the payment is fully consumed.


        Excess payment will result in the creation of a prepayment on the Invoice Account.


        Only ungrouped or primary subscriptions may be paid using the "bulk" payment request.
      operationId: recordPaymentForSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RecordPaymentRequest'
              - examples:
                - payment:
                    amount: '10.0'
                    memo: to pay the bills
                    payment_details: check number 8675309
                    payment_method: check
              contentMediaType: application/json
            examples:
              Example:
                value:
                  payment:
                    amount: '10.0'
                    memo: to pay the bills
                    payment_details: check number 8675309
                    payment_method: check
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentResponse'
                - examples:
                  - paid_invoices:
                    - invoice_uid: xyz_012345678
                      status: paid
                      due_amount: '0.0'
                      paid_amount: '50.0'
                    - invoice_uid: xyz_012345678
                      status: paid
                      due_amount: '0.0'
                      paid_amount: '50.0'
                    prepayment:
                      subscription_id: '123456'
                      amount_in_cents: '5000'
                      ending_balance_in_cents: '5000'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    paid_invoices:
                    - invoice_uid: xyz_012345678
                      status: paid
                      due_amount: '0.0'
                      paid_amount: '50.0'
                    - invoice_uid: xyz_012345678
                      status: paid
                      due_amount: '0.0'
                      paid_amount: '50.0'
                    prepayment:
                      subscription_id: '123456'
                      amount_in_cents: '5000'
                      ending_balance_in_cents: '5000'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Payment amount, details, method, and memo must be present
                    - Payment amount, details, method, and memo must valid
                    - Payment amount must be greater than zero
                    - If in a group, the Subscription must be the primary
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Payment amount, details, method, and memo must be present
                    - Payment amount, details, method, and memo must valid
                    - Payment amount must be greater than zero
                    - If in a group, the Subscription must be the primary
      deprecated: false
    parameters: []
  /invoices/{uid}/reopen.json:
    post:
      tags:
      - Invoices
      summary: reopenInvoice
      description: >-
        This endpoint allows you to reopen any invoice with the "canceled" status. Invoices enter "canceled" status if they were open at the time the subscription was canceled (whether through dunning or an intentional cancellation).


        Invoices with "canceled" status are no longer considered to be due. Once reopened, they are considered due for payment. Payment may then be captured in one of the following ways:


        - Reactivating the subscription, which will capture all open invoices (See note below about automatic reopening of invoices.)

        - Recording a payment directly against the invoice


        A note about reactivations: any canceled invoices from the most recent active period are automatically opened as a part of the reactivation process. Reactivating via this endpoint prior to reactivation is only necessary when you wish to capture older invoices from previous periods during the reactivation.


        ### Reopening Consolidated Invoices


        When reopening a consolidated invoice, all of its canceled segments will also be reopened.
      operationId: reopenInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - The invoice must be in canceled status to be reopened.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - The invoice must be in canceled status to be reopened.
      deprecated: false
    parameters: []
  /invoices/{uid}/void.json:
    post:
      tags:
      - Invoices
      summary: voidInvoice
      description: This endpoint allows you to void any invoice with the "open" or "canceled" status.  It will also allow voiding of an invoice with the "pending" status if it is not a consolidated invoice.
      operationId: voidInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VoidInvoiceRequest'
              - examples:
                - void:
                    reason: Duplicate invoice
              contentMediaType: application/json
            examples:
              Example:
                value:
                  void:
                    reason: Duplicate invoice
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Invoice status must be 'open', 'canceled', or 'pending' and non-consolidated to be voided.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Invoice status must be 'open', 'canceled', or 'pending' and non-consolidated to be voided.
      deprecated: false
    parameters: []
  /invoices/{invoice_uid}/segments.json:
    get:
      tags:
      - Invoices
      summary: listInvoiceSegments
      description: Invoice segments returned on the index will only include totals, not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`, or `custom_fields`.
      operationId: listInvoiceSegments
      parameters:
      - name: invoice_uid
        in: path
        description: The unique identifier of the consolidated invoice
        required: true
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: direction
        in: query
        description: Sort direction of the returned segments.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: Sort direction of the returned segments.
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConsolidatedInvoice'
                - examples:
                  - invoices:
                    - uid: inv_8htcd29wcq3q6
                      site_id: 51288
                      customer_id: 20153415
                      subscription_id: 23277588
                      number: '125'
                      sequence_number: 125
                      issue_date: 2018-09-20
                      due_date: 2018-09-20
                      paid_date: 2018-09-20
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: parent
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: 23277588
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20153415
                        first_name: Meg
                        last_name: Example
                        organization: ''
                        email: meg@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '100.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8htcd29wcq3q6?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hr3546xp4h8n
                      site_id: 51288
                      customer_id: 21687686
                      subscription_id: 22007644
                      number: '124'
                      sequence_number: 124
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687686
                        first_name: Charlene
                        last_name: Tester
                        organization: ''
                        email: food@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      shipping_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '100.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546xp4h8n?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hr3546wdwxkr
                      site_id: 51288
                      customer_id: 21687670
                      subscription_id: 22007627
                      number: '123'
                      sequence_number: 123
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: 2018-09-18
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial End - Free
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687670
                        first_name: Hello
                        last_name: World
                        organization: '123'
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 Anywhere Street
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      shipping_address:
                        street: ''
                        line2: ''
                        city: Boston
                        state: AL
                        zip: '02120'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546wdwxkr?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hjtk8bz56bbp
                      site_id: 51288
                      customer_id: 20137757
                      subscription_id: 20541100
                      number: '122'
                      sequence_number: 122
                      issue_date: 2018-09-10
                      due_date: 2018-09-10
                      paid_date: 2018-09-10
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: $0 Product
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20137757
                        first_name: Sasha
                        last_name: Example
                        organization: ''
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: AL
                        zip: '90210'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    invoices:
                    - uid: inv_8htcd29wcq3q6
                      site_id: 51288
                      customer_id: 20153415
                      subscription_id: 23277588
                      number: '125'
                      sequence_number: 125
                      issue_date: 2018-09-20
                      due_date: 2018-09-20
                      paid_date: 2018-09-20
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: parent
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: 23277588
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20153415
                        first_name: Meg
                        last_name: Example
                        organization: ''
                        email: meg@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '90210'
                        country: US
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '100.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8htcd29wcq3q6?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hr3546xp4h8n
                      site_id: 51288
                      customer_id: 21687686
                      subscription_id: 22007644
                      number: '124'
                      sequence_number: 124
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial and setup fee
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687686
                        first_name: Charlene
                        last_name: Tester
                        organization: ''
                        email: food@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      shipping_address:
                        street: ''
                        line2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                      subtotal_amount: '100.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '100.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '100.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546xp4h8n?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hr3546wdwxkr
                      site_id: 51288
                      customer_id: 21687670
                      subscription_id: 22007627
                      number: '123'
                      sequence_number: 123
                      issue_date: 2018-09-18
                      due_date: 2018-09-18
                      paid_date: 2018-09-18
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Trial End - Free
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 21687670
                        first_name: Hello
                        last_name: World
                        organization: '123'
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 Anywhere Street
                        line2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      shipping_address:
                        street: ''
                        line2: ''
                        city: Boston
                        state: AL
                        zip: '02120'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8hr3546wdwxkr?token=fb6kpjz5rcr2vttyjs4rcv6y
                    - uid: inv_8hjtk8bz56bbp
                      site_id: 51288
                      customer_id: 20137757
                      subscription_id: 20541100
                      number: '122'
                      sequence_number: 122
                      issue_date: 2018-09-10
                      due_date: 2018-09-10
                      paid_date: 2018-09-10
                      status: paid
                      collection_method: automatic
                      payment_instructions: Make checks payable to Acme, Inc.
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: $0 Product
                      product_family_name: Billing Plans
                      seller:
                        name: General Goods
                        address:
                          street: 123 General Goods Way
                          line2: Apt. 10
                          city: Boston
                          state: MA
                          zip: '02120'
                          country: US
                        phone: 555-555-1212
                      customer:
                        chargify_id: 20137757
                        first_name: Sasha
                        last_name: Example
                        organization: ''
                        email: example@example.com
                      memo: Please pay within 15 days.
                      billing_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: MA
                        zip: '90210'
                        country: US
                      shipping_address:
                        street: 123 I Love Cats Way
                        line2: ''
                        city: Catville
                        state: AL
                        zip: '90210'
                        country: US
                      subtotal_amount: '0.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '0.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '0.0'
                      public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/invoices.json:
    post:
      tags:
      - Invoices
      summary: createInvoice
      description: >-
        This endpoint will allow you to create an ad hoc invoice.


        ### Basic Behavior


        You can create a basic invoice by sending an array of line items to this endpoint. Each line item, at a minimum, must include a title, a quantity and a unit price. Example:


        ```json

        {
          "invoice": {
            "line_items": [
              {
                "title": "A Product",
                "quantity": 12,
                "unit_price": "150.00"
              }
            ]
          }
        }

        ```


        ### Catalog items

        Instead of creating custom products like in above example, You can pass existing items like products, components.


        ```json

        {
          "invoice": {
            "line_items": [
              {
                "product_id": "handle:gold-product",
                "quantity": 2,
              }
            ]
          }
        }

        ```



        The price for each line item will be calculated as well as a total due amount for the invoice. Multiple line items can be sent.


        ### Line items types

        When defining line item, You can choose one of 3 types for one line item:

        #### Custom item

        Like in basic behavior example above, You can pass `title` and `unit_price` for custom item.

        #### Product id

        Product handle (with handle: prefix) or id from the scope of current subscription's site can be provided with `product_id`. By default `unit_price` is taken from product's default price point, but can be overwritten by passing `unit_price` or `product_price_point_id`. If `product_id` is used, following fields cannot be used: `title`, `component_id`.

        #### Component id

        Component handle (with handle: prefix) or id from the scope of current subscription's site can be provided with `component_id`. If `component_id` is used, following fields cannot be used: `title`, `product_id`. By default `unit_price` is taken from product's default price point, but can be overwritten by passing `unit_price` or `price_point_id`. At this moment price points are supportted only for quantity based, on/off and metered components. For prepaid and event based billing components `unit_price` is required.


        ### Coupons

        When creating ad hoc invoice, new discounts can be applied in following way:


        ```json

        {
          "invoice": {
            "line_items": [
              {
                "product_id": "handle:gold-product",
                "quantity": 1
              }
            ],
            "coupons": [
              {
                "code": "COUPONCODE",
                "percentage": 50.0
              }
            ]
          }
        }

        ```

        If You want to use existing coupon for discount creation, only `code` and optional `product_family_id` is needed


        ```json

        ...
         "coupons": [
              {
                "code": "FREESETUP",
                "product_family_id": 1
              }
          ]
        ...

        ```


        ### Coupon options

        #### Code

        Coupon `code` will be displayed on invoice discount section.

        Coupon code can only contain uppercase letters, numbers, and allowed special characters.

        Lowercase letters will be converted to uppercase. It can be used to select an existing coupon from the catalog, or as an ad hoc coupon when passed with `percentage` or `amount`.

        #### Percentage

        Coupon `percentage` can take values from 0 to 100 and up to 4 decimal places. It cannot be used with `amount`. Only for ad hoc coupons, will be ignored if `code` is used to select an existing coupon from the catalog.

        #### Amount

        Coupon `amount` takes number value. It cannot be used with `percentage`. Used only when not matching existing coupon by `code`.

        #### Description

        Optional `description` will be displayed with coupon `code`. Used only when not matching existing coupon by `code`.

        #### Product Family id

        Optional `product_family_id` handle (with handle: prefix) or id is used to match existing coupon within site, when codes are not unique.

        #### Compounding Strategy

        Optional `compounding_strategy` for percentage coupons, can take values `compound` or `full-price`.


        For amount coupons, discounts will be always calculated against the original item price, before other discounts are applied.


        `compound` strategy:

        Percentage-based discounts will be calculated against the remaining price, after prior discounts have been calculated. It is set by default.


        `full-price` strategy:

        Percentage-based discounts will always be calculated against the original item price, before other discounts are applied.


        ### Line Item Options


        #### Period Date Range


        A custom period date range can be defined for each line item with the `period_range_start` and `period_range_end` parameters. Dates must be sent in the `YYYY-MM-DD` format.

        `period_range_end` must be greater or equal `period_range_start`.


        #### Taxes


        The `taxable` parameter can be sent as `true` if taxes should be calculated for a specific line item. For this to work, the site should be configured to use and calculate taxes. Further, if the site uses Avalara for tax calculations, a `tax_code` parameter should also be sent. For existing catalog items: products/components taxes cannot be overwritten.


        #### Price Point

        Price point handle (with handle: prefix) or id from the scope of current subscription's site can be provided with `price_point_id` for components with `component_id` or `product_price_point_id` for products with `product_id` parameter. If price point is passed `unit_price` cannot be used. It can be used only with catalog items products and components.


        #### Description

        Optional `description` parameter, it will overwrite default generated description for line item.


        ### Invoice Options


        #### Issue Date


        By default, invoices will be created with a issue date set to today. `issue_date` parameter can be send to alter that. Only dates in the past can be send. `issue_date` should be send in `YYYY-MM-DD` format.


        #### Net Terms


        By default, invoices will be created with a due date matching the date of invoice creation. If a different due date is desired, the `net_terms` parameter can be sent indicating the number of days in advance the due date should be.


        #### Addresses


        The seller, shipping and billing addresses can be sent to override the site's defaults. Each address requires to send a `first_name` at a minimum in order to work. Please see below for the details on which parameters can be sent for each address object.


        #### Memo and Payment Instructions


        A custom memo can be sent with the `memo` parameter to override the site's default. Likewise, custom payment instructions can be sent with the `payment_instrucions` parameter.


        #### Status


        By default, invoices will be created with open status. Possible alternative is `draft`.
      operationId: createInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateInvoiceRequest'
              - examples:
                - '{"invoice":{"line_items":[{"title":"A Product","quantity":12,"unit_price":"150.00"}]}}'
                - '{"invoice":{"line_items":[{"title":"Widgets","quantity":1,"unit_price":"10.0","taxable":true,"tax_code":"A1999","period_range_start":"2021-01-31","period_range_end":"2021-02-28"}],"net_terms":20,"payment_instructions":"Pay upon receipt","memo":"This is a memo","seller_address":{"first_name":"string","last_name":"string","phone":"string","address":"string","address_2":"string","city":"string","state":"string","zip":"string","country":"string"},"billing_address":{"first_name":"string","last_name":"string","phone":"string","address":"string","address_2":"string","city":"string","state":"string","zip":"string","country":"string"},"shipping_address":{"first_name":"string","last_name":"string","phone":"string","address":"string","address_2":"string","city":"string","state":"string","zip":"string","country":"string"}}}'
              contentMediaType: application/json
            examples:
              Minimal Invoice (Relies on site defaults):
                value:
                  invoice:
                    line_items:
                    - title: A Product
                      quantity: 12
                      unit_price: '150.00'
              Example:
                value:
                  invoice:
                    line_items:
                    - title: Widgets
                      quantity: 1
                      unit_price: '10.0'
                      taxable: true
                      tax_code: A1999
                      period_range_start: 2021-01-31
                      period_range_end: 2021-02-28
                    net_terms: 20
                    payment_instructions: Pay upon receipt
                    memo: This is a memo
                    seller_address:
                      first_name: string
                      last_name: string
                      phone: string
                      address: string
                      address_2: string
                      city: string
                      state: string
                      zip: string
                      country: string
                    billing_address:
                      first_name: string
                      last_name: string
                      phone: string
                      address: string
                      address_2: string
                      city: string
                      state: string
                      zip: string
                      country: string
                    shipping_address:
                      first_name: string
                      last_name: string
                      phone: string
                      address: string
                      address_2: string
                      city: string
                      state: string
                      zip: string
                      country: string
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InvoiceResponse'
                - examples:
                  - invoice:
                      uid: inv_98nbmb93gxjz8
                      site_id: 5
                      customer_id: 13
                      subscription_id: 17
                      number: '1'
                      sequence_number: 1
                      issue_date: 2020-12-02
                      due_date: 2020-12-02
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: ''
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Digitized discrete initiative
                      product_family_name: Networked bottom-line orchestration
                      role: adhoc
                      seller:
                        name: Steuber, West and Hegmann 1
                        address:
                          street: null
                          line2: null
                          city: null
                          state: null
                          zip: null
                          country: null
                        phone: (766) 316-0492
                      customer:
                        chargify_id: 13
                        first_name: Dean
                        last_name: Adams
                        organization: null
                        email: brandi1@example.com
                        vat_number: null
                        reference: null
                      memo: ''
                      billing_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                      shipping_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                      subtotal_amount: '1800.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '1800.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '1800.0'
                      line_items:
                      - uid: li_98nbmb9jgz84c
                        title: Some product
                        description: 12/02/2020 - 12/02/2020
                        quantity: '12.0'
                        unit_price: '150.0'
                        subtotal_amount: '1800.0'
                        discount_amount: '0.0'
                        tax_amount: '0.0'
                        total_amount: '1800.0'
                        tiered_unit_price: false
                        period_range_start: 2020-12-02
                        period_range_end: 2020-12-02
                        product_id: null
                        product_version: null
                        product_price_point_id: null
                        component_id: null
                        price_point_id: null
                      discounts: []
                      taxes: []
                      credits: []
                      payments: []
                      refunds: []
                      custom_fields: []
                      public_url: https://www.test-chargifypay.com/invoice/inv_98nbmb93gxjz8?token=rmfmwvbdy4xmyw5f29j5gc6x
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    invoice:
                      uid: inv_98nbmb93gxjz8
                      site_id: 5
                      customer_id: 13
                      subscription_id: 17
                      number: '1'
                      sequence_number: 1
                      issue_date: 2020-12-02
                      due_date: 2020-12-02
                      paid_date: null
                      status: open
                      collection_method: remittance
                      payment_instructions: ''
                      currency: USD
                      consolidation_level: none
                      parent_invoice_uid: null
                      parent_invoice_number: null
                      group_primary_subscription_id: null
                      product_name: Digitized discrete initiative
                      product_family_name: Networked bottom-line orchestration
                      role: adhoc
                      seller:
                        name: Steuber, West and Hegmann 1
                        address:
                          street: null
                          line2: null
                          city: null
                          state: null
                          zip: null
                          country: null
                        phone: (766) 316-0492
                      customer:
                        chargify_id: 13
                        first_name: Dean
                        last_name: Adams
                        organization: null
                        email: brandi1@example.com
                        vat_number: null
                        reference: null
                      memo: ''
                      billing_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                      shipping_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                      subtotal_amount: '1800.0'
                      discount_amount: '0.0'
                      tax_amount: '0.0'
                      total_amount: '1800.0'
                      credit_amount: '0.0'
                      paid_amount: '0.0'
                      refund_amount: '0.0'
                      due_amount: '1800.0'
                      line_items:
                      - uid: li_98nbmb9jgz84c
                        title: Some product
                        description: 12/02/2020 - 12/02/2020
                        quantity: '12.0'
                        unit_price: '150.0'
                        subtotal_amount: '1800.0'
                        discount_amount: '0.0'
                        tax_amount: '0.0'
                        total_amount: '1800.0'
                        tiered_unit_price: false
                        period_range_start: 2020-12-02
                        period_range_end: 2020-12-02
                        product_id: null
                        product_version: null
                        product_price_point_id: null
                        component_id: null
                        price_point_id: null
                      discounts: []
                      taxes: []
                      credits: []
                      payments: []
                      refunds: []
                      custom_fields: []
                      public_url: https://www.test-chargifypay.com/invoice/inv_98nbmb93gxjz8?token=rmfmwvbdy4xmyw5f29j5gc6x
        '201':
          description: Created
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      invoice:
                      - can't be blank
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      invoice:
                      - can't be blank
      deprecated: false
    parameters: []
  /invoices/{uid}/deliveries.json:
    post:
      tags:
      - Invoices
      summary: sendInvoice
      description: >-
        This endpoint allows for invoices to be programmatically delivered via email. This endpoint supports the delivery of both ad-hoc and automatically generated invoices. Additionally, this endpoint supports email delivery to direct recipients, carbon-copy (cc) recipients, and blind carbon-copy (bcc) recipients.


        Please note that if no recipient email addresses are specified in the request, then the subscription's default email configuration will be used. For example, if `recipient_emails` is left blank, then the invoice will be delivered to the subscription's customer email address.


        On success, a 204 no-content response will be returned. Please note that this does not indicate that email(s) have been delivered, but instead indicates that emails have been successfully queued for delivery. If _any_ invalid or malformed email address is found in the request body, the entire request will be rejected and a 422 response will be returned.
      operationId: sendInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SendInvoiceRequest'
              - examples:
                - recipient_emails:
                  - user0@example.com
                  cc_recipient_emails:
                  - user1@example.com
                  bcc_recipient_emails:
                  - user2@example.com
              contentMediaType: application/json
            examples:
              Example:
                value:
                  recipient_emails:
                  - user0@example.com
                  cc_recipient_emails:
                  - user1@example.com
                  bcc_recipient_emails:
                  - user2@example.com
        required: false
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'cc_recipient_emails: must be a valid email address'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'cc_recipient_emails: must be a valid email address'
      deprecated: false
    parameters: []
  /invoices/{uid}/customer_information/preview.json:
    post:
      tags:
      - Invoices
      summary: previewCustomerInformationChanges
      description: >-
        Customer information may change after an invoice is issued which may lead to a mismatch between customer information that are present on an open invoice and actual customer information. This endpoint allows to preview these differences, if any.


        The endpoint doesn't accept a request body. Customer information differences are calculated on the application side.
      operationId: previewCustomerInformationChanges
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerChangesPreviewResponse'
                - examples:
                  - changes:
                      payer:
                        before:
                          last_name: Beatty
                        after:
                          last_name: Doe
                      shipping_address:
                        before:
                          line2: Suite 703
                        after:
                          line2: Suite 702
                      billing_address:
                        before:
                          line2: Suite 703
                        after:
                          line2: Suite 702
                      custom_fields:
                        before:
                        - owner_id: 1002
                          owner_type: Customer
                          name: Color
                          value: blue
                          metadatum_id: 20
                        after:
                        - owner_id: 1002
                          owner_type: Customer
                          name: Color
                          value: green
                          metadatum_id: 20
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    changes:
                      payer:
                        before:
                          last_name: Beatty
                        after:
                          last_name: Doe
                      shipping_address:
                        before:
                          line2: Suite 703
                        after:
                          line2: Suite 702
                      billing_address:
                        before:
                          line2: Suite 703
                        after:
                          line2: Suite 702
                      custom_fields:
                        before:
                        - owner_id: 1002
                          owner_type: Customer
                          name: Color
                          value: blue
                          metadatum_id: 20
                        after:
                        - owner_id: 1002
                          owner_type: Customer
                          name: Color
                          value: green
                          metadatum_id: 20
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Invoice not found
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Invoice not found
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Invoice must have an open status
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Invoice must have an open status
      deprecated: false
    parameters: []
  /invoices/{uid}/customer_information.json:
    put:
      tags:
      - Invoices
      summary: updateCustomerInformation
      description: >-
        This endpoint updates customer information on an open invoice and returns the updated invoice. If you would like to preview changes that will be applied, use the `/invoices/{uid}/customer_information/preview.json` endpoint before.


        The endpoint doesn't accept a request body. Customer information differences are calculated on the application side.
      operationId: updateCustomerInformation
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Invoice'
                - examples:
                  - uid: elit Ut
                    site_id: 46283786
                    customer_id: -62349460
                    subscription_id: 12801726
                    number: dolore et ut
                    sequence_number: -84210096
                    issue_date: 2017-01-01
                    due_date: 2017-01-30
                    paid_date: 2017-01-28
                    status: open
                    collection_method: automatic
                    payment_instructions: enim officia
                    currency: dolore
                    consolidation_level: none
                    product_name: occaecat veniam culpa
                    product_family_name: qui commodo ea dolore cillum
                    seller:
                      name: co
                      phone: ullamco in officia
                    customer:
                      chargify_id: -55826334
                      first_name: deserunt
                      last_name: velit dolore
                      email: aliquip sed velit Lorem
                    memo: ea cupidatat deserunt
                    billing_address:
                      street: qui commodo cupidatat sunt
                      line2: ut officia enim
                      city: velit minim dolore sint nulla
                      state: velit
                      zip: ullamco
                      country: irure est laborum deserun
                    shipping_address:
                      street: do fugiat dolore deserunt officia
                      line2: ipsum cillum
                      city: aliqua laboris incididunt ut
                      state: et fugiat sit
                      zip: dolore do
                      country: Excepteur consequat cillum
                    subtotal_amount: dolore mollit
                    discount_amount: aute
                    tax_amount: eu aliqua est velit ea
                    total_amount: ut non
                    credit_amount: sit
                    refund_amount: et eiusmod qui sed
                    paid_amount: amet nulla s
                    due_amount: non esse ullamco
                    line_items:
                    - description: qui
                      price_point_id: 123
                      tax_amount: occaecat deserunt veniam
                      subtotal_amount: commodo consequat tempor et Duis
                    - uid: ''
                      subtotal_amount: ven
                    - price_point_id: 94750853
                      product_id: 79058036
                      tax_amount: '1.0'
                      subtotal_amount: '128.5'
                    - unit_price: eiusmod consequat ut nostrud
                      tax_amount: quis nulla proident
                    - period_range_end: 2022-02-02
                      product_id: 57352537
                      description: minim in dolore Ut Excepteur
                      uid: sit qui in ullamco anim
                    discounts:
                    - title: nostrud
                    taxes:
                    - source_type: enim
                      line_item_breakouts:
                      - uid: in ipsum
                        tax_amount: velit
                        taxable_amount: quis sint
                      - uid: co
                    - uid: enim irure in
                      title: incididunt est mollit irure
                    credits:
                    - uid: exercitation eiusmod
                      transaction_time: 2024-01-23T13:51:27Z
                      credit_note_number: qui fugiat labore laborum
                      credit_note_uid: ipsum sunt
                    - memo: dolor
                    refunds:
                    - memo: deserunt elit
                    - original_amount: Duis nulla
                    payments:
                    - prepayment: false
                      memo: enim Excepteur Lorem magna sit
                    - transaction_time: 2024-01-23T13:51:27Z
                      prepayment: false
                      payment_method:
                        details: labore ut et
                        kind: dolor qui
                        memo: ea commodo
                        type: fugiat veniam
                        card_brand: consequat
                        card_expiration: aliqua a
                        last_four: ut in consectetur sed
                        masked_card_number: minim ea ullamco nostrud tempor
                    - prepayment: true
                      transaction_id: 67527234
                    - original_amount: c
                      memo: dolore fugiat labore
                    custom_fields:
                    - name: CustomerStatus
                      value: Gold
                      owner_type: Customer
                      owner_id: 18482224
                      metadatum_id: 13924
                    - name: SubscriptionTag
                      value: Special Subscriber
                      owner_type: Subscription
                      owner_id: 21344
                      metadatum_id: 139245
                    public_url: dolo
                    previous_balance_data:
                      captured_at: 2024-01-09T11:22:23-05:00
                      invoices:
                      - number: veniam dolore labore ipsum cupidatat
                        uid: tempor
                        outstanding_amount: Excepteur nostrud irur
                      - outstanding_amount: id
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: elit Ut
                    site_id: 46283786
                    customer_id: -62349460
                    subscription_id: 12801726
                    number: dolore et ut
                    sequence_number: -84210096
                    issue_date: 2017-01-01
                    due_date: 2017-01-30
                    paid_date: 2017-01-28
                    status: open
                    collection_method: automatic
                    payment_instructions: enim officia
                    currency: dolore
                    consolidation_level: none
                    product_name: occaecat veniam culpa
                    product_family_name: qui commodo ea dolore cillum
                    seller:
                      name: co
                      phone: ullamco in officia
                    customer:
                      chargify_id: -55826334
                      first_name: deserunt
                      last_name: velit dolore
                      email: aliquip sed velit Lorem
                    memo: ea cupidatat deserunt
                    billing_address:
                      street: qui commodo cupidatat sunt
                      line2: ut officia enim
                      city: velit minim dolore sint nulla
                      state: velit
                      zip: ullamco
                      country: irure est laborum deserun
                    shipping_address:
                      street: do fugiat dolore deserunt officia
                      line2: ipsum cillum
                      city: aliqua laboris incididunt ut
                      state: et fugiat sit
                      zip: dolore do
                      country: Excepteur consequat cillum
                    subtotal_amount: dolore mollit
                    discount_amount: aute
                    tax_amount: eu aliqua est velit ea
                    total_amount: ut non
                    credit_amount: sit
                    refund_amount: et eiusmod qui sed
                    paid_amount: amet nulla s
                    due_amount: non esse ullamco
                    line_items:
                    - description: qui
                      price_point_id: 123
                      tax_amount: occaecat deserunt veniam
                      subtotal_amount: commodo consequat tempor et Duis
                    - uid: ''
                      subtotal_amount: ven
                    - price_point_id: 94750853
                      product_id: 79058036
                      tax_amount: '1.0'
                      subtotal_amount: '128.5'
                    - unit_price: eiusmod consequat ut nostrud
                      tax_amount: quis nulla proident
                    - period_range_end: 2022-02-02
                      product_id: 57352537
                      description: minim in dolore Ut Excepteur
                      uid: sit qui in ullamco anim
                    discounts:
                    - title: nostrud
                    taxes:
                    - source_type: enim
                      line_item_breakouts:
                      - uid: in ipsum
                        tax_amount: velit
                        taxable_amount: quis sint
                      - uid: co
                    - uid: enim irure in
                      title: incididunt est mollit irure
                    credits:
                    - uid: exercitation eiusmod
                      transaction_time: 2024-01-23T13:51:27Z
                      credit_note_number: qui fugiat labore laborum
                      credit_note_uid: ipsum sunt
                    - memo: dolor
                    refunds:
                    - memo: deserunt elit
                    - original_amount: Duis nulla
                    payments:
                    - prepayment: false
                      memo: enim Excepteur Lorem magna sit
                    - transaction_time: 2024-01-23T13:51:27Z
                      prepayment: false
                      payment_method:
                        details: labore ut et
                        kind: dolor qui
                        memo: ea commodo
                        type: fugiat veniam
                        card_brand: consequat
                        card_expiration: aliqua a
                        last_four: ut in consectetur sed
                        masked_card_number: minim ea ullamco nostrud tempor
                    - prepayment: true
                      transaction_id: 67527234
                    - original_amount: c
                      memo: dolore fugiat labore
                    custom_fields:
                    - name: CustomerStatus
                      value: Gold
                      owner_type: Customer
                      owner_id: 18482224
                      metadatum_id: 13924
                    - name: SubscriptionTag
                      value: Special Subscriber
                      owner_type: Subscription
                      owner_id: 21344
                      metadatum_id: 139245
                    public_url: dolo
                    previous_balance_data:
                      captured_at: 2024-01-09T11:22:23-05:00
                      invoices:
                      - number: veniam dolore labore ipsum cupidatat
                        uid: tempor
                        outstanding_amount: Excepteur nostrud irur
                      - outstanding_amount: id
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Invoice not found
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Invoice not found
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Invoice must have an open status
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Invoice must have an open status
      deprecated: false
    parameters: []
  /invoices/{uid}/issue.json:
    post:
      tags:
      - Invoices
      summary: issueInvoice
      description: >-
        This endpoint allows you to issue an invoice that is in "pending" status. For example, you can issue an invoice that was created when allocating new quantity on a component and using "accrue charges" option.


        You cannot issue a pending child invoice that was created for a member subscription in a group.


        For Remittance subscriptions, the invoice will go into "open" status and payment won't be attempted. The value for `on_failed_payment` would be rejected if sent. Any prepayments or service credits that exist on subscription will be automatically applied. Additionally, if setting is on, an email will be sent for issued invoice.


        For Automatic subscriptions, prepayments and service credits will apply to the invoice and before payment is attempted. On successful payment, the invoice will go into "paid" status and email will be sent to the customer (if setting applies). When payment fails, the next event depends on the `on_failed_payment` value:

        - `leave_open_invoice` - prepayments and credits applied to invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history. This is the default option.

        - `rollback_to_pending` - prepayments and credits not applied; invoice remains in "pending" status; no email sent to the customer; payment failure recorded in the invoice history.

        - `initiate_dunning` - prepayments and credits applied to the invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history; subscription will  most likely go into "past_due" or "canceled" state (depending upon net terms and dunning settings).
      operationId: issueInvoice
      parameters:
      - name: uid
        in: path
        description: The unique identifier for the invoice, this does not refer to the public facing invoice number.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IssueInvoiceRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /offers.json:
    post:
      tags:
      - Offers
      summary: createOffer
      description: >-
        Create an offer within your Chargify site by sending a POST request.


        ## Documentation


        Offers allow you to package complicated combinations of products, components and coupons into a convenient package which can then be subscribed to just like products.


        Once an offer is defined it can be used as an alternative to the product when creating subscriptions.


        Full documentation on how to use offers in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407753852059).


        ## Using a Product Price Point


        You can optionally pass in a `product_price_point_id` that corresponds with the `product_id` and the offer will use that price point. If a `product_price_point_id` is not passed in, the product's default price point will be used.
      operationId: createOffer
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateOfferRequest'
              - examples:
                - offer:
                    name: Solo
                    handle: han_shot_first
                    description: A Star Wars Story
                    product_id: 31
                    product_price_point_id: 102
                    components:
                    - component_id: 24
                      starting_quantity: 1
                    coupons:
                    - DEF456
              contentMediaType: application/json
            examples:
              Example:
                value:
                  offer:
                    name: Solo
                    handle: han_shot_first
                    description: A Star Wars Story
                    product_id: 31
                    product_price_point_id: 102
                    components:
                    - component_id: 24
                      starting_quantity: 1
                    coupons:
                    - DEF456
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OfferResponse'
                - examples:
                  - offer:
                      id: 3
                      site_id: 2
                      product_family_id: 4
                      product_family_name: Chargify
                      product_id: 31
                      product_name: 30-Day Square Trial
                      product_price_in_cents: 2000
                      product_revisable_number: 0
                      name: Solo
                      handle: han_shot_first
                      description: A Star Wars Story
                      created_at: 2018-06-08T14:51:52-04:00
                      updated_at: 2018-06-08T14:51:52-04:00
                      archived_at: null
                      product_price_point_name: Default
                      offer_items:
                      - component_id: 24
                        component_name: Invoices
                        component_unit_price: '3.0'
                        price_point_id: 104
                        price_point_name: Original
                        starting_quantity: '1.0'
                        editable: false
                      offer_discounts:
                      - coupon_id: 3
                        coupon_code: DEF456
                        coupon_name: IB Loyalty
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    offer:
                      id: 3
                      site_id: 2
                      product_family_id: 4
                      product_family_name: Chargify
                      product_id: 31
                      product_name: 30-Day Square Trial
                      product_price_in_cents: 2000
                      product_revisable_number: 0
                      name: Solo
                      handle: han_shot_first
                      description: A Star Wars Story
                      created_at: 2018-06-08T14:51:52-04:00
                      updated_at: 2018-06-08T14:51:52-04:00
                      archived_at: null
                      product_price_point_name: Default
                      offer_items:
                      - component_id: 24
                        component_name: Invoices
                        component_unit_price: '3.0'
                        price_point_id: 104
                        price_point_name: Original
                        starting_quantity: '1.0'
                        editable: false
                      offer_discounts:
                      - coupon_id: 3
                        coupon_code: DEF456
                        coupon_name: IB Loyalty
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      components:
                      - "starting_quantity for an On/Off component can only be '1' or '0': 24"
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      components:
                      - "starting_quantity for an On/Off component can only be '1' or '0': 24"
      deprecated: false
    get:
      tags:
      - Offers
      summary: listOffers
      description: This endpoint will list offers for a site.
      operationId: listOffers
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: include_archived
        in: query
        description: 'Include archived products. Use in query: `include_archived=true`.'
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListOffersResponse'
                - examples:
                  - offers:
                    - id: 239
                      site_id: 48110
                      product_family_id: 1025627
                      product_family_name: Gold
                      product_id: 110
                      product_name: Pro
                      product_price_in_cents: 1000
                      product_revisable_number: 0
                      product_price_point_id: 138
                      product_price_point_name: Default
                      name: Third Offer
                      handle: third
                      description: ''
                      created_at: 2018-08-03T09:56:11-05:00
                      updated_at: 2018-08-03T09:56:11-05:00
                      archived_at: null
                      offer_items:
                      - component_id: 426665
                        component_name: Database Size (GB)
                        component_unit_price: '1.0'
                        price_point_id: 149438
                        price_point_name: Auto-created
                        starting_quantity: '0.0'
                        editable: false
                        currency_prices: []
                      offer_discounts:
                      - coupon_id: 234
                        coupon_code: GR8_CUSTOMER
                        coupon_name: Multi-service Discount
                      offer_signup_pages:
                      - id: 356482
                        nickname: ggoods
                        enabled: true
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargifypay.com/subscribe/hjpvhnw63tzy
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    offers:
                    - id: 239
                      site_id: 48110
                      product_family_id: 1025627
                      product_family_name: Gold
                      product_id: 110
                      product_name: Pro
                      product_price_in_cents: 1000
                      product_revisable_number: 0
                      product_price_point_id: 138
                      product_price_point_name: Default
                      name: Third Offer
                      handle: third
                      description: ''
                      created_at: 2018-08-03T09:56:11-05:00
                      updated_at: 2018-08-03T09:56:11-05:00
                      archived_at: null
                      offer_items:
                      - component_id: 426665
                        component_name: Database Size (GB)
                        component_unit_price: '1.0'
                        price_point_id: 149438
                        price_point_name: Auto-created
                        starting_quantity: '0.0'
                        editable: false
                        currency_prices: []
                      offer_discounts:
                      - coupon_id: 234
                        coupon_code: GR8_CUSTOMER
                        coupon_name: Multi-service Discount
                      offer_signup_pages:
                      - id: 356482
                        nickname: ggoods
                        enabled: true
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargifypay.com/subscribe/hjpvhnw63tzy
      deprecated: false
    parameters: []
  /offers/{offer_id}.json:
    get:
      tags:
      - Offers
      summary: readOffers
      description: This method allows you to list a specific offer's attributes. This is different than list all offers for a site, as it requires an `offer_id`.
      operationId: readOffers
      parameters:
      - name: offer_id
        in: path
        description: The Chargify id of the offer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
      deprecated: false
    parameters: []
  /offers/{offer_id}/archive.json:
    put:
      tags:
      - Offers
      summary: archiveOffer
      description: Archive an existing offer. Please provide an `offer_id` in order to archive the correct item.
      operationId: archiveOffer
      parameters:
      - name: offer_id
        in: path
        description: The Chargify id of the offer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /offers/{offer_id}/unarchive.json:
    put:
      tags:
      - Offers
      summary: unarchiveOffer
      description: Unarchive a previously archived offer. Please provide an `offer_id` in order to un-archive the correct item.
      operationId: unarchiveOffer
      parameters:
      - name: offer_id
        in: path
        description: The Chargify id of the offer
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /payment_profiles.json:
    post:
      tags:
      - Payment Profiles
      summary: createPaymentProfile
      description: >-
        Use this endpoint to create a payment profile for a customer.


        Payment Profiles house the credit card, ACH (Authorize.Net or Stripe only,) or PayPal (Braintree only,) data for a customer. The payment information is attached to the customer within Chargify, as opposed to the Subscription itself.


        You must include a customer_id so that Chargify will attach it to the customer entry. If no customer_id is included the API will return a 404.


        ## Create a Payment Profile for ACH usage


        If you would like to create a payment method that is a Bank Account applicable for ACH payments use the following:

        ```json

        {

        "payment_profile": {
          "customer_id": [Valid-Customer-ID],
          "bank_name": "Best Bank",
          "bank_routing_number": "021000089",
          "bank_account_number": "111111111111",
          "bank_account_type": "checking",
          "bank_account_holder_type": "business",
          "payment_type": "bank_account"
          }
        }

        ```


        ## Taxable Subscriptions


        If your subscriber pays taxes on their purchased product, and you are attempting to create or update the `payment_profile`, complete address information is required. For information on required address formatting to allow your subscriber to be taxed, please see our documentation [here](https://developers.chargify.com/docs/developer-docs/d2e9e34db740e-signups#taxes)


        ## Payment Profile Documentation


        Full documentation on how Payment Profiles operate within Chargify can be located under the following links:


        + [Subscriber Payment Details](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405212558349-Customers-Reference#customers-reference-0-0)

        + [Self Service Pages](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404759627021) (Allows credit card updates by Subscriber)

        + [Public Signup Pages payment settings](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405267754381-Individual-Page-Settings#credit-card-settings)


        ## Create a Payment Profile with a Chargify.js token


        ```json

        {
          "payment_profile": {
            "customer_id": 1036,
            "chargify_token": "tok_w68qcpnftyv53jk33jv6wk3w"
          }
        }

        ```


        ## Active Payment Methods


        Creating a new payment profile for a Customer via the API will not make that Payment Profile current for any of the Customer’s Subscriptions. In order to utilize the payment profile as the default, it must be set as the default payment profile for the subscription or subscription group.


        ## Requirements


        Either the full_number, expiration_month, and expiration_year or if you have an existing vault_token from your gateway, that vault_token and the current_vault are required.

        Passing in the vault_token and current_vault are only allowed when creating a new payment profile.


        ### Taxable Subscriptions


        If your subscriber pays taxes on their purchased product, and you are attempting to create or update the `payment_profile`, complete address information is required. For information on required address formatting to allow your subscriber to be taxed, please see our documentation [here](https://developers.chargify.com/docs/developer-docs/d2e9e34db740e-signups#taxes)


        ## BraintreeBlue

        Some merchants use Braintree JavaScript libraries directly and then pass `payment_method_nonce` and/or `paypal_email` to create a payment profile. This implementation is deprecated and does not handle 3D Secure.  Instead, we have provided [Chargify.js](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDI0-overview) which is continuously improved and supports Credit Cards (along with 3D Secure), PayPal and ApplePay payment types.


        ## GoCardless


        For more information on GoCardless, please view the following resources:


        + [Full documentation on GoCardless](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404501889677)


        + [Using Chargify.js with GoCardless - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-direct-debit-gocardless-gateway)


        + [Using Chargify.js with GoCardless - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-direct-debit-gocardless-gateway)


        ### GoCardless with Local Bank Details


        Following examples create customer, bank account and mandate in GoCardless:


        ```json

        {
          "payment_profile": {
            "customer_id": "Valid-Customer-ID",
            "bank_name": "Royal Bank of France",
            "bank_account_number": "0000000",
            "bank_routing_number": "0003",
            "bank_branch_code": "00006",
            "payment_type": "bank_account",
            "billing_address": "20 Place de la Gare",
            "billing_city": "Colombes",
            "billing_state": "Île-de-France",
            "billing_zip": "92700",
            "billing_country": "FR"
          }
        }

        ```


        ### GoCardless with IBAN


        ```json

        {
          "payment_profile": {
            "customer_id": "24907598",
            "bank_name": "French Bank",
            "bank_iban": "FR1420041010050500013M02606",
            "payment_type": "bank_account",
            "billing_address": "20 Place de la Gare",
            "billing_city": "Colombes",
            "billing_state": "Île-de-France",
            "billing_zip": "92700",
            "billing_country": "FR"
          }
        }

        ```


        ### Importing GoCardless


        If the customer, bank account, and mandate already exist in GoCardless, a payment profile can be created by using the IDs. In order to create masked versions of `bank_account_number` and `bank_routing_number` that are used to display within Chargify Admin UI, you can pass the last four digits for this fields which then will be saved in this form `XXXX[four-provided-digits]`.


        ```json

        {
          "payment_profile": {
            "customer_id": "24907598",
            "customer_vault_token": [Existing GoCardless Customer ID]
            "vault_token": [Existing GoCardless Mandate ID],
            "current_vault": "gocardless",
            "bank_name": "French Bank",
            "bank_account_number": [Last Four Of The Existing Account Number or IBAN if applicable],
            "bank_routing_number": [Last Four Of The Existing Routing Number],
            "payment_type": "bank_account",
            "billing_address": "20 Place de la Gare",
            "billing_city": "Colombes",
            "billing_state": "Île-de-France",
            "billing_zip": "92700",
            "billing_country": "FR"
          }
        }

        ```


        ## SEPA Direct Debit


        For more information on Stripe SEPA Direct Debit, please view the following resources:


        + [Full documentation on Stripe SEPA Direct Debit](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405050826765-Stripe-SEPA-and-BECS-Direct-Debit)


        + [Using Chargify.js with Stripe Direct Debit - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-sepa-or-becs-direct-debit-stripe-gateway)


        + [Using Chargify.js with Stripe Direct Debit - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-sepa-direct-debit-stripe-gateway)


        ### Stripe SEPA Direct Debit Payment Profiles


        The following example creates a customer, bank account and mandate in Stripe:



        ```json

        {
          "payment_profile": {
            "customer_id": "24907598",
            "bank_name": "Deutsche bank",
            "bank_iban": "DE89370400440532013000",
            "payment_type": "bank_account",
            "billing_address": "Test",
            "billing_city": "Berlin",
            "billing_state": "Brandenburg",
            "billing_zip": "12345",
            "billing_country": "DE"
          }
        }

        ```


        ## Stripe BECS Direct Debit


        For more information on Stripe BECS Direct Debit, please view the following resources:


        + [Full documentation on Stripe BECS Direct Debit](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405050826765-Stripe-SEPA-and-BECS-Direct-Debit)


        + [Using Chargify.js with Stripe BECS Direct Debit - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-sepa-or-becs-direct-debit-stripe-gateway)


        + [Using Chargify.js with Stripe BECS Direct Debit - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-sepa-direct-debit-stripe-gateway)


        ### Stripe BECS Direct Debit Payment Profiles


        The following example creates a customer, bank account and mandate in Stripe:



        ```json

        {
          "payment_profile": {
            "customer_id": "24907598",
            "bank_name": "Australian bank",
            "bank_branch_code": "000000",
            "bank_account_number": "000123456"
            "payment_type": "bank_account",
            "billing_address": "Test",
            "billing_city": "Stony Rise",
            "billing_state": "Tasmania",
            "billing_zip": "12345",
            "billing_country": "AU"
          }
        }

        ```


        ## 3D Secure - Checkout


        It may happen that a payment needs 3D Secure Authentication when the payment profile is created; this is referred to in our help docs as a [post-authentication flow](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405177432077#psd2-flows-pre-authentication-and-post-authentication). The server returns `422 Unprocessable Entity` in this case with the following response:


        ```json

        {
            "jsonapi": {
                "version": "1.0"
            },
            "errors": [
                {
                    "title": "This card requires 3DSecure verification.",
                    "detail": "This card requires 3D secure authentication. Redirect the customer to the URL from the action_link attribute to authenticate. Attach callback_url param to this URL if you want to be notified about the result of 3D Secure authentication. Attach redirect_url param to this URL if you want to redirect a customer back to your page after 3D Secure authentication. Example: https://checkout-test.chargifypay.test/3d-secure/checkout/pay_uerzhsxd5uhkbodx5jhvkg6yeu?one_time_token_id=93&callback_url=http://localhost:4000&redirect_url=https://yourpage.com will do a POST request to https://localhost:4000 after credit card is authenticated and will redirect a customer to https://yourpage.com after 3DS authentication.",
                    "links": {
                        "action_link": "https://checkout-test.chargifypay.test/3d-secure/checkout/pay_uerzhsxd5uhkbodx5jhvkg6yeu?one_time_token_id=93"
                    }
                }
            ]
        }

        ```


        To let the customer go through 3D Secure Authentication, they need to be redirected to the URL specified in `action_link`.

        Optionally, you can specify `callback_url` parameter in the `action_link` URL if you’d like to be notified about the result of 3D Secure Authentication. The `callback_url` will return the following information:


        - whether the authentication was successful (`success`)

        - the payment profile ID (`payment_profile_id`)


        Lastly, you can also specify a `redirect_url` parameter within the `action_link` URL if you’d like to redirect a customer back to your site.


        It is not possible to use `action_link` in an iframe inside a custom application. You have to redirect the customer directly to the `action_link`, then, to be notified about the result, use `redirect_url` or `callback_url`.


        The final URL that you send a customer to complete 3D Secure may resemble the following, where the first half is the `action_link` and the second half contains a `redirect_url` and `callback_url`: `https://checkout-test.chargifypay.test/3d-secure/checkout/pay_uerzhsxd5uhkbodx5jhvkg6yeu?one_time_token_id=93&callback_url=http://localhost:4000&redirect_url=https://yourpage.com`


        ### Example Redirect Flow


        You may wish to redirect customers to different pages depending on whether their SCA was performed successfully. Here's an example flow to use as a reference:


        1. Create a payment profile via API; it requires 3DS

        2. You receive a `action_link` in the response.

        3. Use this `action_link` to, for example, connect with your internal resources or generate a session_id

        4. Include 1 of those attributes inside the `callback_url` and `redirect_url` to be aware which “session” this applies to

        5. Redirect the customer to the `action_link` with `callback_url` and `redirect_url` applied

        6. After the customer finishes 3DS authentication, we let you know the result by making a request to applied `callback_url`.

        7. After that, we redirect the customer to the `redirect_url`; at this point the result of authentication is known

        8. Optionally, you can use the applied "msg" param in the `redirect_url` to determine whether it was successful or not
      operationId: createPaymentProfile
      parameters: []
      requestBody:
        description: When following the IBAN or the Local Bank details examples, a customer, bank account and mandate will be created in your current vault. If the customer, bank account, and mandate already exist in your vault, follow the Import example to link the payment profile into Chargify.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePaymentProfileRequest'
              - description: When following the IBAN or the Local Bank details examples, a customer, bank account and mandate will be created in your current vault. If the customer, bank account, and mandate already exist in your vault, follow the Import example to link the payment profile into Chargify.
                examples:
                - '{"payment_profile":{"customer_id":123,"bank_name":"Best Bank","bank_routing_number":"021000089","bank_account_number":"111111111111","bank_account_type":"checking","bank_account_holder_type":"business","payment_type":"bank_account"}}'
                - '{"payment_profile":{"customer_id":1036,"chargify_token":"tok_w68qcpnftyv53jk33jv6wk3w"}}'
                - '{"payment_profile":{"first_name":"Jessica","last_name":"Test","last_four":"1111","card_type":"visa","expiration_month":10,"expiration_year":2018,"customer_id":19195410,"current_vault":"bogus","vault_token":"1","billing_address":"123 Main St.","billing_city":"Boston","billing_state":"MA","billing_zip":"02120","billing_country":"US","billing_address_2":null,"payment_type":"credit_card"}}'
                - '{"payment_profile":{"customer_id":123,"bank_name":"Royal Bank of France","bank_account_number":"0000000","bank_routing_number":"0003","bank_branch_code":"00006","payment_type":"bank_account","billing_address":"20 Place de la Gare","billing_city":"Colombes","billing_state":"Île-de-France","billing_zip":"92700","billing_country":"FR"}}'
                - '{"payment_profile":{"customer_id":24907598,"bank_name":"French Bank","bank_iban":"FR1420041010050500013M02606","payment_type":"bank_account","billing_address":"20 Place de la Gare","billing_city":"Colombes","billing_state":"Île-de-France","billing_zip":"92700","billing_country":"FR"}}'
                - '{"payment_profile":{"customer_id":24907598,"customer_vault_token":"[Existing Vault Customer ID]","vault_token":"[Existing Vault Mandate ID]","current_vault":"gocardless","bank_name":"French Bank","payment_type":"bank_account","billing_address":"20 Place de la Gare","billing_city":"Colombes","billing_state":"Île-de-France","billing_zip":"92700","billing_country":"FR"}}'
              contentMediaType: application/json
            examples:
              ACH:
                value:
                  payment_profile:
                    customer_id: 123
                    bank_name: Best Bank
                    bank_routing_number: '021000089'
                    bank_account_number: '111111111111'
                    bank_account_type: checking
                    bank_account_holder_type: business
                    payment_type: bank_account
              Chargify.js:
                value:
                  payment_profile:
                    customer_id: 1036
                    chargify_token: tok_w68qcpnftyv53jk33jv6wk3w
              Card:
                value:
                  payment_profile:
                    first_name: Jessica
                    last_name: Test
                    last_four: '1111'
                    card_type: visa
                    expiration_month: 10
                    expiration_year: 2018
                    customer_id: 19195410
                    current_vault: bogus
                    vault_token: '1'
                    billing_address: 123 Main St.
                    billing_city: Boston
                    billing_state: MA
                    billing_zip: '02120'
                    billing_country: US
                    billing_address_2: null
                    payment_type: credit_card
              Local Bank Details:
                value:
                  payment_profile:
                    customer_id: 123
                    bank_name: Royal Bank of France
                    bank_account_number: '0000000'
                    bank_routing_number: '0003'
                    bank_branch_code: '00006'
                    payment_type: bank_account
                    billing_address: 20 Place de la Gare
                    billing_city: Colombes
                    billing_state: Île-de-France
                    billing_zip: '92700'
                    billing_country: FR
              IBAN:
                value:
                  payment_profile:
                    customer_id: 24907598
                    bank_name: French Bank
                    bank_iban: FR1420041010050500013M02606
                    payment_type: bank_account
                    billing_address: 20 Place de la Gare
                    billing_city: Colombes
                    billing_state: Île-de-France
                    billing_zip: '92700'
                    billing_country: FR
              Import Payment Profile:
                value:
                  payment_profile:
                    customer_id: 24907598
                    customer_vault_token: '[Existing Vault Customer ID]'
                    vault_token: '[Existing Vault Mandate ID]'
                    current_vault: gocardless
                    bank_name: French Bank
                    payment_type: bank_account
                    billing_address: 20 Place de la Gare
                    billing_city: Colombes
                    billing_state: Île-de-France
                    billing_zip: '92700'
                    billing_country: FR
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentProfileResponse'
                - examples:
                  - payment_profile:
                      first_name: Jessica
                      last_name: Test
                      card_type: visa
                      masked_card_number: XXXX-XXXX-XXXX-1111
                      expiration_month: 10
                      expiration_year: 2018
                      customer_id: 19195410
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: 123 Main St.
                      billing_city: Boston
                      billing_state: MA
                      billing_zip: '02120'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: null
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: handle
                      disabled: false
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment_profile:
                      first_name: Jessica
                      last_name: Test
                      card_type: visa
                      masked_card_number: XXXX-XXXX-XXXX-1111
                      expiration_month: 10
                      expiration_year: 2018
                      customer_id: 19195410
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: 123 Main St.
                      billing_city: Boston
                      billing_state: MA
                      billing_zip: '02120'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: null
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: handle
                      disabled: false
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - '{"errors":["Credit card expiration month: cannot be blank.","Credit card expiration year: cannot be blank.","Credit card number: cannot be blank."]}'
                  - '{"errors":["Chargify token not found"]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                    - 'Credit card expiration month: cannot be blank.'
                    - 'Credit card expiration year: cannot be blank.'
                    - 'Credit card number: cannot be blank.'
                Example-2:
                  value:
                    errors:
                    - Chargify token not found
      deprecated: false
    get:
      tags:
      - Payment Profiles
      summary: listPaymentProfiles
      description: This method will return all of the active `payment_profiles` for a Site, or for one Customer within a site.  If no payment profiles are found, this endpoint will return an empty array, not a 404.
      operationId: listPaymentProfiles
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: customer_id
        in: query
        description: The ID of the customer for which you wish to list payment profiles
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentProfileResponse'
                description: ''
                examples:
                - '[{"payment_profile":{"id":10089892,"first_name":"Chester","last_name":"Tester","customer_id":14543792,"current_vault":"bogus","vault_token":"0011223344","billing_address":"456 Juniper Court","billing_city":"Boulder","billing_state":"CO","billing_zip":"80302","billing_country":"US","customer_vault_token":null,"billing_address_2":"","bank_name":"Bank of Kansas City","masked_bank_routing_number":"XXXX6789","masked_bank_account_number":"XXXX3344","bank_account_type":"checking","bank_account_holder_type":"personal","payment_type":"bank_account","verified":true,"site_gateway_setting_id":1,"gateway_handle":"handle"}},{"payment_profile":{"id":10188522,"first_name":"Frankie","last_name":"Tester","customer_id":14543712,"current_vault":"bogus","vault_token":"123456789","billing_address":"123 Montana Way","billing_city":"Los Angeles","billing_state":"CA","billing_zip":"90210","billing_country":"US","customer_vault_token":null,"billing_address_2":"","bank_name":"Bank of Kansas City","masked_bank_routing_number":"XXXX6789","masked_bank_account_number":"XXXX6789","bank_account_type":"checking","bank_account_holder_type":"personal","payment_type":"bank_account","verified":true,"site_gateway_setting_id":1,"gateway_handle":"handle"}}]'
                - '[{"payment_profile":{"id":310812,"first_name":"John15","last_name":"Doe04","masked_card_number":"XXXX-XXXX-XXXX-1111","card_type":"visa","expiration_month":7,"expiration_year":2032,"customer_id":419675,"current_vault":"bogus","vault_token":"1","billing_address":null,"billing_city":null,"billing_state":null,"billing_zip":null,"billing_country":null,"customer_vault_token":null,"billing_address_2":null,"site_gateway_setting_id":null,"payment_type":"credit_card","disabled":false,"gateway_handle":null}}]'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                  - payment_profile:
                      id: 10089892
                      first_name: Chester
                      last_name: Tester
                      customer_id: 14543792
                      current_vault: bogus
                      vault_token: '0011223344'
                      billing_address: 456 Juniper Court
                      billing_city: Boulder
                      billing_state: CO
                      billing_zip: '80302'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      bank_name: Bank of Kansas City
                      masked_bank_routing_number: XXXX6789
                      masked_bank_account_number: XXXX3344
                      bank_account_type: checking
                      bank_account_holder_type: personal
                      payment_type: bank_account
                      verified: true
                      site_gateway_setting_id: 1
                      gateway_handle: handle
                  - payment_profile:
                      id: 10188522
                      first_name: Frankie
                      last_name: Tester
                      customer_id: 14543712
                      current_vault: bogus
                      vault_token: '123456789'
                      billing_address: 123 Montana Way
                      billing_city: Los Angeles
                      billing_state: CA
                      billing_zip: '90210'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      bank_name: Bank of Kansas City
                      masked_bank_routing_number: XXXX6789
                      masked_bank_account_number: XXXX6789
                      bank_account_type: checking
                      bank_account_holder_type: personal
                      payment_type: bank_account
                      verified: true
                      site_gateway_setting_id: 1
                      gateway_handle: handle
                Example-2:
                  value:
                  - payment_profile:
                      id: 310812
                      first_name: John15
                      last_name: Doe04
                      masked_card_number: XXXX-XXXX-XXXX-1111
                      card_type: visa
                      expiration_month: 7
                      expiration_year: 2032
                      customer_id: 419675
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: null
                      billing_city: null
                      billing_state: null
                      billing_zip: null
                      billing_country: null
                      customer_vault_token: null
                      billing_address_2: null
                      site_gateway_setting_id: null
                      payment_type: credit_card
                      disabled: false
                      gateway_handle: null
      deprecated: false
    parameters: []
  /payment_profiles/{payment_profile_id}.json:
    get:
      tags:
      - Payment Profiles
      summary: readPaymentProfile
      description: >-
        Using the GET method you can retrieve a Payment Profile identified by its unique ID.


        Please note that a different JSON object will be returned if the card method on file is a bank account.


        ### Response for Bank Account


        Example response for Bank Account:


        ```

        {
          "payment_profile": {
            "id": 10089892,
            "first_name": "Chester",
            "last_name": "Tester",
            "customer_id": 14543792,
            "current_vault": "bogus",
            "vault_token": "0011223344",
            "billing_address": "456 Juniper Court",
            "billing_city": "Boulder",
            "billing_state": "CO",
            "billing_zip": "80302",
            "billing_country": "US",
            "customer_vault_token": null,
            "billing_address_2": "",
            "bank_name": "Bank of Kansas City",
            "masked_bank_routing_number": "XXXX6789",
            "masked_bank_account_number": "XXXX3344",
            "bank_account_type": "checking",
            "bank_account_holder_type": "personal",
            "payment_type": "bank_account",
            "site_gateway_setting_id": 1,
            "gateway_handle": null
          }
        }

        ```
      operationId: readPaymentProfile
      parameters:
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentProfileResponse'
                - examples:
                  - '{"payment_profile":{"id":10088716,"first_name":"Test","last_name":"Subscription","masked_card_number":"XXXX-XXXX-XXXX-1","card_type":"bogus","expiration_month":1,"expiration_year":2022,"customer_id":14543792,"current_vault":"bogus","vault_token":"1","billing_address":"123 Montana Way","billing_city":"Billings","billing_state":"MT","billing_zip":"59101","billing_country":"US","customer_vault_token":null,"billing_address_2":"","payment_type":"credit_card","site_gateway_setting_id":1,"gateway_handle":null}}'
                  - '{"payment_profile":{"id":10089892,"first_name":"Chester","last_name":"Tester","customer_id":14543792,"current_vault":"bogus","vault_token":"0011223344","billing_address":"456 Juniper Court","billing_city":"Boulder","billing_state":"CO","billing_zip":"80302","billing_country":"US","customer_vault_token":null,"billing_address_2":"","bank_name":"Bank of Kansas City","masked_bank_routing_number":"XXXX6789","masked_bank_account_number":"XXXX3344","bank_account_type":"checking","bank_account_holder_type":"personal","payment_type":"bank_account","site_gateway_setting_id":1,"gateway_handle":null}}'
                contentMediaType: application/json
              examples:
                Card:
                  value:
                    payment_profile:
                      id: 10088716
                      first_name: Test
                      last_name: Subscription
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 1
                      expiration_year: 2022
                      customer_id: 14543792
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: 123 Montana Way
                      billing_city: Billings
                      billing_state: MT
                      billing_zip: '59101'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
                Bank Account:
                  value:
                    payment_profile:
                      id: 10089892
                      first_name: Chester
                      last_name: Tester
                      customer_id: 14543792
                      current_vault: bogus
                      vault_token: '0011223344'
                      billing_address: 456 Juniper Court
                      billing_city: Boulder
                      billing_state: CO
                      billing_zip: '80302'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      bank_name: Bank of Kansas City
                      masked_bank_routing_number: XXXX6789
                      masked_bank_account_number: XXXX3344
                      bank_account_type: checking
                      bank_account_holder_type: personal
                      payment_type: bank_account
                      site_gateway_setting_id: 1
                      gateway_handle: null
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - Payment Profiles
      summary: updatePaymentProfile
      description: >-
        ## Partial Card Updates


        In the event that you are using the Authorize.net, Stripe, Cybersource, Forte or Braintree Blue payment gateways, you can update just the billing and contact information for a payment method. Note the lack of credit-card related data contained in the JSON payload.


        In this case, the following JSON is acceptable:


        ```

        {
          "payment_profile": {
            "first_name": "Kelly",
            "last_name": "Test",
            "billing_address": "789 Juniper Court",
            "billing_city": "Boulder",
            "billing_state": "CO",
            "billing_zip": "80302",
            "billing_country": "US",
            "billing_address_2": null
          }
        }

        ```


        The result will be that you have updated the billing information for the card, yet retained the original card number data.


        ## Specific notes on updating payment profiles


        - Merchants with **Authorize.net**, **Cybersource**, **Forte**, **Braintree Blue** or **Stripe** as their payment gateway can update their Customer’s credit cards without passing in the full credit card number and CVV.


        - If you are using **Authorize.net**, **Cybersource**, **Forte**, **Braintree Blue** or **Stripe**, Chargify will ignore the credit card number and CVV when processing an update via the API, and attempt a partial update instead. If you wish to change the card number on a payment profile, you will need to create a new payment profile for the given customer.


        - A Payment Profile cannot be updated with the attributes of another type of Payment Profile. For example, if the payment profile you are attempting to update is a credit card, you cannot pass in bank account attributes (like `bank_account_number`), and vice versa.


        - Updating a payment profile directly will not trigger an attempt to capture a past-due balance. If this is the intent, update the card details via the Subscription instead.


        - If you are using Authorize.net or Stripe, you may elect to manually trigger a retry for a past due subscription after a partial update.
      operationId: updatePaymentProfile
      parameters:
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePaymentProfileRequest'
              - examples:
                - payment_profile:
                    first_name: Graham
                    last_name: Test
                    full_number: '4111111111111111'
                    card_type: master
                    expiration_month: '04'
                    expiration_year: '2030'
                    current_vault: bogus
                    billing_address: 456 Juniper Court
                    billing_city: Boulder
                    billing_state: CO
                    billing_zip: '80302'
                    billing_country: US
                    billing_address_2: null
              contentMediaType: application/json
            examples:
              Example:
                value:
                  payment_profile:
                    first_name: Graham
                    last_name: Test
                    full_number: '4111111111111111'
                    card_type: master
                    expiration_month: '04'
                    expiration_year: '2030'
                    current_vault: bogus
                    billing_address: 456 Juniper Court
                    billing_city: Boulder
                    billing_state: CO
                    billing_zip: '80302'
                    billing_country: US
                    billing_address_2: null
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentProfileResponse'
                - examples:
                  - payment_profile:
                      id: 10088716
                      first_name: Test
                      last_name: Subscription
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 1
                      expiration_year: 2022
                      customer_id: 14543792
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: 123 Montana Way
                      billing_city: Billings
                      billing_state: MT
                      billing_zip: '59101'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment_profile:
                      id: 10088716
                      first_name: Test
                      last_name: Subscription
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 1
                      expiration_year: 2022
                      customer_id: 14543792
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: 123 Montana Way
                      billing_city: Billings
                      billing_state: MT
                      billing_zip: '59101'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorStringMapResponse1'
                - examples:
                  - errors:
                      payment_profile: can't be blank
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      payment_profile: can't be blank
      deprecated: false
    delete:
      tags:
      - Payment Profiles
      summary: deleteUnusedPaymentProfile
      description: >-
        Deletes an unused payment profile.


        If the payment profile is in use by one or more subscriptions or groups, a 422 and error message will be returned.
      operationId: deleteUnusedPaymentProfile
      parameters:
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - The payment profile is in use by one or more subscriptions and cannot be deleted
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - The payment profile is in use by one or more subscriptions and cannot be deleted
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}.json:
    delete:
      tags:
      - Payment Profiles
      summary: deleteSubscriptionsPaymentProfile
      description: >-
        This will delete a payment profile belonging to the customer on the subscription.


        + If the customer has multiple subscriptions, the payment profile will be removed from all of them.


        + If you delete the default payment profile for a subscription, you will need to specify another payment profile to be the default through the api, or either prompt the user to enter a card in the billing portal or on the self-service page, or visit the Payment Details tab on the subscription in the Admin UI and use the “Add New Credit Card” or “Make Active Payment Method” link, (depending on whether there are other cards present).
      operationId: deleteSubscriptionsPaymentProfile
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /bank_accounts/{bank_account_id}/verification.json:
    put:
      tags:
      - Payment Profiles
      summary: verifyBankAccount
      description: Submit the two small deposit amounts the customer received in their bank account in order to verify the bank account. (Stripe only)
      operationId: verifyBankAccount
      parameters:
      - name: bank_account_id
        in: path
        description: Identifier of the bank account in the system.
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BankAccountVerificationRequest'
              - examples:
                - bank_account_verification:
                    deposit_1_in_cents: 32
                    deposit_2_in_cents: 45
              contentMediaType: application/json
            examples:
              Example:
                value:
                  bank_account_verification:
                    deposit_1_in_cents: 32
                    deposit_2_in_cents: 45
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BankAccountResponse'
                - examples:
                  - payment_profile:
                      id: 10089892
                      first_name: Chester
                      last_name: Tester
                      customer_id: 14543792
                      current_vault: stripe_connect
                      vault_token: cus_0123abc456def
                      billing_address: 456 Juniper Court
                      billing_city: Boulder
                      billing_state: CO
                      billing_zip: '80302'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      bank_name: Bank of Kansas City
                      masked_bank_routing_number: XXXX6789
                      masked_bank_account_number: XXXX3344
                      bank_account_type: checking
                      bank_account_holder_type: personal
                      payment_type: bank_account
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment_profile:
                      id: 10089892
                      first_name: Chester
                      last_name: Tester
                      customer_id: 14543792
                      current_vault: stripe_connect
                      vault_token: cus_0123abc456def
                      billing_address: 456 Juniper Court
                      billing_city: Boulder
                      billing_state: CO
                      billing_zip: '80302'
                      billing_country: US
                      customer_vault_token: null
                      billing_address_2: ''
                      bank_name: Bank of Kansas City
                      masked_bank_routing_number: XXXX6789
                      masked_bank_account_number: XXXX3344
                      bank_account_type: checking
                      bank_account_holder_type: personal
                      payment_type: bank_account
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - You have tried to verify this bank account 10 times. To continue trying to verify the account, please reach out to us directly.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - You have tried to verify this bank account 10 times. To continue trying to verify the account, please reach out to us directly.
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/payment_profiles/{payment_profile_id}.json:
    delete:
      tags:
      - Payment Profiles
      summary: deleteSubscriptionGroupPaymentProfile
      description: >-
        This will delete a Payment Profile belonging to a Subscription Group.


        **Note**: If the Payment Profile belongs to multiple Subscription Groups and/or Subscriptions, it will be removed from all of them.
      operationId: deleteSubscriptionGroupPaymentProfile
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/payment_profiles/{payment_profile_id}/change_payment_profile.json:
    post:
      tags:
      - Payment Profiles
      summary: updateSubscriptionDefaultPaymentProfile
      description: >-
        This will change the default payment profile on the subscription to the existing payment profile with the id specified.


        You must elect to change the existing payment profile to a new payment profile ID in order to receive a satisfactory response from this endpoint.
      operationId: updateSubscriptionDefaultPaymentProfile
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentProfileResponse'
                - examples:
                  - payment_profile:
                      id: 10211899
                      first_name: Amelia
                      last_name: Example
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 2
                      expiration_year: 2018
                      customer_id: 14399371
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: ''
                      billing_city: ''
                      billing_state: ''
                      billing_zip: ''
                      billing_country: ''
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment_profile:
                      id: 10211899
                      first_name: Amelia
                      last_name: Example
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 2
                      expiration_year: 2018
                      customer_id: 14399371
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: ''
                      billing_city: ''
                      billing_state: ''
                      billing_zip: ''
                      billing_country: ''
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - This is already the current payment profile
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - This is already the current payment profile
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/payment_profiles/{payment_profile_id}/change_payment_profile.json:
    post:
      tags:
      - Payment Profiles
      summary: updateSubscriptionGroupDefaultPaymentProfile
      description: >-
        This will change the default payment profile on the subscription group to the existing payment profile with the id specified.


        You must elect to change the existing payment profile to a new payment profile ID in order to receive a satisfactory response from this endpoint.


        The new payment profile must belong to the subscription group's customer, otherwise you will receive an error.
      operationId: updateSubscriptionGroupDefaultPaymentProfile
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      - name: payment_profile_id
        in: path
        description: The Chargify id of the payment profile
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaymentProfileResponse'
                - examples:
                  - payment_profile:
                      id: 10211899
                      first_name: Amelia
                      last_name: Example
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 2
                      expiration_year: 2018
                      customer_id: 14399371
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: ''
                      billing_city: ''
                      billing_state: ''
                      billing_zip: ''
                      billing_country: ''
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    payment_profile:
                      id: 10211899
                      first_name: Amelia
                      last_name: Example
                      masked_card_number: XXXX-XXXX-XXXX-1
                      card_type: bogus
                      expiration_month: 2
                      expiration_year: 2018
                      customer_id: 14399371
                      current_vault: bogus
                      vault_token: '1'
                      billing_address: ''
                      billing_city: ''
                      billing_state: ''
                      billing_zip: ''
                      billing_country: ''
                      customer_vault_token: null
                      billing_address_2: ''
                      payment_type: credit_card
                      site_gateway_setting_id: 1
                      gateway_handle: null
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - This is already the current payment profile
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - This is already the current payment profile
      deprecated: false
    parameters: []
  /one_time_tokens/{chargify_token}.json:
    get:
      tags:
      - Payment Profiles
      summary: readOneTimeToken
      description: >-
        One Time Tokens aka Chargify Tokens house the credit card or ACH (Authorize.Net or Stripe only) data for a customer.


        You can use One Time Tokens while creating a subscription or payment profile instead of passing all bank account or credit card data directly to a given API endpoint.


        To obtain a One Time Token you have to use [chargify.js](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDI0-overview).
      operationId: readOneTimeToken
      parameters:
      - name: chargify_token
        in: path
        description: Chargify Token
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOneTimeTokenRequest'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Chargify token not found
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    errors:
                    - Chargify token not found
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/request_payment_profiles_update.json:
    post:
      tags:
      - Payment Profiles
      summary: sendRequestUpdatePaymentEmail
      description: >-
        You can send a "request payment update" email to the customer associated with the subscription.


        If you attempt to send a "request payment update" email more than five times within a 30-minute period, you will receive a `422` response with an error message in the body. This error message will indicate that the request has been rejected due to excessive attempts, and will provide instructions on how to resubmit the request.


        Additionally, if you attempt to send a "request payment update" email for a subscription that does not exist, you will receive a `404` error response. This error message will indicate that the subscription could not be found, and will provide instructions on how to correct the error and resubmit the request.


        These error responses are designed to prevent excessive or invalid requests, and to provide clear and helpful information to users who encounter errors during the request process.
      operationId: sendRequestUpdatePaymentEmail
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '201':
          description: Created
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Too many requests. You can perform 5 requests within 00:30:00
                contentMediaType: application/json
              examples:
                Too many requests:
                  value:
                    errors:
                    - Too many requests. You can perform 5 requests within 00:30:00
      deprecated: false
    parameters: []
  /product_families/{product_family_id}/products.json:
    get:
      tags:
      - Product Families
      summary: listProductsForProductFamily
      description: This method allows to retrieve a list of Products belonging to a Product Family.
      operationId: listProductsForProductFamily
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the product belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: date_field
        in: query
        description: >-
          The type of filter you would like to apply to your search.

          Use in query: `date_field=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: >-
              The type of filter you would like to apply to your search.

              Use in query: `date_field=created_at`.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
      - name: include_archived
        in: query
        description: Include archived products
        style: form
        explode: true
        schema:
          type: boolean
      - name: include
        in: query
        description: Allows including additional data in the response. Use in query `include=prepaid_product_price_point`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListProductsInclude'
          - description: Allows including additional data in the response. Use in query `include=prepaid_product_price_point`.
            examples:
            - prepaid_product_price_point
      - name: filter[prepaid_product_price_point][product_price_point_id]
        in: query
        description: Allows fetching products only if a prepaid product price point is present or not. To use this filter you also have to include the following param in the request `include=prepaid_product_price_point`. Use in query `filter[prepaid_product_price_point][product_price_point_id]=not_null`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: Allows fetching products only if a prepaid product price point is present or not. To use this filter you also have to include the following param in the request `include=prepaid_product_price_point`. Use in query `filter[prepaid_product_price_point][product_price_point_id]=not_null`.
            examples:
            - not_null
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching products with matching use_site_exchange_rate based on provided value (refers to default price point). Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
                description: ''
                examples:
                - - product:
                      id: 3801242
                      name: Free product
                      handle: zero-dollar-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-04-21T16:08:39-04:00
                      updated_at: 2016-08-03T11:27:53-04:00
                      price_in_cents: 10000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: 0
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: false
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 4
                      update_return_params: ''
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 283460
                        return_url: null
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product
                      product_price_point_name: Default
                      use_site_exchange_rate: true
                  - product:
                      id: 3858146
                      name: Calendar Billing Product
                      handle: calendar-billing-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-07-05T13:07:38-04:00
                      updated_at: 2016-07-05T13:07:38-04:00
                      price_in_cents: 10000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: ''
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 289193
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/gxdbfxzxhcjq/calendar-billing-product
                      product_price_point_name: Default
                      use_site_exchange_rate: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - product:
                      id: 3801242
                      name: Free product
                      handle: zero-dollar-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-04-21T16:08:39-04:00
                      updated_at: 2016-08-03T11:27:53-04:00
                      price_in_cents: 10000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: 0
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: false
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 4
                      update_return_params: ''
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 283460
                        return_url: null
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/smcc4j3d2w6h/zero-dollar-product
                      product_price_point_name: Default
                      use_site_exchange_rate: true
                  - product:
                      id: 3858146
                      name: Calendar Billing Product
                      handle: calendar-billing-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-07-05T13:07:38-04:00
                      updated_at: 2016-07-05T13:07:38-04:00
                      price_in_cents: 10000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: ''
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 289193
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/gxdbfxzxhcjq/calendar-billing-product
                      product_price_point_name: Default
                      use_site_exchange_rate: true
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                type: string
                examples:
                - A valid product_family_id is required
                contentMediaType: application/json
              examples:
                Example:
                  value: A valid product_family_id is required
      deprecated: false
    post:
      tags:
      - Products
      summary: createProduct
      description: >-
        Use this method to create a product within your Chargify site.


        + [Products Documentation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405561405709)

        + [Changing a Subscription's Product](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404225334669-Product-Changes-Migrations)
      operationId: createProduct
      parameters:
      - name: product_family_id
        in: path
        description: The Chargify id of the product family to which the product belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateorUpdateProductRequest'
              - examples:
                - product:
                    name: Gold Plan
                    handle: gold
                    description: This is our gold plan.
                    accounting_code: '123'
                    require_credit_card: true
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    auto_create_signup_page: true
                    tax_code: D0000000
              contentMediaType: application/json
            examples:
              Example:
                value:
                  product:
                    name: Gold Plan
                    handle: gold
                    description: This is our gold plan.
                    accounting_code: '123'
                    require_credit_card: true
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    auto_create_signup_page: true
                    tax_code: D0000000
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 4364984
                      name: Gold Plan
                      handle: gold
                      description: This is our gold plan.
                      accounting_code: '123'
                      request_credit_card: true
                      created_at: 2016-11-04T16:31:15-04:00
                      updated_at: 2016-11-04T16:31:15-04:00
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      expiration_interval_unit: null
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: null
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 301078
                        return_url: null
                        return_params: null
                        url: https://general-goods.chargify.com/subscribe/ftgbpq7f5qpr/gold
                      product_price_point_name: Default
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 4364984
                      name: Gold Plan
                      handle: gold
                      description: This is our gold plan.
                      accounting_code: '123'
                      request_credit_card: true
                      created_at: 2016-11-04T16:31:15-04:00
                      updated_at: 2016-11-04T16:31:15-04:00
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      expiration_interval_unit: null
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: null
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 301078
                        return_url: null
                        return_params: null
                        url: https://general-goods.chargify.com/subscribe/ftgbpq7f5qpr/gold
                      product_price_point_name: Default
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
      deprecated: false
    parameters: []
  /product_families.json:
    post:
      tags:
      - Product Families
      summary: createProductFamily
      description: >-
        This method will create a Product Family within your Chargify site. Create a Product Family to act as a container for your products, components and coupons.


        Full documentation on how Product Families operate within the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405369633421).
      operationId: createProductFamily
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateProductFamilyRequest'
              - examples:
                - product_family:
                    name: Acme Projects
                    description: Amazing project management tool
              contentMediaType: application/json
            examples:
              Example:
                value:
                  product_family:
                    name: Acme Projects
                    description: Amazing project management tool
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductFamilyResponse'
                - examples:
                  - product_family:
                      id: 933860
                      name: Acme Projects
                      description: Amazing project management tool
                      handle: acme-projects
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product_family:
                      id: 933860
                      name: Acme Projects
                      description: Amazing project management tool
                      handle: acme-projects
                      accounting_code: null
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'API Handle: must be unique - that value has been taken.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'API Handle: must be unique - that value has been taken.'
      deprecated: false
    get:
      tags:
      - Product Families
      summary: listProductFamilies
      description: This method allows to retrieve a list of Product Families for a site.
      operationId: listProductFamilies
      parameters:
      - name: date_field
        in: query
        description: >-
          The type of filter you would like to apply to your search.

          Use in query: `date_field=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: >-
              The type of filter you would like to apply to your search.

              Use in query: `date_field=created_at`.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFamilyResponse'
                description: ''
                examples:
                - - product_family:
                      id: 37
                      name: Acme Projects
                      description: null
                      handle: acme-projects
                      accounting_code: null
                      created_at: 2013-02-20T15:05:51-07:00
                      updated_at: 2013-02-20T15:05:51-07:00
                  - product_family:
                      id: 155
                      name: Bat Family
                      description: Another family.
                      handle: bat-family
                      accounting_code: null
                      created_at: 2014-04-16T12:41:13-06:00
                      updated_at: 2014-04-16T12:41:13-06:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - product_family:
                      id: 37
                      name: Acme Projects
                      description: null
                      handle: acme-projects
                      accounting_code: null
                      created_at: 2013-02-20T15:05:51-07:00
                      updated_at: 2013-02-20T15:05:51-07:00
                  - product_family:
                      id: 155
                      name: Bat Family
                      description: Another family.
                      handle: bat-family
                      accounting_code: null
                      created_at: 2014-04-16T12:41:13-06:00
                      updated_at: 2014-04-16T12:41:13-06:00
      deprecated: false
    parameters: []
  /product_families/{id}.json:
    get:
      tags:
      - Product Families
      summary: readProductFamily
      description: >-
        This method allows to retrieve a Product Family via the `product_family_id`. The response will contain a Product Family object.


        The product family can be specified either with the id number, or with the `handle:my-family` format.
      operationId: readProductFamily
      parameters:
      - name: id
        in: path
        description: The Chargify id of the product family
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductFamilyResponse'
                - examples:
                  - product_family:
                      id: 527890
                      name: Acme Projects
                      description: ''
                      handle: billing-plans
                      accounting_code: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product_family:
                      id: 527890
                      name: Acme Projects
                      description: ''
                      handle: billing-plans
                      accounting_code: null
      deprecated: false
    parameters: []
  /products/{product_id}.json:
    get:
      tags:
      - Products
      summary: readProduct
      description: This endpoint allows you to read the current details of a product that you've created in Chargify.
      operationId: readProduct
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 4535635
                      name: Paid Annual Seats
                      handle: paid-annual-seats
                      description: Paid annual seats for our commercial enterprise product
                      accounting_code: paid-annual-seats
                      request_credit_card: true
                      expiration_interval: 1
                      expiration_interval_unit: day
                      created_at: 2017-08-25T10:25:31-05:00
                      updated_at: 2018-01-16T12:58:04-06:00
                      price_in_cents: 10000
                      interval: 12
                      interval_unit: month
                      initial_charge_in_cents: 4900
                      trial_price_in_cents: 1000
                      trial_interval: 14
                      trial_interval_unit: day
                      archived_at: null
                      require_credit_card: true
                      return_params: id={subscription_id}&ref={customer_reference}
                      taxable: true
                      update_return_url: http://www.example.com
                      tax_code: D0000000
                      initial_charge_after_trial: false
                      version_number: 4
                      update_return_params: id={subscription_id}&ref={customer_reference}
                      product_family:
                        id: 1025627
                        name: Acme Products
                        description: ''
                        handle: acme-products
                        accounting_code: null
                      public_signup_pages: []
                      product_price_point_name: Default
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 4535635
                      name: Paid Annual Seats
                      handle: paid-annual-seats
                      description: Paid annual seats for our commercial enterprise product
                      accounting_code: paid-annual-seats
                      request_credit_card: true
                      expiration_interval: 1
                      expiration_interval_unit: day
                      created_at: 2017-08-25T10:25:31-05:00
                      updated_at: 2018-01-16T12:58:04-06:00
                      price_in_cents: 10000
                      interval: 12
                      interval_unit: month
                      initial_charge_in_cents: 4900
                      trial_price_in_cents: 1000
                      trial_interval: 14
                      trial_interval_unit: day
                      archived_at: null
                      require_credit_card: true
                      return_params: id={subscription_id}&ref={customer_reference}
                      taxable: true
                      update_return_url: http://www.example.com
                      tax_code: D0000000
                      initial_charge_after_trial: false
                      version_number: 4
                      update_return_params: id={subscription_id}&ref={customer_reference}
                      product_family:
                        id: 1025627
                        name: Acme Products
                        description: ''
                        handle: acme-products
                        accounting_code: null
                      public_signup_pages: []
                      product_price_point_name: Default
      deprecated: false
    put:
      tags:
      - Products
      summary: updateProduct
      description: >-
        Use this method to change aspects of an existing product.


        ### Input Attributes Update Notes


        + `update_return_params` The parameters we will append to your `update_return_url`. See Return URLs and Parameters


        ### Product Price Point


        Updating a product using this endpoint will create a new price point and set it as the default price point for this product. If you should like to update an existing product price point, that must be done separately.
      operationId: updateProduct
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateorUpdateProductRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 4365034
                      name: Platinum Plan
                      handle: platinum
                      description: This is our platinum plan.
                      accounting_code: '123'
                      request_credit_card: true
                      created_at: 2016-11-04T16:34:29-04:00
                      updated_at: 2016-11-04T16:37:11-04:00
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: null
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 301079
                        return_url: null
                        return_params: null
                        url: https://general-goods.chargify.com/subscribe/wgyd96tb5pj9/platinum
                      product_price_point_name: Original
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 4365034
                      name: Platinum Plan
                      handle: platinum
                      description: This is our platinum plan.
                      accounting_code: '123'
                      request_credit_card: true
                      created_at: 2016-11-04T16:34:29-04:00
                      updated_at: 2016-11-04T16:37:11-04:00
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: null
                      trial_interval: null
                      trial_interval_unit: null
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 301079
                        return_url: null
                        return_params: null
                        url: https://general-goods.chargify.com/subscribe/wgyd96tb5pj9/platinum
                      product_price_point_name: Original
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Name: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Name: cannot be blank.'
      deprecated: false
    delete:
      tags:
      - Products
      summary: archiveProduct
      description: >-
        Sending a DELETE request to this endpoint will archive the product. All current subscribers will be unffected; their subscription/purchase will continue to be charged monthly.


        This will restrict the option to chose the product for purchase via the Billing Portal, as well as disable Public Signup Pages for the product.
      operationId: archiveProduct
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 4535638
                      name: Business Monthly
                      handle: null
                      description: Business Monthly
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2017-08-25T10:25:31-05:00
                      updated_at: 2018-01-16T13:02:44-06:00
                      price_in_cents: 4900
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: 0
                      trial_interval: 1
                      trial_interval_unit: day
                      archived_at: 2018-01-16T13:02:44-06:00
                      require_credit_card: false
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      tax_code: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: ''
                      product_family:
                        id: 1025627
                        name: Acme Products
                        description: ''
                        handle: acme-products
                        accounting_code: null
                      public_signup_pages: []
                      product_price_point_name: Default
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 4535638
                      name: Business Monthly
                      handle: null
                      description: Business Monthly
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2017-08-25T10:25:31-05:00
                      updated_at: 2018-01-16T13:02:44-06:00
                      price_in_cents: 4900
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: 0
                      trial_interval: 1
                      trial_interval_unit: day
                      archived_at: 2018-01-16T13:02:44-06:00
                      require_credit_card: false
                      return_params: ''
                      taxable: false
                      update_return_url: ''
                      tax_code: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: ''
                      product_family:
                        id: 1025627
                        name: Acme Products
                        description: ''
                        handle: acme-products
                        accounting_code: null
                      public_signup_pages: []
                      product_price_point_name: Default
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Product cannot be archived.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Product cannot be archived.
      deprecated: false
    parameters: []
  /products/handle/{api_handle}.json:
    get:
      tags:
      - Products
      summary: readProductByHandle
      description: This method allows to retrieve a Product object by its `api_handle`.
      operationId: readProductByHandle
      parameters:
      - name: api_handle
        in: path
        description: The handle of the product
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 3903594
                      name: No cost product
                      handle: no-cost-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-09-02T17:11:29-04:00
                      updated_at: 2016-11-30T11:46:13-05:00
                      price_in_cents: 0
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: 5
                      trial_interval: 1
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: false
                      return_params: reference=5678
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: reference=5678
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 281174
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/xgdxtk4vhtbz/no-cost-product
                      - id: 282270
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/xxqmrgtsbd9k/no-cost-product
                      - id: 291587
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/pvhwss7zjjnh/no-cost-product
                      - id: 294832
                        return_url: http://www.example.com/
                        return_params: engine=md7a
                        url: https://general-goods.chargify.com/subscribe/m6tbcq4mcgpw/no-cost-product
                      product_price_point_name: Default
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 3903594
                      name: No cost product
                      handle: no-cost-product
                      description: ''
                      accounting_code: ''
                      request_credit_card: true
                      expiration_interval: null
                      expiration_interval_unit: never
                      created_at: 2016-09-02T17:11:29-04:00
                      updated_at: 2016-11-30T11:46:13-05:00
                      price_in_cents: 0
                      interval: 1
                      interval_unit: month
                      initial_charge_in_cents: null
                      trial_price_in_cents: 5
                      trial_interval: 1
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: false
                      return_params: reference=5678
                      taxable: false
                      update_return_url: ''
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: reference=5678
                      product_family:
                        id: 527890
                        name: Acme Projects
                        description: ''
                        handle: billing-plans
                        accounting_code: null
                      public_signup_pages:
                      - id: 281174
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/xgdxtk4vhtbz/no-cost-product
                      - id: 282270
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/xxqmrgtsbd9k/no-cost-product
                      - id: 291587
                        return_url: ''
                        return_params: ''
                        url: https://general-goods.chargify.com/subscribe/pvhwss7zjjnh/no-cost-product
                      - id: 294832
                        return_url: http://www.example.com/
                        return_params: engine=md7a
                        url: https://general-goods.chargify.com/subscribe/m6tbcq4mcgpw/no-cost-product
                      product_price_point_name: Default
      deprecated: false
    parameters: []
  /products.json:
    get:
      tags:
      - Products
      summary: listProducts
      description: This method allows to retrieve a list of Products belonging to a Site.
      operationId: listProducts
      parameters:
      - name: date_field
        in: query
        description: >-
          The type of filter you would like to apply to your search.

          Use in query: `date_field=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: >-
              The type of filter you would like to apply to your search.

              Use in query: `date_field=created_at`.
            examples:
            - updated_at
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns products with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns products with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: include_archived
        in: query
        description: 'Include archived products. Use in query: `include_archived=true`.'
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      - name: include
        in: query
        description: Allows including additional data in the response. Use in query `include=prepaid_product_price_point`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListProductsInclude'
          - description: Allows including additional data in the response. Use in query `include=prepaid_product_price_point`.
            examples:
            - prepaid_product_price_point
      - name: filter[prepaid_product_price_point][product_price_point_id]
        in: query
        description: Allows fetching products only if a prepaid product price point is present or not. To use this filter you also have to include the following param in the request `include=prepaid_product_price_point`. Use in query `filter[prepaid_product_price_point][product_price_point_id]=not_null`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: Allows fetching products only if a prepaid product price point is present or not. To use this filter you also have to include the following param in the request `include=prepaid_product_price_point`. Use in query `filter[prepaid_product_price_point][product_price_point_id]=not_null`.
            examples:
            - not_null
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching products with matching use_site_exchange_rate based on provided value (refers to default price point). Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
                description: ''
                examples:
                - - product:
                      id: 0
                      name: string
                      handle: string
                      description: string
                      accounting_code: string
                      request_credit_card: true
                      expiration_interval: 0
                      expiration_interval_unit: month
                      created_at: 2023-11-23T10:28:34-05:00
                      updated_at: 2023-11-23T10:28:34-05:00
                      price_in_cents: 0
                      interval: 0
                      interval_unit: month
                      initial_charge_in_cents: 0
                      trial_price_in_cents: 0
                      trial_interval: 0
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: string
                      taxable: true
                      update_return_url: string
                      initial_charge_after_trial: true
                      version_number: 0
                      update_return_params: string
                      product_family:
                        id: 0
                        name: string
                        handle: string
                        accounting_code: null
                        description: string
                        created_at: string
                        updated_at: string
                      public_signup_pages:
                      - id: 0
                        return_url: string
                        return_params: string
                        url: string
                      product_price_point_name: string
                      request_billing_address: true
                      require_billing_address: true
                      require_shipping_address: true
                      use_site_exchange_rate: true
                      tax_code: string
                      default_product_price_point_id: 0
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                  - product:
                      id: 0
                      name: string
                      handle: string
                      description: string
                      accounting_code: string
                      request_credit_card: true
                      expiration_interval: 0
                      expiration_interval_unit: month
                      created_at: 2023-11-23T10:28:34-05:00
                      updated_at: 2023-11-23T10:28:34-05:00
                      price_in_cents: 0
                      interval: 0
                      interval_unit: month
                      initial_charge_in_cents: 0
                      trial_price_in_cents: 0
                      trial_interval: 0
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: string
                      taxable: true
                      update_return_url: string
                      initial_charge_after_trial: true
                      version_number: 0
                      update_return_params: string
                      product_family:
                        id: 0
                        name: string
                        handle: string
                        accounting_code: null
                        description: string
                        created_at: string
                        updated_at: string
                      public_signup_pages:
                      - id: 0
                        return_url: string
                        return_params: string
                        url: string
                      product_price_point_name: string
                      request_billing_address: true
                      require_billing_address: true
                      require_shipping_address: true
                      use_site_exchange_rate: true
                      tax_code: string
                      default_product_price_point_id: 0
      deprecated: false
    parameters: []
  /products/{product_id}/price_points.json:
    post:
      tags:
      - 'Product: Price Points'
      summary: createProductPricePoint
      description: '[Product Price Point Documentation](https://chargify.zendesk.com/hc/en-us/articles/4407755824155)'
      operationId: createProductPricePoint
      parameters:
      - name: product_id
        in: path
        description: The id or handle of the product. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateProductPricePointRequest'
              - examples:
                - price_point:
                    name: Educational
                    handle: educational
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_point:
                    name: Educational
                    handle: educational
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointResponse'
                - examples:
                  - price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointErrorResponse1'
                - examples:
                  - "{\"errors\":{\"price_point\":\"can't be blank\"}}"
                  - "{\"errors\":{\"interval\":[\"Recurring Interval: cannot be blank.\"],\"interval_unit\":[\"Interval unit: cannot be blank.\",\"Interval unit: must be 'month' or 'day'.\"],\"name\":[\"Name: cannot be blank.\"],\"price\":[\"Price: is not a number.\"],\"price_in_cents\":[\"Price in cents: cannot be blank.\"]}}"
                  - '{"errors":{"interval":["Recurring Interval: must be greater than or equal to 1."]}}'
                  - '{"errors":{"price":["Price: must be greater than or equal to 0."]}}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                      price_point: can't be blank
                Example-2:
                  value:
                    errors:
                      interval:
                      - 'Recurring Interval: cannot be blank.'
                      interval_unit:
                      - 'Interval unit: cannot be blank.'
                      - "Interval unit: must be 'month' or 'day'."
                      name:
                      - 'Name: cannot be blank.'
                      price:
                      - 'Price: is not a number.'
                      price_in_cents:
                      - 'Price in cents: cannot be blank.'
                Example-3:
                  value:
                    errors:
                      interval:
                      - 'Recurring Interval: must be greater than or equal to 1.'
                Example-4:
                  value:
                    errors:
                      price:
                      - 'Price: must be greater than or equal to 0.'
      deprecated: false
    get:
      tags:
      - 'Product: Price Points'
      summary: listProductPricePoints
      description: Use this endpoint to retrieve a list of product price points.
      operationId: listProductPricePoints
      parameters:
      - name: product_id
        in: path
        description: The id or handle of the product. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: This parameter indicates how many records to fetch in each request. Default value is 10. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 10
      - name: currency_prices
        in: query
        description: "When fetching a product's price points, if you have defined multiple currencies at the site level, you can optionally pass the ?currency_prices=true query param to include an array of currency price data in the response. If the product price point is set to use_site_exchange_rate: true, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency."
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter[type]
        in: query
        description: 'Use in query: `filter[type]=catalog,default`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PricePointType'
          examples:
          - - catalog
            - default
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListProductPricePointsResponse'
                - examples:
                  - price_points:
                    - id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_points:
                    - id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
      deprecated: false
    parameters: []
  /products/{product_id}/price_points/{price_point_id}.json:
    put:
      tags:
      - 'Product: Price Points'
      summary: updateProductPricePoint
      description: >-
        Use this endpoint to update a product price point.


        Note: Custom product price points are not able to be updated.
      operationId: updateProductPricePoint
      parameters:
      - name: product_id
        in: path
        description: The id or handle of the product. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: price_point_id
        in: path
        description: The id or handle of the price point. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateProductPricePointRequest'
              - examples:
                - price_point:
                    handle: educational
                    price_in_cents: 1250
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_point:
                    handle: educational
                    price_in_cents: 1250
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointResponse'
                - examples:
                  - price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
      deprecated: false
    get:
      tags:
      - 'Product: Price Points'
      summary: readProductPricePoint
      description: Use this endpoint to retrieve details for a specific product price point.
      operationId: readProductPricePoint
      parameters:
      - name: product_id
        in: path
        description: The id or handle of the product. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: price_point_id
        in: path
        description: The id or handle of the price point. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: currency_prices
        in: query
        description: "When fetching a product's price points, if you have defined multiple currencies at the site level, you can optionally pass the ?currency_prices=true query param to include an array of currency price data in the response. If the product price point is set to use_site_exchange_rate: true, it will return pricing based on the current exchange rate. If the flag is set to false, it will return all of the defined prices for each currency."
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointResponse'
                - examples:
                  - price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
      deprecated: false
    delete:
      tags:
      - 'Product: Price Points'
      summary: archiveProductPricePoint
      description: Use this endpoint to archive a product price point.
      operationId: archiveProductPricePoint
      parameters:
      - name: product_id
        in: path
        description: The id or handle of the product. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: price_point_id
        in: path
        description: The id or handle of the price point. When using the handle, it must be prefixed with `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointResponse'
                - examples:
                  - price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Cannot archive the default price point.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Cannot archive the default price point.
      deprecated: false
    parameters: []
  /products/{product_id}/price_points/{price_point_id}/unarchive.json:
    patch:
      tags:
      - 'Product: Price Points'
      summary: unarchiveProductPricePoint
      description: Use this endpoint to unarchive an archived product price point.
      operationId: unarchiveProductPricePoint
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the product price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductPricePointResponse'
                - examples:
                  - price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_point:
                      id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
      deprecated: false
    parameters: []
  /products/{product_id}/price_points/{price_point_id}/default.json:
    patch:
      tags:
      - 'Product: Price Points'
      summary: promoteProductPricePointToDefault
      description: >-
        Use this endpoint to make a product price point the default for the product.


        Note: Custom product price points are not able to be set as the default for a product.
      operationId: promoteProductPricePointToDefault
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product to which the price point belongs
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: price_point_id
        in: path
        description: The Chargify id of the product price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProductResponse'
                - examples:
                  - product:
                      id: 29778
                      name: Educational
                      handle: educational
                      description: null
                      accounting_code: null
                      request_credit_card: true
                      expiration_interval: 12
                      expiration_interval_unit: month
                      created_at: 2023-12-01T06:56:12-05:00
                      updated_at: 2023-12-01T06:56:26-05:00
                      price_in_cents: 100
                      interval: 2
                      interval_unit: month
                      initial_charge_in_cents: 120000
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      tax_code: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      default_product_price_point_id: 32395
                      request_billing_address: false
                      require_billing_address: false
                      require_shipping_address: false
                      use_site_exchange_rate: true
                      item_category: null
                      product_price_point_id: 32395
                      product_price_point_name: Default
                      product_price_point_handle: uuid:8c878f50-726e-013c-c71b-0286551bb34f
                      product_family:
                        id: 933860
                        name: Acme Projects
                        description: Amazing project management tool
                        handle: acme-projects
                        accounting_code: null
                        created_at: 2023-12-01T06:56:12-05:00
                        updated_at: 2023-12-01T06:56:12-05:00
                      public_signup_pages: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    product:
                      id: 29778
                      name: Educational
                      handle: educational
                      description: null
                      accounting_code: null
                      request_credit_card: true
                      expiration_interval: 12
                      expiration_interval_unit: month
                      created_at: 2023-12-01T06:56:12-05:00
                      updated_at: 2023-12-01T06:56:26-05:00
                      price_in_cents: 100
                      interval: 2
                      interval_unit: month
                      initial_charge_in_cents: 120000
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      archived_at: null
                      require_credit_card: true
                      return_params: null
                      taxable: false
                      update_return_url: null
                      tax_code: null
                      initial_charge_after_trial: false
                      version_number: 1
                      update_return_params: null
                      default_product_price_point_id: 32395
                      request_billing_address: false
                      require_billing_address: false
                      require_shipping_address: false
                      use_site_exchange_rate: true
                      item_category: null
                      product_price_point_id: 32395
                      product_price_point_name: Default
                      product_price_point_handle: uuid:8c878f50-726e-013c-c71b-0286551bb34f
                      product_family:
                        id: 933860
                        name: Acme Projects
                        description: Amazing project management tool
                        handle: acme-projects
                        accounting_code: null
                        created_at: 2023-12-01T06:56:12-05:00
                        updated_at: 2023-12-01T06:56:12-05:00
                      public_signup_pages: []
      deprecated: false
    parameters: []
  /products/{product_id}/price_points/bulk.json:
    post:
      tags:
      - 'Product: Price Points'
      summary: createProductPricePoints
      description: Use this endpoint to create multiple product price points in one request.
      operationId: createProductPricePoints
      parameters:
      - name: product_id
        in: path
        description: The Chargify id of the product to which the price points belong
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BulkCreateProductPricePointsRequest'
              - examples:
                - price_points:
                  - name: Educational
                    handle: educational
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
                  - name: More Educational
                    handle: more-educational
                    price_in_cents: 2000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
              contentMediaType: application/json
            examples:
              Example:
                value:
                  price_points:
                  - name: Educational
                    handle: educational
                    price_in_cents: 1000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
                  - name: More Educational
                    handle: more-educational
                    price_in_cents: 2000
                    interval: 1
                    interval_unit: month
                    trial_price_in_cents: 4900
                    trial_interval: 1
                    trial_interval_unit: month
                    trial_type: payment_expected
                    initial_charge_in_cents: 120000
                    initial_charge_after_trial: false
                    expiration_interval: 12
                    expiration_interval_unit: month
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkCreateProductPricePointsResponse'
                - examples:
                  - price_points:
                    - id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    price_points:
                    - id: 283
                      name: Educational
                      handle: educational
                      price_in_cents: 1000
                      interval: 1
                      interval_unit: month
                      trial_price_in_cents: 4900
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      initial_charge_in_cents: 120000
                      initial_charge_after_trial: false
                      expiration_interval: 12
                      expiration_interval_unit: month
                      product_id: 901
                      archived_at: 2023-11-30T06:37:20-05:00
                      created_at: 2023-11-27T06:37:20-05:00
                      updated_at: 2023-11-27T06:37:20-05:00
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                examples:
                - "{\"price_points[0].currency_prices\":[\"Currency prices: is invalid.\"],\"price_points[0].interval\":[\"Recurring Interval: cannot be blank.\"],\"price_points[0].interval_unit\":[\"Interval unit: must be 'month' or 'day'.\"],\"price_points[0].name\":[\"Name: cannot be blank.\"],\"price_points[0].price\":[\"Price: is not a number.\"],\"price_points[0].price_in_cents\":[\"Price in cents: cannot be blank.\"],\"price_points[1].currency_prices\":[\"Currency prices: is invalid.\"],\"price_points[1].interval\":[\"Recurring Interval: cannot be blank.\"],\"price_points[1].interval_unit\":[\"Interval unit: must be 'month' or 'day'.\"],\"price_points[1].name\":[\"Name: cannot be blank.\"],\"price_points[1].price\":[\"Price: is not a number.\"],\"price_points[1].price_in_cents\":[\"Price in cents: cannot be blank.\"]}"
                - '{"price_points[0].interval":["Recurring Interval: must be greater than or equal to 1."]}'
                - '{"price_points[0].currency_prices":["Currency prices: is invalid."],"price_points[0].price":["Price: must be greater than or equal to 0."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    price_points[0].currency_prices:
                    - 'Currency prices: is invalid.'
                    price_points[0].interval:
                    - 'Recurring Interval: cannot be blank.'
                    price_points[0].interval_unit:
                    - "Interval unit: must be 'month' or 'day'."
                    price_points[0].name:
                    - 'Name: cannot be blank.'
                    price_points[0].price:
                    - 'Price: is not a number.'
                    price_points[0].price_in_cents:
                    - 'Price in cents: cannot be blank.'
                    price_points[1].currency_prices:
                    - 'Currency prices: is invalid.'
                    price_points[1].interval:
                    - 'Recurring Interval: cannot be blank.'
                    price_points[1].interval_unit:
                    - "Interval unit: must be 'month' or 'day'."
                    price_points[1].name:
                    - 'Name: cannot be blank.'
                    price_points[1].price:
                    - 'Price: is not a number.'
                    price_points[1].price_in_cents:
                    - 'Price in cents: cannot be blank.'
                Example-2:
                  value:
                    price_points[0].interval:
                    - 'Recurring Interval: must be greater than or equal to 1.'
                Example-3:
                  value:
                    price_points[0].currency_prices:
                    - 'Currency prices: is invalid.'
                    price_points[0].price:
                    - 'Price: must be greater than or equal to 0.'
      deprecated: false
    parameters: []
  /product_price_points/{product_price_point_id}/currency_prices.json:
    post:
      tags:
      - 'Product: Price Points'
      summary: createProductCurrencyPrices
      description: >-
        This endpoint allows you to create currency prices for a given currency that has been defined on the site level in your settings.


        When creating currency prices, they need to mirror the structure of your primary pricing. If the product price point defines a trial and/or setup fee, each currency must also define a trial and/or setup fee.


        Note: Currency Prices are not able to be created for custom product price points.
      operationId: createProductCurrencyPrices
      parameters:
      - name: product_price_point_id
        in: path
        description: The Chargify id of the product price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateProductCurrencyPricesRequest'
              - examples:
                - currency_prices:
                  - currency: EUR
                    price: 60
                    role: baseline
                  - currency: EUR
                    price: 30
                    role: trial
                  - currency: EUR
                    price: 100
                    role: initial
              contentMediaType: application/json
            examples:
              Example:
                value:
                  currency_prices:
                  - currency: EUR
                    price: 60
                    role: baseline
                  - currency: EUR
                    price: 30
                    role: trial
                  - currency: EUR
                    price: 100
                    role: initial
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CurrencyPricesResponse'
                - examples:
                  - currency_prices:
                    - id: 100
                      currency: EUR
                      price: 123
                      formatted_price: €123,00
                      product_price_point_id: 32669
                      role: baseline
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    currency_prices:
                    - id: 100
                      currency: EUR
                      price: 123
                      formatted_price: €123,00
                      product_price_point_id: 32669
                      role: baseline
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      base:
                      - 'This product price point requires that prices are defined for: [baseline].'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      base:
                      - 'This product price point requires that prices are defined for: [baseline].'
      deprecated: false
    put:
      tags:
      - 'Product: Price Points'
      summary: updateProductCurrencyPrices
      description: >-
        This endpoint allows you to update the `price`s of currency prices for a given currency that exists on the product price point.


        When updating the pricing, it needs to mirror the structure of your primary pricing. If the product price point defines a trial and/or setup fee, each currency must also define a trial and/or setup fee.


        Note: Currency Prices are not able to be updated for custom product price points.
      operationId: updateProductCurrencyPrices
      parameters:
      - name: product_price_point_id
        in: path
        description: The Chargify id of the product price point
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateCurrencyPricesRequest'
              - examples:
                - currency_prices:
                  - id: 200
                    price: 15
                  - id: 201
                    price: 5
              contentMediaType: application/json
            examples:
              Example:
                value:
                  currency_prices:
                  - id: 200
                    price: 15
                  - id: 201
                    price: 5
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CurrencyPricesResponse'
                - examples:
                  - currency_prices:
                    - id: 123
                      currency: EUR
                      price: 100
                      formatted_price: €123,00
                      product_price_point_id: 32669
                      role: baseline
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    currency_prices:
                    - id: 123
                      currency: EUR
                      price: 100
                      formatted_price: €123,00
                      product_price_point_id: 32669
                      role: baseline
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      base:
                      - 'This product price point requires that prices are defined for: [baseline].'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      base:
                      - 'This product price point requires that prices are defined for: [baseline].'
      deprecated: false
    parameters: []
  /products_price_points.json:
    get:
      tags:
      - 'Product: Price Points'
      summary: listAllProductPricePoints
      description: This method allows retrieval of a list of Products Price Points belonging to a Site.
      operationId: listAllProductPricePoints
      parameters:
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      - name: filter[archived_at]
        in: query
        description: 'Allows fetching price points only if archived_at is present or not. Use in query: `filter[archived_at]=not_null`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: 'Allows fetching price points only if archived_at is present or not. Use in query: `filter[archived_at]=not_null`.'
            examples:
            - not_null
      - name: filter[date_field]
        in: query
        description: 'The type of filter you would like to apply to your search. Use in query: `filter[date_field]=created_at`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: 'The type of filter you would like to apply to your search. Use in query: `filter[date_field]=created_at`.'
            examples:
            - updated_at
      - name: filter[end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns price points with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2019-06-07
      - name: filter[end_datetime]
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[ids]
        in: query
        description: 'Allows fetching price points with matching id based on provided values. Use in query: `filter[ids]=1,2,3`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: filter[start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns price points with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2019-06-07
      - name: filter[start_datetime]
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2019-06-07T17:20:06Z
      - name: filter[type]
        in: query
        description: 'Allows fetching price points with matching type. Use in query: `filter[type]=catalog,custom`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PricePointType'
          examples:
          - - catalog
            - default
            - custom
      - name: include
        in: query
        description: 'Allows including additional data in the response. Use in query: `include=currency_prices`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListProductsPricePointsInclude'
          - description: 'Allows including additional data in the response. Use in query: `include=currency_prices`.'
            examples:
            - currency_prices
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListProductPricePointsResponse'
                - examples:
                  - price_points:
                    - id: 0
                      name: My pricepoint
                      handle: handle
                      price_in_cents: 10
                      interval: 5
                      interval_unit: month
                      trial_price_in_cents: 10
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      introductory_offer: true
                      initial_charge_in_cents: 0
                      initial_charge_after_trial: true
                      expiration_interval: 0
                      expiration_interval_unit: month
                      product_id: 1230
                      created_at: 2021-04-02T17:52:09-04:00
                      updated_at: 2021-04-02T17:52:09-04:00
                      use_site_exchange_rate: true
                contentMediaType: application/json
              examples:
                example:
                  value:
                    price_points:
                    - id: 0
                      name: My pricepoint
                      handle: handle
                      price_in_cents: 10
                      interval: 5
                      interval_unit: month
                      trial_price_in_cents: 10
                      trial_interval: 1
                      trial_interval_unit: month
                      trial_type: payment_expected
                      introductory_offer: true
                      initial_charge_in_cents: 0
                      initial_charge_after_trial: true
                      expiration_interval: 0
                      expiration_interval_unit: month
                      product_id: 1230
                      created_at: 2021-04-02T17:52:09-04:00
                      updated_at: 2021-04-02T17:52:09-04:00
                      use_site_exchange_rate: true
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'date_field must be one of: created_at, updated_at'
                    - start_date supplied value is invalid, expected ISO 8601 format
                contentMediaType: application/json
              examples:
                example:
                  value:
                    errors:
                    - 'date_field must be one of: created_at, updated_at'
                    - start_date supplied value is invalid, expected ISO 8601 format
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/proforma_invoices.json:
    post:
      tags:
      - Proforma Invoices
      summary: createConsolidatedProformaInvoice
      description: >-
        This endpoint will trigger the creation of a consolidated proforma invoice asynchronously. It will return a 201 with no message, or a 422 with any errors. To find and view the new consolidated proforma invoice, you may poll the subscription group listing for proforma invoices; only one consolidated proforma invoice may be created per group at a time.


        If the information becomes outdated, simply void the old consolidated proforma invoice and generate a new one.


        ## Restrictions


        Proforma invoices are only available on Relationship Invoicing sites. To create a proforma invoice, the subscription must not be prepaid, and must be in a live state.
      operationId: createConsolidatedProformaInvoice
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '201':
          description: Created
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Consolidated proforma invoice generation already in progress
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Consolidated proforma invoice generation already in progress
      deprecated: false
    get:
      tags:
      - Proforma Invoices
      summary: listSubscriptionGroupProformaInvoices
      description: >
        Only proforma invoices with a `consolidation_level` of parent are returned.


        By default, proforma invoices returned on the index will only include totals, not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`, `custom_fields`. To include breakdowns, pass the specific field as a key in the query with a value set to true.
      operationId: listSubscriptionGroupProformaInvoices
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /proforma_invoices/{proforma_invoice_uid}.json:
    get:
      tags:
      - Proforma Invoices
      summary: readProformaInvoice
      description: >-
        Use this endpoint to read the details of an existing proforma invoice.


        ## Restrictions


        Proforma invoices are only available on Relationship Invoicing sites.
      operationId: readProformaInvoice
      parameters:
      - name: proforma_invoice_uid
        in: path
        description: The uid of the proforma invoice
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/proforma_invoices.json:
    post:
      tags:
      - Proforma Invoices
      summary: createProformaInvoice
      description: >-
        This endpoint will create a proforma invoice and return it as a response. If the information becomes outdated, simply void the old proforma invoice and generate a new one.


        If you would like to preview the next billing amounts without generating a full proforma invoice, please use the renewal preview endpoint.


        ## Restrictions


        Proforma invoices are only available on Relationship Invoicing sites. To create a proforma invoice, the subscription must not be in a group, must not be prepaid, and must be in a live state.
      operationId: createProformaInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoice'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - this subscription is not eligible to create proforma invoices
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - this subscription is not eligible to create proforma invoices
      deprecated: false
    get:
      tags:
      - Proforma Invoices
      summary: listProformaInvoices
      description: By default, proforma invoices returned on the index will only include totals, not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`, or `custom_fields`. To include breakdowns, pass the specific field as a key in the query with a value set to `true`.
      operationId: listProformaInvoices
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: start_date
        in: query
        description: The beginning date range for the invoice's Due Date, in the YYYY-MM-DD format.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The ending date range for the invoice's Due Date, in the YYYY-MM-DD format.
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'The current status of the invoice.  Allowed Values: draft, open, paid, pending, voided'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: 'The current status of the invoice.  Allowed Values: draft, open, paid, pending, voided'
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: direction
        in: query
        description: The sort direction of the returned invoices.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/direction'
          - description: The sort direction of the returned invoices.
      - name: line_items
        in: query
        description: Include line items data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: discounts
        in: query
        description: Include discounts data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: taxes
        in: query
        description: Include taxes data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: credits
        in: query
        description: Include credits data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: payments
        in: query
        description: Include payments data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: custom_fields
        in: query
        description: Include custom fields data
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProformaInvoice'
                description: ''
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /proforma_invoices/{proforma_invoice_uid}/void.json:
    post:
      tags:
      - Proforma Invoices
      summary: voidProformaInvoice
      description: >-
        This endpoint will void a proforma invoice that has the status "draft".


        ## Restrictions


        Proforma invoices are only available on Relationship Invoicing sites.


        Only proforma invoices that have the appropriate status may be reopened. If the invoice identified by {uid} does not have the appropriate status, the response will have HTTP status code 422 and an error message.


        A reason for the void operation is required to be included in the request body. If one is not provided, the response will have HTTP status code 422 and an error message.
      operationId: voidProformaInvoice
      parameters:
      - name: proforma_invoice_uid
        in: path
        description: The uid of the proforma invoice
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VoidInvoiceRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoice'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - You must provide a reason for voiding the proforma invoice.
                    - Only draft proforma invoices may be voided.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - You must provide a reason for voiding the proforma invoice.
                    - Only draft proforma invoices may be voided.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/proforma_invoices/preview.json:
    post:
      tags:
      - Proforma Invoices
      summary: previewProformaInvoice
      description: >-
        Return a preview of the data that will be included on a given subscription's proforma invoice if one were to be generated. It will have similar line items and totals as a renewal preview, but the response will be presented in the format of a proforma invoice. Consequently it will include additional information such as the name and addresses that will appear on the proforma invoice.


        The preview endpoint is subject to all the same conditions as the proforma invoice endpoint. For example, previews are only available on the Relationship Invoicing architecture, and previews cannot be made for end-of-life subscriptions.


        If all the data returned in the preview is as expected, you may then create a static proforma invoice and send it to your customer. The data within a preview will not be saved and will not be accessible after the call is made.


        Alternatively, if you have some proforma invoices already, you may make a preview call to determine whether any billing information for the subscription's upcoming renewal has changed.
      operationId: previewProformaInvoice
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoicePreview'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - this subscription is not eligible to create proforma invoices
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                    errors:
                    - this subscription is not eligible to create proforma invoices
      deprecated: false
    parameters: []
  /subscriptions/proforma_invoices.json:
    post:
      tags:
      - Proforma Invoices
      summary: createSignupProformaInvoice
      description: >-
        This endpoint is only available for Relationship Invoicing sites. It cannot be used to create consolidated proforma invoices or preview prepaid subscriptions.


        Create a proforma invoice to preview costs before a subscription's signup. Like other proforma invoices, it can be emailed to the customer, voided, and publicly viewed on the chargifypay domain.


        Pass a payload that resembles a subscription create or signup preview request. For example, you can specify components, coupons/a referral, offers, custom pricing, and an existing customer or payment profile to populate a shipping or billing address.


        A product and customer first name, last name, and email are the minimum requirements. We recommend associating the proforma invoice with a customer_id to easily find their proforma invoices, since the subscription_id will always be blank.
      operationId: createSignupProformaInvoice
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionRequest'
              - examples:
                - '{"subscription":{"product_handle":"gold-product","customer_attributes":{"first_name":"Myra","last_name":"Maisel","email":"mmaisel@example.com"}}}'
                - '{"subscription":{"product_handle":"gold-product","customer_id":12345}}'
              contentMediaType: application/json
            examples:
              Minimum payload:
                value:
                  subscription:
                    product_handle: gold-product
                    customer_attributes:
                      first_name: Myra
                      last_name: Maisel
                      email: mmaisel@example.com
              Minimum payload with referenced customer:
                value:
                  subscription:
                    product_handle: gold-product
                    customer_id: 12345
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProformaInvoice'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProformaBadRequestErrorResponse1'
                - examples:
                  - errors:
                      subscription:
                        base:
                        - must be an object
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      subscription:
                        base:
                        - must be an object
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - "{\"errors\":{\"base\":[\"Couldn't find Product by 1\"]}}"
                  - '{"errors":{"customer":["Missing required customer attributes"]}}'
                  - '{"errors":{"base":["currency must be a string"]}}'
                contentMediaType: application/json
              examples:
                Product invalid:
                  value:
                    errors:
                      base:
                      - Couldn't find Product by 1
                Missing customer:
                  value:
                    errors:
                      customer:
                      - Missing required customer attributes
                Invalid type:
                  value:
                    errors:
                      base:
                      - currency must be a string
      deprecated: false
    parameters: []
  /subscriptions/proforma_invoices/preview.json:
    post:
      tags:
      - Proforma Invoices
      summary: previewSignupProformaInvoice
      description: >-
        This endpoint is only available for Relationship Invoicing sites. It cannot be used to create consolidated proforma invoice previews or preview prepaid subscriptions.


        Create a signup preview in the format of a proforma invoice to preview costs before a subscription's signup. You have the option of optionally previewing the first renewal's costs as well. The proforma invoice preview will not be persisted.


        Pass a payload that resembles a subscription create or signup preview request. For example, you can specify components, coupons/a referral, offers, custom pricing, and an existing customer or payment profile to populate a shipping or billing address.


        A product and customer first name, last name, and email are the minimum requirements.
      operationId: previewSignupProformaInvoice
      parameters:
      - name: include=next_proforma_invoice
        in: query
        description: Choose to include a proforma invoice preview for the first renewal
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionRequest'
              - examples:
                - '{"subscription":{"product_handle":"gold-plan","customer_attributes":{"first_name":"first","last_name":"last","email":"flast@example.com"}}}'
                - '{"subscription":{"product_handle":"silver-plan","customer_id":1234}}'
              contentMediaType: application/json
            examples:
              Minimum example:
                value:
                  subscription:
                    product_handle: gold-plan
                    customer_attributes:
                      first_name: first
                      last_name: last
                      email: flast@example.com
              Minimum example with existing customer:
                value:
                  subscription:
                    product_handle: silver-plan
                    customer_id: 1234
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupProformaPreviewResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ProformaBadRequestErrorResponse1'
                - examples:
                  - errors:
                      subscription:
                        base:
                        - must be an object
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      subscription:
                        base:
                        - must be an object
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - "{\"errors\":{\"base\":[\"Couldn't find Product by 6067\"]}}"
                  - '{"errors":{"customer":["Missing required customer attributes"]}}'
                  - '{"errors":{"base":["organization must be a string"]}}'
                contentMediaType: application/json
              examples:
                Missing product:
                  value:
                    errors:
                      base:
                      - Couldn't find Product by 6067
                Missing customer:
                  value:
                    errors:
                      customer:
                      - Missing required customer attributes
                Invalid type:
                  value:
                    errors:
                      base:
                      - organization must be a string
      deprecated: false
    parameters: []
  /reason_codes.json:
    post:
      tags:
      - Reason Codes
      summary: createReasonCode
      description: >-
        # Reason Codes Intro


        ReasonCodes are a way to gain a high level view of why your customers are cancelling the subcription to your product or service.


        Add a set of churn reason codes to be displayed in-app and/or the Chargify Billing Portal. As your subscribers decide to cancel their subscription, learn why they decided to cancel.


        ## Reason Code Documentation


        Full documentation on how Reason Codes operate within Chargify can be located under the following links.


        [Churn Reason Codes](https://chargify.zendesk.com/hc/en-us/articles/4407896775579#churn-reason-codes)


        ## Create Reason Code


        This method gives a merchant the option to create a reason codes for a given Site.
      operationId: createReasonCode
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateReasonCodeRequest'
              - examples:
                - reason_code:
                    code: NOTHANKYOU
                    description: No thank you!
                    position: 5
              contentMediaType: application/json
            examples:
              Example:
                value:
                  reason_code:
                    code: NOTHANKYOU
                    description: No thank you!
                    position: 5
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonCodeResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Code: cannot be blank.'
                    - 'Code: This code is already in use.'
                    - 'Description: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Code: cannot be blank.'
                    - 'Code: This code is already in use.'
                    - 'Description: cannot be blank.'
      deprecated: false
    get:
      tags:
      - Reason Codes
      summary: listReasonCodes
      description: This method gives a merchant the option to retrieve a list of all of the current churn codes for a given site.
      operationId: listReasonCodes
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReasonCodeResponse'
                description: ''
                examples:
                - - reason_code:
                      id: 2
                      site_id: 2
                      code: LARGE
                      description: This is too complicated
                      position: 1
                      created_at: 2017-02-16T16:49:07-05:00
                      updated_at: 2017-02-17T16:29:51-05:00
                  - reason_code:
                      id: 1
                      site_id: 2
                      code: CH1
                      description: This doesnt meet my needs
                      position: 2
                      created_at: 2017-02-16T16:48:45-05:00
                      updated_at: 2017-02-17T16:29:59-05:00
                  - reason_code:
                      id: 5
                      site_id: 2
                      code: HAN99
                      description: Hard to setup
                      position: 3
                      created_at: 2017-02-17T16:29:42-05:00
                      updated_at: 2017-02-17T16:29:59-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - reason_code:
                      id: 2
                      site_id: 2
                      code: LARGE
                      description: This is too complicated
                      position: 1
                      created_at: 2017-02-16T16:49:07-05:00
                      updated_at: 2017-02-17T16:29:51-05:00
                  - reason_code:
                      id: 1
                      site_id: 2
                      code: CH1
                      description: This doesnt meet my needs
                      position: 2
                      created_at: 2017-02-16T16:48:45-05:00
                      updated_at: 2017-02-17T16:29:59-05:00
                  - reason_code:
                      id: 5
                      site_id: 2
                      code: HAN99
                      description: Hard to setup
                      position: 3
                      created_at: 2017-02-17T16:29:42-05:00
                      updated_at: 2017-02-17T16:29:59-05:00
      deprecated: false
    parameters: []
  /reason_codes/{reason_code_id}.json:
    get:
      tags:
      - Reason Codes
      summary: readReasonCode
      description: This method gives a merchant the option to retrieve a list of a particular code for a given Site by providing the unique numerical ID of the code.
      operationId: readReasonCode
      parameters:
      - name: reason_code_id
        in: path
        description: The Chargify id of the reason code
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonCodeResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - Reason Codes
      summary: updateReasonCode
      description: This method gives a merchant the option to update an existing reason code for a given site.
      operationId: updateReasonCode
      parameters:
      - name: reason_code_id
        in: path
        description: The Chargify id of the reason code
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateReasonCodeRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonCodeResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Reason Codes
      summary: deleteReasonCode
      description: This method gives a merchant the option to delete one reason code from the Churn Reason Codes. This code will be immediately removed. This action is not reversable.
      operationId: deleteReasonCode
      parameters:
      - name: reason_code_id
        in: path
        description: The Chargify id of the reason code
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReasonCodesJsonResponse'
                - examples:
                  - ok: ok
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    ok: ok
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /referral_codes/validate.json:
    get:
      tags:
      - Referral Codes
      summary: validateReferralCode
      description: >-
        Use this method to determine if the referral code is valid and applicable within your Site. This method is useful for validating referral codes that are entered by a customer.


        ## Referrals Documentation


        Full documentation on how to use the referrals feature in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407802831643).


        ## Server Response


        If the referral code is valid the status code will be `200` and the referral code will be returned. If the referral code is invalid, a `404` response will be returned.
      operationId: validateReferralCode
      parameters:
      - name: code
        in: query
        description: The referral code you are trying to validate
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReferralValidationResponse'
                - examples:
                  - referral_code:
                      id: 1032514
                      site_id: 31615
                      subscription_id: 16254270
                      code: 9b6cdw
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    referral_code:
                      id: 1032514
                      site_id: 31615
                      subscription_id: 16254270
                      code: 9b6cdw
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleStringErrorResponse1'
                - examples:
                  - errors: Referral code is invalid.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors: Referral code is invalid.
      deprecated: false
    parameters: []
  /sellers/{seller_id}/sales_commission_settings.json:
    get:
      tags:
      - Sales Commissions
      summary: listSalesCommissionSettings
      description: >-
        Endpoint returns subscriptions with associated sales reps


        ## Modified Authentication Process


        The Sales Commission API differs from other Chargify API endpoints. This resource is associated with the seller itself. Up to now all available resources were at the level of the site, therefore creating the API Key per site was a sufficient solution. To share resources at the seller level, a new authentication method was introduced, which is user authentication. Creating an API Key for a user is a required step to correctly use the Sales Commission API, more details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).


        Access to the Sales Commission API endpoints is available to users with financial access, where the seller has the Advanced Analytics component enabled. For further information on getting access to Advanced Analytics please contact Chargify support.


        > Note: The request is at seller level, it means `<<subdomain>>` variable will be replaced by `app`
      operationId: listSalesCommissionSettings
      parameters:
      - name: seller_id
        in: path
        description: The Chargify id of your seller account
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: For authorization use user API key. See details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).
        style: simple
        schema:
          type: string
          default: Bearer <<apiKey>>
      - name: live_mode
        in: query
        description: This parameter indicates if records should be fetched from live mode sites. Default value is true.
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: This parameter indicates how many records to fetch in each request. Default value is 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          default: 100
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SaleRepSettings'
                description: ''
                examples:
                - - customer_name: Ziomek Ziomeczek
                    subscription_id: 81746
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 48
                    sales_rep_name: John Candy
                  - customer_name: Ziom Kom
                    subscription_id: 83758
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 49
                    sales_rep_name: Josh Acme
                  - customer_name: George Bush
                    subscription_id: 83790
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 48
                    sales_rep_name: John Candy
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - customer_name: Ziomek Ziomeczek
                    subscription_id: 81746
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 48
                    sales_rep_name: John Candy
                  - customer_name: Ziom Kom
                    subscription_id: 83758
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 49
                    sales_rep_name: Josh Acme
                  - customer_name: George Bush
                    subscription_id: 83790
                    site_link: https://chargify9.staging-chargify.com/dashboard
                    site_name: Chargify
                    subscription_mrr: $200.00
                    sales_rep_id: 48
                    sales_rep_name: John Candy
      deprecated: false
    parameters: []
  /sellers/{seller_id}/sales_reps.json:
    get:
      tags:
      - Sales Commissions
      summary: listSalesReps
      description: >-
        Endpoint returns sales rep list with details


        ## Modified Authentication Process


        The Sales Commission API differs from other Chargify API endpoints. This resource is associated with the seller itself. Up to now all available resources were at the level of the site, therefore creating the API Key per site was a sufficient solution. To share resources at the seller level, a new authentication method was introduced, which is user authentication. Creating an API Key for a user is a required step to correctly use the Sales Commission API, more details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).


        Access to the Sales Commission API endpoints is available to users with financial access, where the seller has the Advanced Analytics component enabled. For further information on getting access to Advanced Analytics please contact Chargify support.


        > Note: The request is at seller level, it means `<<subdomain>>` variable will be replaced by `app`
      operationId: listSalesReps
      parameters:
      - name: seller_id
        in: path
        description: The Chargify id of your seller account
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: For authorization use user API key. See details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).
        style: simple
        schema:
          type: string
          default: Bearer <<apiKey>>
      - name: live_mode
        in: query
        description: This parameter indicates if records should be fetched from live mode sites. Default value is true.
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: This parameter indicates how many records to fetch in each request. Default value is 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          default: 100
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListSaleRepItem'
                description: ''
                examples:
                - - id: 48
                    full_name: John Candy
                    subscriptions_count: 2
                    mrr_data:
                      november_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      december_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      january_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      february_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      march_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      april_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                    test_mode: true
                  - id: 49
                    full_name: Josh Acme
                    subscriptions_count: 1
                    mrr_data:
                      november_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      december_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      january_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      february_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      march_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      april_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                    test_mode: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - id: 48
                    full_name: John Candy
                    subscriptions_count: 2
                    mrr_data:
                      november_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      december_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      january_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      february_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      march_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                      april_2020:
                        mrr: $400.00
                        usage: $0.00
                        recurring: $400.00
                    test_mode: true
                  - id: 49
                    full_name: Josh Acme
                    subscriptions_count: 1
                    mrr_data:
                      november_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      december_2019:
                        mrr: $0.00
                        usage: $0.00
                        recurring: $0.00
                      january_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      february_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      march_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                      april_2020:
                        mrr: $200.00
                        usage: $0.00
                        recurring: $200.00
                    test_mode: true
      deprecated: false
    parameters: []
  /sellers/{seller_id}/sales_reps/{sales_rep_id}.json:
    get:
      tags:
      - Sales Commissions
      summary: readSalesRep
      description: >-
        Endpoint returns sales rep and attached subscriptions details.


        ## Modified Authentication Process


        The Sales Commission API differs from other Chargify API endpoints. This resource is associated with the seller itself. Up to now all available resources were at the level of the site, therefore creating the API Key per site was a sufficient solution. To share resources at the seller level, a new authentication method was introduced, which is user authentication. Creating an API Key for a user is a required step to correctly use the Sales Commission API, more details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).


        Access to the Sales Commission API endpoints is available to users with financial access, where the seller has the Advanced Analytics component enabled. For further information on getting access to Advanced Analytics please contact Chargify support.


        > Note: The request is at seller level, it means `<<subdomain>>` variable will be replaced by `app`
      operationId: readSalesRep
      parameters:
      - name: seller_id
        in: path
        description: The Chargify id of your seller account
        required: true
        style: simple
        schema:
          type: string
      - name: sales_rep_id
        in: path
        description: The Chargify id of sales rep.
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: For authorization use user API key. See details [here](https://developers.chargify.com/docs/developer-docs/ZG9jOjMyNzk5NTg0-2020-04-20-new-api-authentication).
        style: simple
        schema:
          type: string
          default: Bearer <<apiKey>>
      - name: live_mode
        in: query
        description: This parameter indicates if records should be fetched from live mode sites. Default value is true.
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: This parameter indicates how many records to fetch in each request. Default value is 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          default: 100
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SaleRep'
                - examples:
                  - id: 48
                    full_name: John Candy
                    subscriptions_count: 2
                    test_mode: true
                    subscriptions:
                    - id: 81746
                      site_name: Chargify
                      subscription_url: https://chargify9.staging-chargify.com/subscriptions/81746
                      customer_name: Ziomek Ziomeczek
                      created_at: 2020-01-03T02:36:27-05:00
                      mrr: $200.00
                      usage: $0.00
                      recurring: $200.00
                      last_payment: 2020-04-03T03:40:27-04:00
                      churn_date: null
                    - id: 83790
                      site_name: Chargify
                      subscription_url: https://chargify9.staging-chargify.com/subscriptions/83790
                      customer_name: George Bush
                      created_at: 2020-01-17T07:34:32-05:00
                      mrr: $200.00
                      usage: $0.00
                      recurring: $200.00
                      last_payment: 2020-04-17T08:41:03-04:00
                      churn_date: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    id: 48
                    full_name: John Candy
                    subscriptions_count: 2
                    test_mode: true
                    subscriptions:
                    - id: 81746
                      site_name: Chargify
                      subscription_url: https://chargify9.staging-chargify.com/subscriptions/81746
                      customer_name: Ziomek Ziomeczek
                      created_at: 2020-01-03T02:36:27-05:00
                      mrr: $200.00
                      usage: $0.00
                      recurring: $200.00
                      last_payment: 2020-04-03T03:40:27-04:00
                      churn_date: null
                    - id: 83790
                      site_name: Chargify
                      subscription_url: https://chargify9.staging-chargify.com/subscriptions/83790
                      customer_name: George Bush
                      created_at: 2020-01-17T07:34:32-05:00
                      mrr: $200.00
                      usage: $0.00
                      recurring: $200.00
                      last_payment: 2020-04-17T08:41:03-04:00
                      churn_date: null
      deprecated: false
    parameters: []
  /site.json:
    get:
      tags:
      - Sites
      summary: readSite
      description: >-
        This endpoint allows you to fetch some site data.


        Full documentation on Sites in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407870738587).


        Specifically, the [Clearing Site Data](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405428327309) section is extremely relevant to this endpoint documentation.


        #### Relationship invoicing enabled

        If site has RI enabled then you will see more settings like:

            "customer_hierarchy_enabled": true,
            "whopays_enabled": true,
            "whopays_default_payer": "self"
        You can read more about these settings here:
         [Who Pays & Customer Hierarchy](https://chargify.zendesk.com/hc/en-us/articles/4407746683291)
      operationId: readSite
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SiteResponse'
                - examples:
                  - site:
                      id: 0
                      name: string
                      subdomain: string
                      currency: string
                      seller_id: 0
                      non_primary_currencies:
                      - string
                      relationship_invoicing_enabled: true
                      customer_hierarchy_enabled: true
                      whopays_enabled: true
                      whopays_default_payer: string
                      default_payment_collection_method: string
                      organization_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        name: string
                        phone: string
                      tax_configuration:
                        kind: custom
                        fully_configured: true
                        destination_address: shipping_then_billing
                      net_terms:
                        default_net_terms: 0
                        automatic_net_terms: 0
                        remittance_net_terms: 0
                        net_terms_on_remittance_signups_enabled: false
                        custom_net_terms_enabled: false
                      test: true
                      allocation_settings:
                        upgrade_charge: prorated
                        downgrade_credit: none
                        accrue_charge: 'true'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    site:
                      id: 0
                      name: string
                      subdomain: string
                      currency: string
                      seller_id: 0
                      non_primary_currencies:
                      - string
                      relationship_invoicing_enabled: true
                      customer_hierarchy_enabled: true
                      whopays_enabled: true
                      whopays_default_payer: string
                      default_payment_collection_method: string
                      organization_address:
                        street: null
                        line2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        name: string
                        phone: string
                      tax_configuration:
                        kind: custom
                        fully_configured: true
                        destination_address: shipping_then_billing
                      net_terms:
                        default_net_terms: 0
                        automatic_net_terms: 0
                        remittance_net_terms: 0
                        net_terms_on_remittance_signups_enabled: false
                        custom_net_terms_enabled: false
                      test: true
                      allocation_settings:
                        upgrade_charge: prorated
                        downgrade_credit: none
                        accrue_charge: 'true'
      deprecated: false
    parameters: []
  /sites/clear_data.json:
    post:
      tags:
      - Sites
      summary: clearSite
      description: >
        This call is asynchronous and there may be a delay before the site data is fully deleted. If you are clearing site data for an automated test, you will need to build in a delay and/or check that there are no products, etc., in the site before proceeding.


        **This functionality will only work on sites in TEST mode. Attempts to perform this on sites in “live” mode will result in a response of 403 FORBIDDEN.**
      operationId: clearSite
      parameters:
      - name: cleanup_scope
        in: query
        description: "`all`: Will clear all products, customers, and related subscriptions from the site. \n`customers`: Will clear only customers and related subscriptions (leaving the products untouched) for the site. \nRevenue will also be reset to 0.\nUse in query `cleanup_scope=all`."
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Cleanupscope'
          - description: "`all`: Will clear all products, customers, and related subscriptions from the site. \n`customers`: Will clear only customers and related subscriptions (leaving the products untouched) for the site. \nRevenue will also be reset to 0.\nUse in query `cleanup_scope=all`."
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /chargify_js_keys.json:
    get:
      tags:
      - Sites
      summary: listChargifyJsPublicKeys
      description: This endpoint returns public keys used for Chargify.js.
      operationId: listChargifyJsPublicKeys
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListPublicKeysResponse'
                - examples:
                  - chargify_js_keys:
                    - public_key: chjs_ftrxt7c4fv6f74wchjs_5zyn7gnwv
                      requires_security_token: false
                      created_at: 2021-01-01T05:00:00-04:00
                    meta:
                      total_count: 1
                      current_page: 1
                      total_pages: 1
                      per_page: 10
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    chargify_js_keys:
                    - public_key: chjs_ftrxt7c4fv6f74wchjs_5zyn7gnwv
                      requires_security_token: false
                      created_at: 2021-01-01T05:00:00-04:00
                    meta:
                      total_count: 1
                      current_page: 1
                      total_pages: 1
                      per_page: 10
      deprecated: false
    parameters: []
  /subscriptions.json:
    post:
      tags:
      - Subscriptions
      summary: createSubscription
      description: >-
        Full documentation on how subscriptions operate within Chargify can be located under the following topics:


        + [Subscriptions Reference](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405577172749-Subscription-Introduction)

        + [Subscriptions Actions](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405510556557-Actions)

        + [Subscription Cancellation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405510556557-Actions#initiate-cancellation)

        + [Subscription Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404559291021-Reactivating-and-Resuming)

        + [Subscription Import](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404863655821-Imports)


        When creating a subscription, you must specify a product and a customer. Credit card details may be required, depending on the options for the Product being subscribed ([see Product Options](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221#payment-method-settings)).


        The product may be specified by `product_id` or by `product_handle` (API Handle). In similar fashion, to pass a particular product price point, you may either use `product_price_point_handle` or `product_price_point_id`.


        An existing customer may be specified by a `customer_id` (ID within Chargify) or a `customer_reference` (unique value within your app that you have shared with Chargify via the reference attribute on a customer). You may also pass in an existing payment profile for that customer with `payment_profile_id`. A new customer may be created by providing `customer_attributes`.


        Credit card details may be required, depending on the options for the product being subscribed. The product can be specified by `product_id` or by `product_handle` (API Handle).


        If you are creating a subscription with a payment profile, the attribute to send will be `credit_card_attributes` or `bank_account_attributes` for ACH and Direct Debit. That said, when you read the subscription after creation, we return the profile details under `credit_card` or `bank_account`.


        ## Taxable Subscriptions


        If your intent is to charge your subscribers tax via [Avalara Taxes](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405275711885-Avalara-VAT-Tax) or [Custom Taxes](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405069041549-Custom-Taxes), there are a few considerations to be made regarding collecting subscription data.

        For subscribers to be eligible to be taxed, the following information for the `customer` object or `payment_profile` object must by supplied:


        + A subscription to a [taxable product](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221-Product-Editing#tax-settings)

        + [Full valid billing or shipping address](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405356114317#full-address-required-for-taxable-subscriptions) to identify the tax locale

        + The portion of the address that houses the [state information](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405356114317#required-state-format-for-taxable-subscriptions) of either adddress must adhere to the ISO standard of a 2-3 character limit/format.

        + The portion of the address that houses the [country information](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405356114317#required-country-format-for-taxable-subscriptions) must adhere to the ISO standard of a 2 character limit/format.


        ## Subscription Request Examples


        The subscription examples below will be split into two sections.


        The first section, "Subscription Customization", will focus on passing different information with a subscription, such as components, calendar billing, and custom fields. These examples will presume you are using a secure `chargify_token` generated by Chargify.js.


        The second section, "Passing Payment Information", will focus on passing payment information into Chargify. Please be aware that <b>collecting and sending Chargify raw card details requires PCI compliance on your end</b>; these examples are provided as guidance. If your business is not PCI compliant, we recommend using Chargify.js to collect credit cards or bank accounts.


        # Subscription Customization


        ## With Components


        Different components require slightly different data. For example, quantity-based and on/off components accept `allocated_quantity`, while metered components accept `unit_balance`.


        When creating a subscription with a component, a `price_point_id` can be passed in along with the `component_id` to specify which price point to use. If not passed in, the default price point will be used.


        Note: if an invalid `price_point_id` is used, the subscription will still proceed but will use the component's default price point.


        Components and their price points may be added by ID or by handle. See the example request body labeled "Components By Handle (Quantity-Based)"; the format will be the same for other component types.


        ## With Coupon(s)


        Pass an array of `coupon_codes`. See the example request body "With Coupon".


        ## With Manual Invoice Collection


        The `invoice` collection method works only on legacy Statement Architecture.


        On Relationship Invoicing Architecture use the `remittance` collection method.


        ## Prepaid Subscription


        A prepaid subscription can be created with the usual subscription creation parameters, specifying `prepaid` as the `payment_collection_method` and including a nested `prepaid_configuration`.


        After a prepaid subscription has been created, additional funds can be manually added to the prepayment account through the [Create Prepayment Endpoint](https://developers.chargify.com/docs/api-docs/7ec482de77ba7-create-prepayment).


        Prepaid subscriptions do not work on legacy Statement Architecture.


        ## With Metafields


        Metafields can either attach to subscriptions or customers. Metafields are popuplated with the supplied metadata to the resource specified.


        If the metafield doesn't exist yet, it will be created on-the-fly.


        ## With Custom Pricing


        Custom pricing is pricing specific to the subscription in question.

        Create a subscription with custom pricing by passing pricing information instead of a price point.

        For a custom priced product, pass the custom_price object in place of `product_price_point_id`. For a custom priced component, pass the `custom_price` object within the component object.

        Custom prices and price points can exist in harmony on a subscription.


        # Passing Payment Information


        ## Subscription with Chargify.js token


        The `chargify_token` can be obtained using [chargify.js](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDI0-overview). The token represents payment profile attributes that were provided by the customer in their browser and stored at the payment gateway.


        The `payment_type` attribute may either be `credit_card` or `bank_account`, depending on the type of payment method being added. If a bank account is being passed, the payment attributes should be changed to `bank_account_attributes`.


        ```json

        {
          "subscription": {
            "product_handle": "pro-plan",
            "customer_attributes": {
              "first_name": "Joe",
              "last_name": "Smith",
              "email": "j.smith@example.com"
            },
            "credit_card_attributes": {
              "chargify_token": "tok_cwhvpfcnbtgkd8nfkzf9dnjn",
              "payment_type": "credit_card"
            }
          }
        }

        ```


        ## Subscription with vault token


        If you already have a customer and card stored in your payment gateway, you may create a subscription with a `vault_token`.  Providing the last_four, card type and expiration date will allow the card to be displayed properly in the Chargify UI.


        ```json

        {
          "subscription": {
            "product_handle": "pro-plan",
            "customer_attributes": {
              "first_name": "Joe",
              "last_name": "Smith",
              "email": "j.smith@example.com"
            },
            "credit_card_attributes": {
              first_name: "Joe,
              last_name: "Smith",
              card_type: "visa",
              expiration_month: "05",
              expiration_year: "2025",
              last_four: "1234",
              vault_token: "12345abc",
              current_vault: "braintree_blue"
          }
        }

        ```


        ## Subscription with Credit Card


        ```json

        "subscription": {
            "product_handle": "basic",
            "customer_attributes": {
              "first_name": "Joe",
              "last_name": "Blow",
              "email": "joe@example.com",
              "zip": "02120",
              "state": "MA",
              "reference": "XYZ",
              "phone": "(617) 111 - 0000",
              "organization": "Acme",
              "country": "US",
              "city": "Boston",
              "address_2": null,
              "address": "123 Mass Ave."
            },
            "credit_card_attributes": {
              "last_name": "Smith",
              "first_name": "Joe",
              "full_number": "4111111111111111",
              "expiration_year": "2021",
              "expiration_month": "1",
              "card_type": "visa",
              "billing_zip": "02120",
              "billing_state": "MA",
              "billing_country": "US",
              "billing_city": "Boston",
              "billing_address_2": null,
              "billing_address": "123 Mass Ave."
            }
        }

        ```


        ## Subscription with ACH as Payment Profile


        ```json

        {
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Joe",
              "last_name": "Blow",
              "email": "joe@example.com",
              "zip": "02120",
              "state": "MA",
              "reference": "XYZ",
              "phone": "(617) 111 - 0000",
              "organization": "Acme",
              "country": "US",
              "city": "Boston",
              "address_2": null,
              "address": "123 Mass Ave."
            },
            "bank_account_attributes": {
              "bank_name": "Best Bank",
              "bank_routing_number": "021000089",
              "bank_account_number": "111111111111",
              "bank_account_type": "checking",
              "bank_account_holder_type": "business",
              "payment_type": "bank_account"
            }
          }
        }

        ```


        ## Subscription with PayPal payment profile


        ### With the nonce from Braintree JS


        ```json

        { "subscription": {
            "product_handle":"test-product-b",
            "customer_attributes": {
              "first_name":"Amelia",
              "last_name":"Johnson",
              "email":"amelia@example.com",
              "organization":"My Awesome Company"
            },
            "payment_profile_attributes":{
              "paypal_email": "amelia@example.com",
              "current_vault": "braintree_blue",
              "payment_method_nonce":"abc123",
              "payment_type":"paypal_account"
            }
          }
        ```



        ### With the Braintree Customer ID as the vault token:


        ```json

        { "subscription": {
            "product_handle":"test-product-b",
            "customer_attributes": {
              "first_name":"Amelia",
              "last_name":"Johnson",
              "email":"amelia@example.com",
              "organization":"My Awesome Company"
            },
            "payment_profile_attributes":{
              "paypal_email": "amelia@example.com",
              "current_vault": "braintree_blue",
              "vault_token":"58271347",
              "payment_type":"paypal_account"
            }
          }
        ```


        ## Subscription using GoCardless Bank Number


        These examples creates a customer, bank account and mandate in GoCardless.


        For more information on GoCardless, please view the following two resources:


        + [Payment Profiles via API for GoCardless](https://developers.chargify.com/docs/api-docs/1f10a4f170405-create-payment-profile#gocardless)

        + [Full documentation on GoCardless](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404501889677)


        + [Using Chargify.js with GoCardless - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-direct-debit-gocardless-gateway)


        + [Using Chargify.js with GoCardless - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-direct-debit-gocardless-gateway)


        ```json

        {
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "bank_account_attributes": {
              "bank_name": "Royal Bank of France",
              "bank_account_number": "0000000",
              "bank_routing_number": "0003",
              "bank_branch_code": "00006",
              "payment_type": "bank_account",
              "billing_address": "20 Place de la Gare",
              "billing_city": "Colombes",
              "billing_state": "Île-de-France",
              "billing_zip": "92700",
              "billing_country": "FR"
            }
          }
        }

        ```


        ## Subscription using GoCardless IBAN Number


        ```json

        {
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "bank_account_attributes": {
              "bank_name": "French Bank",
              "bank_iban": "FR1420041010050500013M02606",
              "payment_type": "bank_account",
              "billing_address": "20 Place de la Gare",
              "billing_city": "Colombes",
              "billing_state": "Île-de-France",
              "billing_zip": "92700",
              "billing_country": "FR"
            }
          }
        }

        ```


        ## Subscription using Stripe SEPA Direct Debit


        For more information on Stripe Direct Debit, please view the following two resources:


        + [Payment Profiles via API for Stripe SEPA Direct Debit](https://developers.chargify.com/docs/api-docs/1f10a4f170405-create-payment-profile#sepa-direct-debit)

        + [Full documentation on Stripe Direct Debit](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405050826765-Stripe-SEPA-and-BECS-Direct-Debit)


        + [Using Chargify.js with Stripe SEPA or BECS Direct Debit - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-sepa-or-becs-direct-debit-stripe-gateway)


        + [Using Chargify.js with Stripe SEPA Direct Debit - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-sepa-direct-debit-stripe-gateway)



        ```json

        {
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "bank_account_attributes": {
              "bank_name": "Test Bank",
              "bank_iban": "DE89370400440532013000",
              "payment_type": "bank_account"
            }
          }
        }

        ```


        ## Subscription using Stripe BECS Direct Debit


        For more information on Stripe Direct Debit, please view the following two resources:


        + [Payment Profiles via API for Stripe BECS Direct Debit](https://developers.chargify.com/docs/api-docs/1f10a4f170405-create-payment-profile#stripe-becs-direct-debit)

        + [Full documentation on Stripe Direct Debit](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405050826765-Stripe-SEPA-and-BECS-Direct-Debit)


        + [Using Chargify.js with Stripe SEPA or BECS Direct Debit - minimal example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#minimal-example-with-sepa-or-becs-direct-debit-stripe-gateway)


        + [Using Chargify.js with Stripe BECS Direct Debit - full example](https://developers.chargify.com/docs/developer-docs/ZG9jOjE0NjAzNDIy-examples#full-example-with-becs-direct-debit-stripe-gateway)



        ```json

        {
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "bank_account_attributes": {
              "bank_name": "Test Bank",
              "bank_branch_code": "000000",
              "bank_account_number": "000123456",
              "payment_type": "bank_account"
            }
          }
        }

        ```


        ## 3D Secure - Stripe


        It may happen that a payment needs 3D Secure Authentication when the subscription is created; this is referred to in our help docs as a [post-authentication flow](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405177432077#psd2-flows-pre-authentication-and-post-authentication). The server returns `422 Unprocessable Entity` in this case with the following response:


        ```json

        {
          "errors": [
            "Your card was declined. This transaction requires 3D secure authentication."
          ],
          "gateway_payment_id": "pi_1F0aGoJ2UDb3Q4av7zU3sHPh",
          "description": "This card requires 3D secure authentication. Redirect the customer to the URL from the action_link attribute to authenticate. Attach callback_url param to this URL if you want to be notified about the result of 3D Secure authentication. Attach redirect_url param to this URL if you want to redirect a customer back to your page after 3D Secure authentication. Example: https://mysite.chargify.com/3d-secure/pi_1FCm4RKDeye4C0XfbqquXRYm?one_time_token_id=128&callback_url=https://localhost:4000&redirect_url=https://yourpage.com will do a POST request to https://localhost:4000 after payment is authenticated and will redirect a customer to https://yourpage.com after 3DS authentication.",
          "action_link": "http://acme.chargify.com/3d-secure/pi_1F0aGoJ2UDb3Q4av7zU3sHPh?one_time_token_id=242"
        }

        ```


        To let the customer go through 3D Secure Authentication, they need to be redirected to the URL specified in `action_link`.

        Optionally, you can specify `callback_url` parameter in the `action_link` URL if you’d like to be notified about the result of 3D Secure Authentication. The `callback_url` will return the following information:


        - whether the authentication was successful (`success`)

        - the gateway ID for the payment (`gateway_payment_id`)

        - the subscription ID (`subscription_id`)


        Lastly, you can also specify a `redirect_url` within the `action_link` URL if you’d like to redirect a customer back to your site.


        It is not possible to use `action_link` in an iframe inside a custom application. You have to redirect the customer directly to the `action_link`, then, to be notified about the result, use `redirect_url` or `callback_url`.


        The final URL that you send a customer to to complete 3D Secure may resemble the following, where the first half is the `action_link` and the second half contains a `redirect_url` and `callback_url`: `https://mysite.chargify.com/3d-secure/pi_1FCm4RKDeye4C0XfbqquXRYm?one_time_token_id=128&callback_url=https://localhost:4000&redirect_url=https://yourpage.com`


        ## 3D Secure - Checkout


        It may happen that a payment needs 3D Secure Authentication when the subscription is created; this is referred to in our help docs as a [post-authentication flow](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405177432077#psd2-flows-pre-authentication-and-post-authentication). The server returns `422 Unprocessable Entity` in this case with the following response:


        ```json

        {
          "errors": [
            "Your card was declined. This transaction requires 3D secure authentication."
          ],
          "gateway_payment_id": "pay_6gjofv7dlyrkpizlolsuspvtiu",
          "description": "This card requires 3D secure authentication. Redirect the customer to the URL from the action_link attribute to authenticate. Attach callback_url param to this URL if you want to be notified about the result of 3D Secure authentication. Attach redirect_url param to this URL if you want to redirect a customer back to your page after 3D Secure authentication. Example: https://mysite.chargify.com/3d-secure/pay_6gjofv7dlyrkpizlolsuspvtiu?one_time_token_id=123&callback_url=https://localhost:4000&redirect_url=https://yourpage.com will do a POST request to https://localhost:4000 after payment is authenticated and will redirect a customer to https://yourpage.com after 3DS authentication.",
          "action_link": "http://mysite.chargify.com/3d-secure/pay_6gjofv7dlyrkpizlolsuspvtiu?one_time_token_id=123"
        }

        ```


        To let the customer go through 3D Secure Authentication, they need to be redirected to the URL specified in `action_link`.

        Optionally, you can specify `callback_url` parameter in the `action_link` URL if you’d like to be notified about the result of 3D Secure Authentication. The `callback_url` will return the following information:


        - whether the authentication was successful (`success`)

        - the gateway ID for the payment (`gateway_payment_id`)

        - the subscription ID (`subscription_id`)


        Lastly, you can also specify a `redirect_url` parameter within the `action_link` URL if you’d like to redirect a customer back to your site.


        It is not possible to use `action_link` in an iframe inside a custom application. You have to redirect the customer directly to the `action_link`, then, to be notified about the result, use `redirect_url` or `callback_url`.


        The final URL that you send a customer to complete 3D Secure may resemble the following, where the first half is the `action_link` and the second half contains a `redirect_url` and `callback_url`: `https://mysite.chargify.com/3d-secure/pay_6gjofv7dlyrkpizlolsuspvtiu?one_time_token_id=123&callback_url=https://localhost:4000&redirect_url=https://yourpage.com`


        ### Example Redirect Flow


        You may wish to redirect customers to different pages depending on whether their SCA was performed successfully. Here's an example flow to use as a reference:


        1. Create a subscription via API; it requires 3DS

        2. You receive a `gateway_payment_id` in the `action_link` along other params in the response.

        3. Use this `gateway_payment_id` to, for example, connect with your internal resources or generate a session_id

        4. Include 1 of those attributes inside the `callback_url` and `redirect_url` to be aware which “session” this applies to

        5. Redirect the customer to the `action_link` with `callback_url` and `redirect_url` applied

        6. After the customer finishes 3DS authentication, we let you know the result by making a request to applied `callback_url`.

        7. After that, we redirect the customer to the `redirect_url`; at this point the result of authentication is known

        8. Optionally, you can use the applied "msg" param in the `redirect_url` to determine whether it was successful or not


        ## Subscriptions Import


        Subscriptions can be “imported” via the API to handle the following scenarios:


        + You already have existing subscriptions with specific start and renewal dates that you would like to import to Chargify

        + You already have credit cards stored in your provider’s vault and you would like to create subscriptions using those tokens


        Before importing, you should have already set up your products to match your offerings. Then, you can create Subscriptions via the API just like you normally would, but using a few special attributes.


        Full documentation on how import Subscriptions using the **import tool** in the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404863655821#imports-0-0).


        ### Important Notices and Disclaimers regarding Imports


        Before performing a bulk import of subscriptions via the API, we suggest reading the [Subscriptions Import](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404863655821#important-notices-and-disclaimers) instructions to understand the repurcussions of a large import.


        ### Subscription Input Attributes


        The following _additional_ attributes to the subscription input attributes make imports possible: `next_billing_at`, `previous_billing_at`, and `import_mrr`.


        ### Current Vault


        If you are using a Legacy gateway such as "eWAY Rapid (Legacy)" or "Stripe (Legacy)" then please contact Support for further instructions on subscription imports.


        ### Braintree Blue (Braintree v2) Imports


        Braintree Blue is Braintree’s newer (version 2) API. For this gateway, please provide the `vault_token` parameter with the value from Braintree’s “Customer ID” rather than the “Payment Profile Token”. At this time we do not use `current_vault_token` with the Braintree Blue gateway, and we only support a single payment profile per Braintree Customer.


        When importing PayPal type payment profiles, please set `payment_type` to `paypal_account`.


        ### Stripe ACH Imports


        If the bank account has already been verified, currently you will need to create the customer, create the payment profile in Chargify - setting verified=true, then create a subscription using the customer_id and payment_profile_id.


        ### Webhooks During Import


        If no `next_billing_at` is provided, webhooks will be fired as normal. If you do set a future `next_billing_at`, only a subset of the webhooks are fired when the subscription is created. Keep reading for more information as to what webhooks will be fired under which scenarios.


        #### Successful creation with Billing Date


        Scenario: If `next_billing_at` provided


        + `signup_success`

        + `billing_date_change`


        #### Successful creation without Billing Date


        Scenario: If no `next_billing_at` provided


        + `signup_success`

        + `payment_success`


        #### Unsuccessful creation


        Scenario: If card can’t be charged, and no `next_billing_at` provided


        + signup_failure


        #### Webhooks fired when next_billing_at is reached:


        + `renewal_success or renewal_failure`

        + `payment_success or payment_failure`


        ### Date and Time Formats


        We will attempt to parse any string you send as the value of next_billing_at in to a date or time. For best results, use a known format like described in “Date and Time Specification” of RFC 2822 or ISO 8601 .


        The following are all equivalent and will work as input to `next_billing_at`:


        ```

        Aug 06 2030 11:34:00 -0400

        Aug 06 2030 11:34 -0400

        2030-08-06T11:34:00-04:00

        8/6/2030 11:34:00 EDT

        8/6/2030 8:34:00 PDT

        2030-08-06T15:34:00Z

        ```

        You may also pass just a date, in which case we will assume the time to be noon


        ```

        2010-08-06

        ```


        ## Subscription Hierarchies & WhoPays


        When subscription groups were first added to our Relationship Invoicing architecture, to group together invoices for related subscriptions and allow for complex customer hierarchies and WhoPays scenarios, they were designed to consist of a primary and a collection of group members. The primary would control many aspects of the group, such as when the consolidated invoice is generated. As of today, groups still function this way.


        In the future, the concept of a "primary" will be removed in order to offer more flexibility into group management and reduce confusion concerning what actions must be done on a primary level, rather than a member level.


        We have introduced a two scheme system as a bridge between these two group organizations. Scheme 1, which is relevant to all subscription groups today, marks the group as being "ruled" by a primary.


        When reading a subscription via API, they will return a top-level attribute called `group`, which will denote which scheme is being used. At this time, the `scheme` attribute will always be 1.


        ### Subscription in a Customer Hierarchy


        For sites making use of the [Relationship Billing](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405078794253-Introduction-to-Invoices) and [Customer Hierarchy](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404900384141) features, it is possible to create subscriptions within a customer hierarchy.  This can be achieved through the API by passing group parameters in the **Create Subscription** request.


        + The `group` parameters are optional and consist of the required `target` and optional `billing` parameters.


        When the `target` parameter specifies a customer that is already part of a hierarchy, the new subscription will become a member of the customer hierarchy as well.  If the target customer is not part of a hierarchy, a new customer hierarchy will be created and both the target customer and the new subscription will become part of the hierarchy with the specified target customer set as the responsible payer for the hierarchy's subscriptions.


        Rather than specifying a customer, the `target` parameter could instead simply have a value of `self` which indicates the subscription will be paid for not by some other customer, but by the subscribing customer.  This will be true whether the customer is being created new, is already part of a hierarchy, or already exists outside a hierarchy.  A valid payment method must also be specified in the subscription parameters.


        Note that when creating subscriptions in a customer hierarchy, if the customer hierarchy does not already have a payment method, passing valid credit card attributes in the subscription parameters will also result in the payment method being established as the default payment method for the customer hierarchy irrespective of the responsible payer.


        The optional `billing` parameters specify how some aspects of the billing for the new subscription should be handled.  Rather than capturing payment immediately, the `accrue` parameter can be included so that the new subscription charges accrue until the next assessment date.  Regarding the date, the `align_date` parameter can be included so that the billing date of the new subscription matches up with the default subscription group in the customer hierarchy.  When choosing to align the dates, the `prorate` parameter can also be specified so that the new subscription charges are prorated based on the billing period of the default subscription group in the customer hierarchy also.


        ### Subscription in a Subscription Group


        For sites making use of [Relationship Billing](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405078794253-Introduction-to-Invoices) it may be desireable to create a subscription as part of a [subscription group](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405577356173) in order to rely on [invoice consolidation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404980119949). This can be achieved through the API by passing group parameters in the Create Subscription request.  The `group` parameters are optional and consist of the required `target` and optional `billing` parameters.


        The `target` parameters specify an existing subscription with which the newly created subscription should be grouped.  If the target subscription is already part of a group, the new subscription will become a member of the group as well.  If the target subscription is not part of a group, a new group will be created and both the target and the new subscription will become part of the group with the target as the group's primary subscription.


        The optional `billing` parameters specify how some aspects of the billing for the new subscription should be handled.  Rather than capturing payment immediately, the `accrue` parameter can be included so that the new subscription charges accrue until the next assessment date.  Regarding the date, the `align_date` parameter can be included so that the billing date of the new subscription matches up with the target subscription.  When choosing to align the dates, the `prorate` parameter can also be specified so that the new subscription charges are prorated based on the billing period of the target subscription also.


        ## Providing Agreement Acceptance Params


        It is possible to provide a proof of customer's acceptance of terms and policies.

        We will be storing this proof in case it might be required (i.e. chargeback).

        Currently, we already keep it for subscriptions created via Public Signup Pages.

        In order to create a subscription with the proof of agreement acceptance, you must provide additional parameters `agreement acceptance` with `ip_address` and at least one url to the policy that was accepted: `terms_url` or `privacy_policy_url`. Additional urls that can be provided: `return_refund_policy_url`, `delivery_policy_url` and

        `secure_checkout_policy_url`.


        ```json
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "agreement_acceptance": {
              "ip_address": "1.2.3.4",
              "terms_url": "https://terms.url",
              "privacy_policy_url": "https://privacy_policy.url",
              "return_refund_policy_url": "https://return_refund_policy.url",
              "delivery_policy_url": "https://delivery_policy.url",
              "secure_checkout_policy_url": "https://secure_checkout_policy.url"
            }
          }
        }

        ```


        **For Maxio Payments subscriptions, the agreement acceptance params are required, with at least terms_url provided.**


        ## Providing ACH Agreement params


        It is also possible to provide a proof that a customer authorized ACH agreement terms.

        The proof will be stored and the email will be sent to the customer with a copy of the terms (if enabled).

        In order to create a subscription with the proof of authorized ACH agreement terms, you must provide the additional parameter `ach_agreement` with the following nested parameters: `agreement_terms`, `authorizer_first_name`, `authorizer_last_name` and `ip_address`.

        Each of them is required.


        ```json
          "subscription": {
            "product_handle": "gold-product",
            "customer_attributes": {
              "first_name": "Jane",
              "last_name": "Doe",
              "email": "jd@chargify.test"
            },
            "bank_account_attributes": {
              "bank_name": "Test Bank",
              "bank_routing_number": "021000089",
              "bank_account_number": "111111111111",
              "bank_account_type": "checking",
              "bank_account_holder_type": "business",
              "payment_type": "bank_account"
            },
            "ach_agreement": {
              "agreement_terms": "ACH agreement terms",
              "authorizer_first_name": "Jane",
              "authorizer_last_name": "Doe",
              "ip_address": "1.2.3.4"
            }
          }
        ```
      operationId: createSubscription
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionRequest'
              - examples:
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com","zip":"02120","state":"MA","reference":"XYZ","phone":"(617) 111 - 0000","organization":"Acme","country":"US","city":"Boston","address_2":null,"address":"123 Mass Ave."},"credit_card_attributes":{"last_name":"Smith","first_name":"Joe","full_number":"4111111111111111","expiration_year":"2021","expiration_month":"1","card_type":"visa","billing_zip":"02120","billing_state":"MA","billing_country":"US","billing_city":"Boston","billing_address_2":null,"billing_address":"123 Mass Ave."}}}'
                - '{"subscription":{"product_handle":"gold","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com","zip":"02120","state":"MA","reference":"XYZ","phone":"(617) 111 - 0000","organization":"Acme","country":"US","city":"Boston","address_2":null,"address":"123 Mass Ave."},"calendar_billing":{"snap_day":1,"calendar_billing_first_charge":"immediate"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"}}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe1049am@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"components":[{"component_id":195268,"unit_balance":20}]}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"components":[{"component_id":2500,"enabled":true}]}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Alysa","last_name":"Test","email":"alysa@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"components":[{"component_id":1,"allocated_quantity":18,"price_point_id":3}]}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"components":[{"component_id":"handle:my-handle","price_point_id":"handle:special-offer","allocated_quantity":14}]}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"coupon_code":"SUB111"}}'
                - '{"subscription":{"product_handle":"product-xyz","customer_id":43693465,"payment_profile_id":74404848,"group":{"target":{"type":"customer","id":43693465},"billing":{"align_date":true,"prorate":false,"accrue":false}}}}'
                - '{"subscription":{"product_handle":"test_product","customer_attributes":{"first_name":"Child who pays for self","last_name":"(No subscription group)","email":"joe@example.com","parent_id":23554144}}}'
                - '{"subscription":{"product_handle":"product","canceled_at":"2021-02-25T12:00:00-04:00","cancellation_message":"Too expensive","reason_code":"expensive","activated_at":"2021-01-17T12:00:00-04:00","customer_attributes":{"first_name":"Joe","last_name":"Test","email":"joetest@example.com"},"bank_account_attributes":{"bank_name":"My Bank","current_vault":"stripe_connect","vault_token":"1234"}}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"next_billing_at":"2020-06-01T12:00:00-04:00"}}'
                - '{"subscription":{"product_handle":"product","next_billing_at":"2020-08-29T12:00:00-04:00","customer_attributes":{"first_name":"John","last_name":"Doe","email":"john.doe@example.com"},"bank_account_attributes":{"bank_name":"My Bank","current_vault":"authorizenet","vault_token":"1234","customer_vault_token":"5678"}}}'
                - '{"subscription":{"product_handle":"product","next_billing_at":"2020-08-29T12:00:00-04:00","customer_attributes":{"first_name":"John","last_name":"Doe","email":"john.doe@example.com"},"bank_account_attributes":{"bank_name":"My Bank","current_vault":"stripe_connect","vault_token":"cus_abc123"}}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"metafields":{"color":"blue","comments":"Thanks!"}}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com","metafields":{"nickname":"Boris","language":"Spanish"}},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"}}}'
                - '{"subscription":{"offer_id":"handle:godfather","customer_attributes":{"first_name":"Alysa","last_name":"Test","email":"alysa@example.com"},"credit_card_attributes":{"full_number":"1","expiration_month":"10","expiration_year":"2020"}}}'
                - '{"subscription":{"product_handle":"basic","customer_id":12345,"payment_profile_id":6789,"payment_collection_method":"prepaid","prepaid_configuration":{"initial_funding_amount_in_cents":10000,"replenish_to_amount_in_cents":6000,"auto_replenish":true,"replenish_threshold_amount_in_cents":5000}}}'
                - '{"subscription":{"product_handle":"product-handle","ref":"1q2w3e","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"}}}'
                - '{"subscription":{"product_id":123,"custom_price":{"handle":"custom-price","price_in_cents":9900,"interval":1,"interval_unit":"month"},"components":[{"component_id":20,"allocated_quantity":10,"custom_price":{"pricing_scheme":"stairstep","prices":[{"unit_price":5,"starting_quantity":1,"ending_quantity":15},{"unit_price":2,"starting_quantity":16}]}},{"component_id":10,"enabled":true,"custom_price":{"prices":[{"unit_price":1,"starting_quantity":1}]}}]}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"credit_card_attributes":{"chargify_token":"tok_cwhvpfcnbtgkd8nfkzf9dnjn"},"agreement_acceptance":{"ip_address":"1.2.3.4","terms_url":"https://terms.url","privacy_policy_url":"https://privacy_policy.url","return_refund_policy_url":"https://return_refund_policy.url","delivery_policy_url":"https://delivery_policy_.url","secure_checkout_policy_url":"https://secure_checkout_policy.url"}}}'
                - '{"subscription":{"product_handle":"basic","customer_attributes":{"first_name":"Joe","last_name":"Blow","email":"joe@example.com"},"bank_account_attributes":{"bank_name":"Test Bank","bank_routing_number":"021000089","bank_account_number":"111111111111","bank_account_type":"checking","bank_account_holder_type":"business","payment_type":"bank_account"},"ach_agreement":{"agreement_terms":"ACH agreement terms","authorizer_first_name":"Jane","authorizer_last_name":"Doe","ip_address":"1.2.3.4"}}}'
              contentMediaType: application/json
            examples:
              Basic:
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                      zip: '02120'
                      state: MA
                      reference: XYZ
                      phone: (617) 111 - 0000
                      organization: Acme
                      country: US
                      city: Boston
                      address_2: null
                      address: 123 Mass Ave.
                    credit_card_attributes:
                      last_name: Smith
                      first_name: Joe
                      full_number: '4111111111111111'
                      expiration_year: '2021'
                      expiration_month: '1'
                      card_type: visa
                      billing_zip: '02120'
                      billing_state: MA
                      billing_country: US
                      billing_city: Boston
                      billing_address_2: null
                      billing_address: 123 Mass Ave.
              Calendar Billing:
                value:
                  subscription:
                    product_handle: gold
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                      zip: '02120'
                      state: MA
                      reference: XYZ
                      phone: (617) 111 - 0000
                      organization: Acme
                      country: US
                      city: Boston
                      address_2: null
                      address: 123 Mass Ave.
                    calendar_billing:
                      snap_day: 1
                      calendar_billing_first_charge: immediate
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
              Components (Metered):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe1049am@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    components:
                    - component_id: 195268
                      unit_balance: 20
              Components (On/Off):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    components:
                    - component_id: 2500
                      enabled: true
              Components (Quantity-Based):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Alysa
                      last_name: Test
                      email: alysa@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    components:
                    - component_id: 1
                      allocated_quantity: 18
                      price_point_id: 3
              Components By Handle (Quantity-Based):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    components:
                    - component_id: handle:my-handle
                      price_point_id: handle:special-offer
                      allocated_quantity: 14
              With Coupon:
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    coupon_code: SUB111
              Grouped:
                value:
                  subscription:
                    product_handle: product-xyz
                    customer_id: 43693465
                    payment_profile_id: 74404848
                    group:
                      target:
                        type: customer
                        id: 43693465
                      billing:
                        align_date: true
                        prorate: false
                        accrue: false
              In Hierarchy (not Group):
                value:
                  subscription:
                    product_handle: test_product
                    customer_attributes:
                      first_name: Child who pays for self
                      last_name: (No subscription group)
                      email: joe@example.com
                      parent_id: 23554144
              Import as Canceled:
                value:
                  subscription:
                    product_handle: product
                    canceled_at: 2021-02-25T12:00:00-04:00
                    cancellation_message: Too expensive
                    reason_code: expensive
                    activated_at: 2021-01-17T12:00:00-04:00
                    customer_attributes:
                      first_name: Joe
                      last_name: Test
                      email: joetest@example.com
                    bank_account_attributes:
                      bank_name: My Bank
                      current_vault: stripe_connect
                      vault_token: '1234'
              Import With Future Billing Date:
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    next_billing_at: 2020-06-01T12:00:00-04:00
              Import Authorize.Net ACH:
                value:
                  subscription:
                    product_handle: product
                    next_billing_at: 2020-08-29T12:00:00-04:00
                    customer_attributes:
                      first_name: John
                      last_name: Doe
                      email: john.doe@example.com
                    bank_account_attributes:
                      bank_name: My Bank
                      current_vault: authorizenet
                      vault_token: '1234'
                      customer_vault_token: '5678'
              Import Stripe ACH:
                value:
                  subscription:
                    product_handle: product
                    next_billing_at: 2020-08-29T12:00:00-04:00
                    customer_attributes:
                      first_name: John
                      last_name: Doe
                      email: john.doe@example.com
                    bank_account_attributes:
                      bank_name: My Bank
                      current_vault: stripe_connect
                      vault_token: cus_abc123
              Metadata (Subscription-Level):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    metafields:
                      color: blue
                      comments: Thanks!
              Metadata (Customer-Level):
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                      metafields:
                        nickname: Boris
                        language: Spanish
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
              With Offer:
                value:
                  subscription:
                    offer_id: handle:godfather
                    customer_attributes:
                      first_name: Alysa
                      last_name: Test
                      email: alysa@example.com
                    credit_card_attributes:
                      full_number: '1'
                      expiration_month: '10'
                      expiration_year: '2020'
              Prepaid Subscription:
                value:
                  subscription:
                    product_handle: basic
                    customer_id: 12345
                    payment_profile_id: 6789
                    payment_collection_method: prepaid
                    prepaid_configuration:
                      initial_funding_amount_in_cents: 10000
                      replenish_to_amount_in_cents: 6000
                      auto_replenish: true
                      replenish_threshold_amount_in_cents: 5000
              With Referral Code:
                value:
                  subscription:
                    product_handle: product-handle
                    ref: 1q2w3e
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
              With Custom Pricing:
                value:
                  subscription:
                    product_id: 123
                    custom_price:
                      handle: custom-price
                      price_in_cents: 9900
                      interval: 1
                      interval_unit: month
                    components:
                    - component_id: 20
                      allocated_quantity: 10
                      custom_price:
                        pricing_scheme: stairstep
                        prices:
                        - unit_price: 5
                          starting_quantity: 1
                          ending_quantity: 15
                        - unit_price: 2
                          starting_quantity: 16
                    - component_id: 10
                      enabled: true
                      custom_price:
                        prices:
                        - unit_price: 1
                          starting_quantity: 1
              With Agreement Acceptance:
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    credit_card_attributes:
                      chargify_token: tok_cwhvpfcnbtgkd8nfkzf9dnjn
                    agreement_acceptance:
                      ip_address: 1.2.3.4
                      terms_url: https://terms.url
                      privacy_policy_url: https://privacy_policy.url
                      return_refund_policy_url: https://return_refund_policy.url
                      delivery_policy_url: https://delivery_policy_.url
                      secure_checkout_policy_url: https://secure_checkout_policy.url
              With ACH Agreement:
                value:
                  subscription:
                    product_handle: basic
                    customer_attributes:
                      first_name: Joe
                      last_name: Blow
                      email: joe@example.com
                    bank_account_attributes:
                      bank_name: Test Bank
                      bank_routing_number: '021000089'
                      bank_account_number: '111111111111'
                      bank_account_type: checking
                      bank_account_holder_type: business
                      payment_type: bank_account
                    ach_agreement:
                      agreement_terms: ACH agreement terms
                      authorizer_first_name: Jane
                      authorizer_last_name: Doe
                      ip_address: 1.2.3.4
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 15236915
                      state: active
                      balance_in_cents: 0
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 7
                      current_period_ends_at: 2016-11-15T14:48:10-05:00
                      next_assessment_at: 2016-11-15T14:48:10-05:00
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-14T14:48:12-05:00
                      expires_at: null
                      created_at: 2016-11-14T14:48:10-05:00
                      updated_at: 2016-11-14T15:24:41-05:00
                      cancellation_message: null
                      cancellation_method: merchant_api
                      cancel_at_end_of_period: null
                      canceled_at: null
                      current_period_started_at: 2016-11-14T14:48:10-05:00
                      previous_state: active
                      signup_payment_id: 162269766
                      signup_revenue: '260.00'
                      delayed_cancel_at: null
                      coupon_code: 5SNN6HFK3GBH
                      payment_collection_method: automatic
                      snap_day: null
                      reason_code: null
                      receives_invoice_emails: false
                      customer:
                        first_name: Curtis
                        last_name: Test
                        email: curtis@example.com
                        cc_emails: jeff@example.com
                        organization: ''
                        reference: null
                        id: 14714298
                        created_at: 2016-11-14T14:48:10-05:00
                        updated_at: 2016-11-14T14:48:13-05:00
                        address: 123 Anywhere Street
                        address_2: ''
                        city: Boulder
                        state: CO
                        zip: '80302'
                        country: US
                        phone: ''
                        verified: false
                        portal_customer_created_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_sent_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_accepted_at: null
                        tax_exempt: false
                        vat_number: '012345678'
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        expiration_interval: null
                        expiration_interval_unit: never
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        initial_charge_after_trial: false
                        return_params: ''
                        request_credit_card: false
                        require_credit_card: false
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        archived_at: null
                        update_return_url: ''
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          handle: billing-plans
                          accounting_code: null
                          description: ''
                        public_signup_pages:
                        - id: 281054
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                        taxable: false
                        version_number: 7
                        product_price_point_name: Default
                      credit_card:
                        id: 10191713
                        payment_type: credit_card
                        first_name: Curtis
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2026
                        billing_address: 123 Anywhere Street
                        billing_address_2: ''
                        billing_city: Boulder
                        billing_state: null
                        billing_country: ''
                        billing_zip: '80302'
                        current_vault: bogus
                        vault_token: '1'
                        customer_vault_token: null
                        customer_id: 14714298
                      payment_type: credit_card
                      referral_code: w7kjc9
                      next_product_id: null
                      coupon_use_count: 1
                      coupon_uses_allowed: 1
                      next_product_handle: null
                      stored_credential_transaction_id: 125566112256688
                      dunning_communication_delay_enabled: true
                      dunning_communication_delay_time_zone: Eastern Time (US & Canada)
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 15236915
                      state: active
                      balance_in_cents: 0
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 7
                      current_period_ends_at: 2016-11-15T14:48:10-05:00
                      next_assessment_at: 2016-11-15T14:48:10-05:00
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-14T14:48:12-05:00
                      expires_at: null
                      created_at: 2016-11-14T14:48:10-05:00
                      updated_at: 2016-11-14T15:24:41-05:00
                      cancellation_message: null
                      cancellation_method: merchant_api
                      cancel_at_end_of_period: null
                      canceled_at: null
                      current_period_started_at: 2016-11-14T14:48:10-05:00
                      previous_state: active
                      signup_payment_id: 162269766
                      signup_revenue: '260.00'
                      delayed_cancel_at: null
                      coupon_code: 5SNN6HFK3GBH
                      payment_collection_method: automatic
                      snap_day: null
                      reason_code: null
                      receives_invoice_emails: false
                      customer:
                        first_name: Curtis
                        last_name: Test
                        email: curtis@example.com
                        cc_emails: jeff@example.com
                        organization: ''
                        reference: null
                        id: 14714298
                        created_at: 2016-11-14T14:48:10-05:00
                        updated_at: 2016-11-14T14:48:13-05:00
                        address: 123 Anywhere Street
                        address_2: ''
                        city: Boulder
                        state: CO
                        zip: '80302'
                        country: US
                        phone: ''
                        verified: false
                        portal_customer_created_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_sent_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_accepted_at: null
                        tax_exempt: false
                        vat_number: '012345678'
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        expiration_interval: null
                        expiration_interval_unit: never
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        initial_charge_after_trial: false
                        return_params: ''
                        request_credit_card: false
                        require_credit_card: false
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        archived_at: null
                        update_return_url: ''
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          handle: billing-plans
                          accounting_code: null
                          description: ''
                        public_signup_pages:
                        - id: 281054
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                        taxable: false
                        version_number: 7
                        product_price_point_name: Default
                      credit_card:
                        id: 10191713
                        payment_type: credit_card
                        first_name: Curtis
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2026
                        billing_address: 123 Anywhere Street
                        billing_address_2: ''
                        billing_city: Boulder
                        billing_state: null
                        billing_country: ''
                        billing_zip: '80302'
                        current_vault: bogus
                        vault_token: '1'
                        customer_vault_token: null
                        customer_id: 14714298
                      payment_type: credit_card
                      referral_code: w7kjc9
                      next_product_id: null
                      coupon_use_count: 1
                      coupon_uses_allowed: 1
                      next_product_handle: null
                      stored_credential_transaction_id: 125566112256688
                      dunning_communication_delay_enabled: true
                      dunning_communication_delay_time_zone: Eastern Time (US & Canada)
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Bank routing number: cannot be blank.'
                    - 'Bank account number: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Bank routing number: cannot be blank.'
                    - 'Bank account number: cannot be blank.'
      deprecated: false
    get:
      tags:
      - Subscriptions
      summary: listSubscriptions
      description: >-
        This method will return an array of subscriptions from a Site. Pay close attention to query string filters and pagination in order to control responses from the server.


        ## Search for a subscription


        Use the query strings below to search for a subscription using the criteria available. The return value will be an array.


        ## Self-Service Page token


        Self-Service Page token for the subscriptions is not returned by default. If this information is desired, the include[]=self_service_page_token parameter must be provided with the request.
      operationId: listSubscriptions
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: state
        in: query
        description: The current state of the subscription
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStateFilter'
          - description: The current state of the subscription
      - name: product
        in: query
        description: The product id of the subscription. (Note that the product handle cannot be used.)
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: product_price_point_id
        in: query
        description: The ID of the product price point. If supplied, product is required
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon
        in: query
        description: The numeric id of the coupon currently applied to the subscription. (This can be found in the URL when editing a coupon. Note that the coupon code cannot be used.)
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: date_field
        in: query
        description: "The type of filter you'd like to apply to your search.  Allowed Values: , current_period_ends_at, current_period_starts_at, created_at, activated_at, canceled_at, expires_at, trial_started_at, trial_ended_at, updated_at"
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionDateField'
          - description: "The type of filter you'd like to apply to your search.  Allowed Values: , current_period_ends_at, current_period_starts_at, created_at, activated_at, canceled_at, expires_at, trial_started_at, trial_ended_at, updated_at"
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns subscriptions with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. Use in query `start_date=2022-07-01`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2022-07-01
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns subscriptions with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. Use in query `end_date=2022-08-01`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2022-08-01
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns subscriptions with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of start_date. Use in query `start_datetime=2022-07-01 09:00:05`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2022-07-01 09:00:05
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns subscriptions with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site's time zone will be used. If provided, this parameter will be used instead of end_date. Use in query `end_datetime=2022-08-01 10:00:05`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date-time
          examples:
          - 2022-08-01 10:00:05
      - name: metadata
        in: query
        description: The value of the metadata field specified in the parameter. Use in query `metadata[my-field]=value&metadata[other-field]=another_value`.
        style: form
        explode: true
        schema:
          type: object
          additionalProperties:
            type: string
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      - name: sort
        in: query
        description: The attribute by which to sort
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionSort'
          - description: The attribute by which to sort
      - name: include[]
        in: query
        description: 'Allows including additional data in the response. Use in query: `include[]=self_service_page_token`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionListInclude'
          examples:
          - - self_service_page_token
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResponse'
                description: ''
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}.json:
    put:
      tags:
      - Subscriptions
      summary: updateSubscription
      description: >-
        The subscription endpoint allows you to instantly update one or many attributes about a subscription in a single call.


        ## Update Subscription Payment Method


        Change the card that your Subscriber uses for their subscription. You can also use this method to simply change the expiration date of the card **if your gateway allows**.


        Note that partial card updates for **Authorize.Net** are not allowed via this endpoint. The existing Payment Profile must be directly updated instead.


        You also use this method to change the subscription to a different product by setting a new value for product_handle. A product change can be done in two different ways, **product change** or **delayed product change**.


        ## Product Change


        This endpoint may be used to change a subscription's product. The new payment amount is calculated and charged at the normal start of the next period. If you desire complex product changes or prorated upgrades and downgrades instead, please see the documentation on Migrating Subscription Products.


        To perform a product change, simply set either the `product_handle` or `product_id` attribute to that of a different product from the same site as the subscription. You can also change the price point by passing in either `product_price_point_id` or `product_price_point_handle` - otherwise the new product's default price point will be used.


        ### Delayed Product Change


        This method also changes the product and/or price point, and the new payment amount is calculated and charged at the normal start of the next period.


        This method schedules the product change to happen automatically at the subscription’s next renewal date. To perform a Delayed Product Change, set the `product_handle` attribute as you would in a regular product change, but also set the `product_change_delayed` attribute to `true`. No proration applies in this case.


        You can also perform a delayed change to the price point by passing in either `product_price_point_id` or `product_price_point_handle`


        **Note: To cancel a delayed product change, set `next_product_id` to an empty string.**


        ## Billing Date Changes


        ### Regular Billing Date Changes


        Send the `next_billing_at` to set the next billing date for the subscription. After that date passes and the subscription is processed, the following billing date will be set according to the subscription's product period.


        Note that if you pass an invalid date, we will automatically interpret and set the correct date. For example, when February 30 is entered, the next billing will be set to March 2nd in a non-leap year.


        The server response will not return data under the key/value pair of `next_billing`. Please view the key/value pair of `current_period_ends_at` to verify that the `next_billing` date has been changed successfully.


        ### Snap Day Changes


        For a subscription using Calendar Billing, setting the next billing date is a bit different. Send the `snap_day` attribute to change the calendar billing date for **a subscription using a product eligible for calendar billing**.


        Note: If you change the product associated with a subscription that contains a `snap_date` and immediately `READ/GET` the subscription data, it will still contain evidence of the existing `snap_date`. This is due to the fact that a product change is instantanous and only affects the product associated with a subscription. After the `next_billing` date arrives, the `snap_day` associated with the subscription will return to `null.` Another way of looking at this is that you willl have to wait for the next billing cycle to arrive before the `snap_date` will reset to `null`.
      operationId: updateSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSubscriptionRequest'
              - examples:
                - '{"subscription":{"credit_card_attributes":{"full_number":"4111111111111111","expiration_month":"10","expiration_year":"2030"},"next_billing_at":"2010-08-06T15:34:00Z"}}'
                - '{"subscription":{"product_id":123,"custom_price":{"price_in_cents":9900,"interval":1,"interval_unit":"month"},"components":[{"component_id":20,"custom_price":{"pricing_scheme":"stairstep","prices":[{"unit_price":"5","starting_quantity":"1","ending_quantity":"15"},{"unit_price":"2","starting_quantity":"16"}]}},{"component_id":10,"custom_price":{"prices":[{"unit_price":"1","starting_quantity":"1"}]}}]}}'
              contentMediaType: application/json
            examples:
              Example:
                value:
                  subscription:
                    credit_card_attributes:
                      full_number: '4111111111111111'
                      expiration_month: '10'
                      expiration_year: '2030'
                    next_billing_at: 2010-08-06T15:34:00Z
              With Custom Pricing:
                value:
                  subscription:
                    product_id: 123
                    custom_price:
                      price_in_cents: 9900
                      interval: 1
                      interval_unit: month
                    components:
                    - component_id: 20
                      custom_price:
                        pricing_scheme: stairstep
                        prices:
                        - unit_price: '5'
                          starting_quantity: '1'
                          ending_quantity: '15'
                        - unit_price: '2'
                          starting_quantity: '16'
                    - component_id: 10
                      custom_price:
                        prices:
                        - unit_price: '1'
                          starting_quantity: '1'
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      receives_invoice_emails: false
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      receives_invoice_emails: false
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Payment collection method cannot be set to 'invoice' when the subscription is past due
                    - "'expires_at' cannot be set for subscriptions on calendar billing"
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Payment collection method cannot be set to 'invoice' when the subscription is past due
                    - "'expires_at' cannot be set for subscriptions on calendar billing"
      deprecated: false
    get:
      tags:
      - Subscriptions
      summary: readSubscription
      description: >-
        Use this endpoint to find subscription details.


        ## Self-Service Page token


        Self-Service Page token for the subscription is not returned by default. If this information is desired, the include[]=self_service_page_token parameter must be provided with the request.
      operationId: readSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: include[]
        in: query
        description: 'Allows including additional data in the response. Use in query: `include[]=coupons&include[]=self_service_page_token`.'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionInclude'
          examples:
          - - coupons
            - self_service_page_token
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 15236915
                      state: active
                      balance_in_cents: 0
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 7
                      current_period_ends_at: 2016-11-15T14:48:10-05:00
                      next_assessment_at: 2016-11-15T14:48:10-05:00
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-14T14:48:12-05:00
                      expires_at: null
                      created_at: 2016-11-14T14:48:10-05:00
                      updated_at: 2016-11-14T15:24:41-05:00
                      cancellation_message: null
                      cancellation_method: null
                      cancel_at_end_of_period: null
                      canceled_at: null
                      current_period_started_at: 2016-11-14T14:48:10-05:00
                      previous_state: active
                      signup_payment_id: 162269766
                      signup_revenue: '260.00'
                      delayed_cancel_at: null
                      coupon_code: 5SNN6HFK3GBH
                      payment_collection_method: automatic
                      snap_day: null
                      reason_code: null
                      receives_invoice_emails: false
                      net_terms: 0
                      customer:
                        first_name: Curtis
                        last_name: Test
                        email: curtis@example.com
                        cc_emails: jeff@example.com
                        organization: ''
                        reference: null
                        id: 14714298
                        created_at: 2016-11-14T14:48:10-05:00
                        updated_at: 2016-11-14T14:48:13-05:00
                        address: 123 Anywhere Street
                        address_2: ''
                        city: Boulder
                        state: CO
                        zip: '80302'
                        country: US
                        phone: ''
                        verified: false
                        portal_customer_created_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_sent_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_accepted_at: null
                        tax_exempt: false
                        vat_number: '012345678'
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        expiration_interval: null
                        expiration_interval_unit: never
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        initial_charge_after_trial: false
                        return_params: ''
                        request_credit_card: false
                        require_credit_card: false
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        archived_at: null
                        update_return_url: ''
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          handle: billing-plans
                          accounting_code: null
                          description: ''
                        public_signup_pages:
                        - id: 281054
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                        taxable: false
                        version_number: 7
                        product_price_point_name: Default
                      credit_card:
                        id: 10191713
                        payment_type: credit_card
                        first_name: Curtis
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2026
                        billing_address: 123 Anywhere Street
                        billing_address_2: ''
                        billing_city: Boulder
                        billing_state: null
                        billing_country: ''
                        billing_zip: '80302'
                        current_vault: bogus
                        vault_token: '1'
                        customer_vault_token: null
                        customer_id: 14714298
                      payment_type: credit_card
                      referral_code: w7kjc9
                      next_product_id: null
                      coupon_use_count: 1
                      coupon_uses_allowed: 1
                      stored_credential_transaction_id: 166411599220288
                      on_hold_at: null
                      scheduled_cancellation_at: 2016-11-14T14:48:13-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 15236915
                      state: active
                      balance_in_cents: 0
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 7
                      current_period_ends_at: 2016-11-15T14:48:10-05:00
                      next_assessment_at: 2016-11-15T14:48:10-05:00
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-14T14:48:12-05:00
                      expires_at: null
                      created_at: 2016-11-14T14:48:10-05:00
                      updated_at: 2016-11-14T15:24:41-05:00
                      cancellation_message: null
                      cancellation_method: null
                      cancel_at_end_of_period: null
                      canceled_at: null
                      current_period_started_at: 2016-11-14T14:48:10-05:00
                      previous_state: active
                      signup_payment_id: 162269766
                      signup_revenue: '260.00'
                      delayed_cancel_at: null
                      coupon_code: 5SNN6HFK3GBH
                      payment_collection_method: automatic
                      snap_day: null
                      reason_code: null
                      receives_invoice_emails: false
                      net_terms: 0
                      customer:
                        first_name: Curtis
                        last_name: Test
                        email: curtis@example.com
                        cc_emails: jeff@example.com
                        organization: ''
                        reference: null
                        id: 14714298
                        created_at: 2016-11-14T14:48:10-05:00
                        updated_at: 2016-11-14T14:48:13-05:00
                        address: 123 Anywhere Street
                        address_2: ''
                        city: Boulder
                        state: CO
                        zip: '80302'
                        country: US
                        phone: ''
                        verified: false
                        portal_customer_created_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_sent_at: 2016-11-14T14:48:13-05:00
                        portal_invite_last_accepted_at: null
                        tax_exempt: false
                        vat_number: '012345678'
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        expiration_interval: null
                        expiration_interval_unit: never
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        initial_charge_after_trial: false
                        return_params: ''
                        request_credit_card: false
                        require_credit_card: false
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        archived_at: null
                        update_return_url: ''
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          handle: billing-plans
                          accounting_code: null
                          description: ''
                        public_signup_pages:
                        - id: 281054
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                        taxable: false
                        version_number: 7
                        product_price_point_name: Default
                      credit_card:
                        id: 10191713
                        payment_type: credit_card
                        first_name: Curtis
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2026
                        billing_address: 123 Anywhere Street
                        billing_address_2: ''
                        billing_city: Boulder
                        billing_state: null
                        billing_country: ''
                        billing_zip: '80302'
                        current_vault: bogus
                        vault_token: '1'
                        customer_vault_token: null
                        customer_id: 14714298
                      payment_type: credit_card
                      referral_code: w7kjc9
                      next_product_id: null
                      coupon_use_count: 1
                      coupon_uses_allowed: 1
                      stored_credential_transaction_id: 166411599220288
                      on_hold_at: null
                      scheduled_cancellation_at: 2016-11-14T14:48:13-05:00
      deprecated: false
    delete:
      tags:
      - Subscription Status
      summary: cancelSubscription
      description: The DELETE action causes the cancellation of the Subscription. This means, the method sets the Subscription state to "canceled".
      operationId: cancelSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CancellationRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 15254809
                      state: canceled
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-15T15:33:44-05:00
                      created_at: 2016-11-15T15:33:44-05:00
                      updated_at: 2016-11-15T17:13:06-05:00
                      expires_at: null
                      balance_in_cents: 0
                      current_period_ends_at: 2017-08-29T12:00:00-04:00
                      next_assessment_at: 2017-08-29T12:00:00-04:00
                      canceled_at: 2016-11-15T17:13:06-05:00
                      cancellation_message: Canceling the subscription via the API
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: merchant_api
                      current_period_started_at: 2016-11-15T15:33:44-05:00
                      previous_state: active
                      signup_payment_id: 0
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 1000
                      product_version_number: 7
                      payment_type: credit_card
                      referral_code: tg8qbq
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      customer:
                        id: 14731081
                        first_name: John
                        last_name: Doe
                        organization: Acme Widgets
                        email: john.doe@example.com
                        created_at: 2016-11-15T15:33:44-05:00
                        updated_at: 2016-11-15T15:33:45-05:00
                        reference: '123'
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: 2016-11-15T15:33:45-05:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2016-11-15T15:33:45-05:00
                        cc_emails: null
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        request_credit_card: false
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        initial_charge_after_trial: false
                        version_number: 7
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          description: ''
                          handle: billing-plans
                          accounting_code: null
                        public_signup_pages:
                        - id: 281054
                          return_url: http://www.example.com?successfulsignup
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                      credit_card:
                        id: 10202898
                        first_name: John
                        last_name: Doe
                        masked_card_number: XXXX-XXXX-XXXX-1111
                        card_type: visa
                        expiration_month: 12
                        expiration_year: 2020
                        customer_id: 14731081
                        current_vault: authorizenet
                        vault_token: '12345'
                        billing_address: null
                        billing_city: null
                        billing_state: null
                        billing_zip: null
                        billing_country: null
                        customer_vault_token: '67890'
                        billing_address_2: null
                        payment_type: credit_card
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 15254809
                      state: canceled
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2016-11-15T15:33:44-05:00
                      created_at: 2016-11-15T15:33:44-05:00
                      updated_at: 2016-11-15T17:13:06-05:00
                      expires_at: null
                      balance_in_cents: 0
                      current_period_ends_at: 2017-08-29T12:00:00-04:00
                      next_assessment_at: 2017-08-29T12:00:00-04:00
                      canceled_at: 2016-11-15T17:13:06-05:00
                      cancellation_message: Canceling the subscription via the API
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: merchant_api
                      current_period_started_at: 2016-11-15T15:33:44-05:00
                      previous_state: active
                      signup_payment_id: 0
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 1000
                      product_version_number: 7
                      payment_type: credit_card
                      referral_code: tg8qbq
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      customer:
                        id: 14731081
                        first_name: John
                        last_name: Doe
                        organization: Acme Widgets
                        email: john.doe@example.com
                        created_at: 2016-11-15T15:33:44-05:00
                        updated_at: 2016-11-15T15:33:45-05:00
                        reference: '123'
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: 2016-11-15T15:33:45-05:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2016-11-15T15:33:45-05:00
                        cc_emails: null
                      product:
                        id: 3792003
                        name: $10 Basic Plan
                        handle: basic
                        description: lorem ipsum
                        accounting_code: basic
                        request_credit_card: false
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2016-03-24T13:38:39-04:00
                        updated_at: 2016-11-03T13:03:05-04:00
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: day
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        initial_charge_after_trial: false
                        version_number: 7
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          description: ''
                          handle: billing-plans
                          accounting_code: null
                        public_signup_pages:
                        - id: 281054
                          return_url: http://www.example.com?successfulsignup
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/kqvmfrbgd89q/basic
                        - id: 281240
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/dkffht5dxfd8/basic
                        - id: 282694
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/jwffwgdd95s8/basic
                      credit_card:
                        id: 10202898
                        first_name: John
                        last_name: Doe
                        masked_card_number: XXXX-XXXX-XXXX-1111
                        card_type: visa
                        expiration_month: 12
                        expiration_year: 2020
                        customer_id: 14731081
                        current_vault: authorizenet
                        vault_token: '12345'
                        billing_address: null
                        billing_city: null
                        billing_state: null
                        billing_zip: null
                        billing_country: null
                        customer_vault_token: '67890'
                        billing_address_2: null
                        payment_type: credit_card
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - $ref: '#/components/schemas/SingleErrorResponse1'
                examples:
                - '{"error":"The subscription is already canceled"}'
                - '{"errors":["reason_code size cannot be greater than 255","cancellation_message size cannot be greater than 65535"]}'
                - '{"errors":["subscription must be an Object"]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    error: The subscription is already canceled
                Example-2:
                  value:
                    errors:
                    - reason_code size cannot be greater than 255
                    - cancellation_message size cannot be greater than 65535
                Example-3:
                  value:
                    errors:
                    - subscription must be an Object
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/override.json:
    put:
      tags:
      - Subscriptions
      summary: overrideSubscription
      description: >-
        This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.


        This endpoint is provided for cases where you need to “align” Chargify data with data that happened in your system, perhaps before you started using Chargify. For example, you may choose to import your historical subscription data, and would like the activation and cancellation dates in Chargify to match your existing historical dates. Chargify does not backfill historical events (i.e. from the Events API), but some static data can be changed via this API.


        Why are some fields only settable from this endpoint, and not the normal subscription create and update endpoints? Because we want users of this endpoint to be aware that these fields are usually managed by Chargify, and using this API means **you are stepping out on your own.**


        Changing these fields will not affect any other attributes. For example, adding an expiration date will not affect the next assessment date on the subscription.


        If you regularly need to override the current_period_starts_at for new subscriptions, this can also be accomplished by setting both `previous_billing_at` and `next_billing_at` at subscription creation. See the documentation on [Importing Subscriptions](./b3A6MTQxMDgzODg-create-subscription#subscriptions-import) for more information.


        ## Limitations


        When passing `current_period_starts_at` some validations are made:


        1. The subscription needs to be unbilled (no statements or invoices).

        2. The value passed must be a valid date/time. We recommend using the iso 8601 format.

        3. The value passed must be before the current date/time.


        If unpermitted parameters are sent, a 400 HTTP response is sent along with a string giving the reason for the problem.
      operationId: overrideSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: Only these fields are available to be set.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/OverrideSubscriptionRequest'
              - description: Only these fields are available to be set.
                examples:
                - subscription:
                    activated_at: 1999-12-01T10:28:34-05:00
                    canceled_at: 2000-12-31T10:28:34-05:00
                    cancellation_message: Original cancellation in 2000
                    expires_at: 2001-07-15T10:28:34-05:00
              contentMediaType: application/json
            examples:
              Example:
                value:
                  subscription:
                    activated_at: 1999-12-01T10:28:34-05:00
                    canceled_at: 2000-12-31T10:28:34-05:00
                    cancellation_message: Original cancellation in 2000
                    expires_at: 2001-07-15T10:28:34-05:00
        required: false
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleErrorResponse1'
                - examples:
                  - error: 'Current period starts at: must be a valid date/time'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    error: 'Current period starts at: must be a valid date/time'
      deprecated: false
    parameters: []
  /subscriptions/lookup.json:
    get:
      tags:
      - Subscriptions
      summary: readSubscriptionByReference
      description: Use this endpoint to find a subscription by its reference.
      operationId: readSubscriptionByReference
      parameters:
      - name: reference
        in: query
        description: Subscription reference
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/purge.json:
    post:
      tags:
      - Subscriptions
      summary: purgeSubscription
      description: >-
        For sites in test mode, you may purge individual subscriptions.


        Provide the subscription ID in the url.  To confirm, supply the customer ID in the query string `ack` parameter. You may also delete the customer record and/or payment profiles by passing `cascade` parameters. For example, to delete just the customer record, the query params would be: `?ack={customer_id}&cascade[]=customer`


        If you need to remove subscriptions from a live site, please contact support to discuss your use case.


        ### Delete customer and payment profile


        The query params will be: `?ack={customer_id}&cascade[]=customer&cascade[]=payment_profile`
      operationId: purgeSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: ack
        in: query
        description: id of the customer.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: cascade[]
        in: query
        description: >-
          Options are "customer" or "payment_profile".

          Use in query: `cascade[]=customer&cascade[]=payment_profile`.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPurgeType'
          examples:
          - - customer
            - payment_profile
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/prepaid_configurations.json:
    post:
      tags:
      - Subscriptions
      summary: createPrepaidSubscription
      description: Use this endpoint to update a subscription's prepaid configuration.
      operationId: createPrepaidSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpsertPrepaidConfigurationRequest'
              - examples:
                - prepaid_configuration:
                    initial_funding_amount_in_cents: 50000
                    replenish_to_amount_in_cents: 50000
                    auto_replenish: true
                    replenish_threshold_amount_in_cents: 10000
              contentMediaType: application/json
            examples:
              Example:
                value:
                  prepaid_configuration:
                    initial_funding_amount_in_cents: 50000
                    replenish_to_amount_in_cents: 50000
                    auto_replenish: true
                    replenish_threshold_amount_in_cents: 10000
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PrepaidConfigurationResponse'
                - examples:
                  - prepaid_configuration:
                      id: 55
                      initial_funding_amount_in_cents: 2500
                      auto_replenish: true
                      replenish_to_amount_in_cents: 50000
                      replenish_threshold_amount_in_cents: 10000
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    prepaid_configuration:
                      id: 55
                      initial_funding_amount_in_cents: 2500
                      auto_replenish: true
                      replenish_to_amount_in_cents: 50000
                      replenish_threshold_amount_in_cents: 10000
      deprecated: false
    parameters: []
  /subscriptions/preview.json:
    post:
      tags:
      - Subscriptions
      summary: previewSubscription
      description: >-
        The Chargify API allows you to preview a subscription by POSTing the same JSON or XML as for a subscription creation.


        The "Next Billing" amount and "Next Billing" date are represented in each Subscriber's Summary. For more information, please see our documentation [here](https://chargify.zendesk.com/hc/en-us/articles/4407884887835#next-billing).


        ## Side effects


        A subscription will not be created by sending a POST to this endpoint. It is meant to serve as a prediction.


        ## Taxable Subscriptions


        This endpoint will preview taxes applicable to a purchase. In order for taxes to be previewed, the following conditions must be met:


        + Taxes must be configured on the subscription

        + The preview must be for the purchase of a taxable product or component, or combination of the two.

        + The subscription payload must contain a full billing or shipping address in order to calculate tax


        For more information about creating taxable previews, please see our documentation guide on how to create [taxable subscriptions.](https://chargify.zendesk.com/hc/en-us/articles/4407904217755#creating-taxable-subscriptions)


        You do **not** need to include a card number to generate tax information when you are previewing a subscription. However, please note that when you actually want to create the subscription, you must include the credit card information if you want the billing address to be stored in Chargify. The billing address and the credit card information are stored together within the payment profile object. Also, you may not send a billing address to Chargify without payment profile information, as the address is stored on the card.


        You can pass shipping and billing addresses and still decide not to calculate taxes. To do that, pass `skip_billing_manifest_taxes: true` attribute.


        ## Non-taxable Subscriptions


        If you'd like to calculate subscriptions that do not include tax, please feel free to leave off the billing information.
      operationId: previewSubscription
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionRequest'
              - examples:
                - '{"subscription":{"product_handle":"gold-product"}}'
                - '{"subscription":{"product_handle":"gold-product","coupon_code":"1DOLLAR","components":[{"component_id":462149,"price_point_id":200543,"allocated_quantity":14},{"component_id":426665,"unit_balance":20},{"component_id":426670,"allocated_quantity":1}]}}'
                - '{"subscription":{"product_handle":"paid-annual-seats","customer_attributes":{"address":"870 Massachusetts Ave","address_2":null,"city":"Boston","state":"MA","zip":"02118","country":"US"}}}'
                - '{"subscription":{"product_handle":"paid-annual-seats","credit_card_attributes":{"billing_address":"870 Massachusetts Ave","billing_address_2":null,"billing_city":"Boston","billing_state":"MA","billing_zip":"02118","billing_country":"US"}}}'
                - '{"subscription":{"product_id":1234,"custom_price":{"price_in_cents":9900,"interval":1,"interval_unit":"month"},"components":[{"component_id":20,"allocated_quantity":10,"custom_price":{"pricing_scheme":"stairstep","prices":[{"unit_price":5,"starting_quantity":1,"ending_quantity":15},{"unit_price":2,"starting_quantity":16}]}},{"component_id":10,"enabled":true,"custom_price":{"prices":[{"unit_price":1,"starting_quantity":1}]}}]}}'
              contentMediaType: application/json
            examples:
              Product Only:
                value:
                  subscription:
                    product_handle: gold-product
              With Components:
                value:
                  subscription:
                    product_handle: gold-product
                    coupon_code: 1DOLLAR
                    components:
                    - component_id: 462149
                      price_point_id: 200543
                      allocated_quantity: 14
                    - component_id: 426665
                      unit_balance: 20
                    - component_id: 426670
                      allocated_quantity: 1
              With Custom Taxes:
                value:
                  subscription:
                    product_handle: paid-annual-seats
                    customer_attributes:
                      address: 870 Massachusetts Ave
                      address_2: null
                      city: Boston
                      state: MA
                      zip: '02118'
                      country: US
              With Avalara Taxes:
                value:
                  subscription:
                    product_handle: paid-annual-seats
                    credit_card_attributes:
                      billing_address: 870 Massachusetts Ave
                      billing_address_2: null
                      billing_city: Boston
                      billing_state: MA
                      billing_zip: '02118'
                      billing_country: US
              With Custom Pricing:
                value:
                  subscription:
                    product_id: 1234
                    custom_price:
                      price_in_cents: 9900
                      interval: 1
                      interval_unit: month
                    components:
                    - component_id: 20
                      allocated_quantity: 10
                      custom_price:
                        pricing_scheme: stairstep
                        prices:
                        - unit_price: 5
                          starting_quantity: 1
                          ending_quantity: 15
                        - unit_price: 2
                          starting_quantity: 16
                    - component_id: 10
                      enabled: true
                      custom_price:
                        prices:
                        - unit_price: 1
                          starting_quantity: 1
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionPreviewResponse'
                - examples:
                  - subscription_preview:
                      current_billing_manifest:
                        line_items:
                        - transaction_type: charge
                          kind: baseline
                          amount_in_cents: 5000
                          memo: Gold Product (08/21/2018 - 09/21/2018)
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          product_id: 1
                          product_handle: gold-product
                          product_name: Gold Product
                          period_range_start: 13 Oct 2023
                          period_range_end: 13 Nov 2023
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 28000
                          memo: 'Component name: 14 Unit names'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 462149
                          component_handle: handle
                          component_name: Component name
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 2000
                          memo: 'Fractional Metered Components: 20.0 Fractional Metereds'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426665
                          component_handle: handle
                          component_name: Fractional Metered Components
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 0
                          memo: On/Off Component
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426670
                          component_handle: handle
                          component_name: On/Off Component
                        - transaction_type: adjustment
                          kind: coupon
                          amount_in_cents: 0
                          memo: 'Coupon: 1DOLLAR - You only get $1.00 off'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                        total_in_cents: 35000
                        total_discount_in_cents: 0
                        total_tax_in_cents: 0
                        subtotal_in_cents: 35000
                        start_date: 2018-08-21T21:25:21Z
                        end_date: 2018-09-21T21:25:21Z
                        period_type: recurring
                        existing_balance_in_cents: 0
                      next_billing_manifest:
                        line_items:
                        - transaction_type: charge
                          kind: baseline
                          amount_in_cents: 5000
                          memo: Gold Product (09/21/2018 - 10/21/2018)
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          product_id: 1
                          product_handle: gold-product
                          product_name: Gold Product
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 28000
                          memo: 'Component name: 14 Unit names'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 462149
                          component_handle: handle
                          component_name: Component name
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 0
                          memo: On/Off Component
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426670
                          component_handle: handle
                          component_name: On/Off Component
                        total_in_cents: 33000
                        total_discount_in_cents: 0
                        total_tax_in_cents: 0
                        subtotal_in_cents: 33000
                        start_date: 2018-09-21T21:25:21Z
                        end_date: 2018-10-21T21:25:21Z
                        period_type: recurring
                        existing_balance_in_cents: 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription_preview:
                      current_billing_manifest:
                        line_items:
                        - transaction_type: charge
                          kind: baseline
                          amount_in_cents: 5000
                          memo: Gold Product (08/21/2018 - 09/21/2018)
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          product_id: 1
                          product_handle: gold-product
                          product_name: Gold Product
                          period_range_start: 13 Oct 2023
                          period_range_end: 13 Nov 2023
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 28000
                          memo: 'Component name: 14 Unit names'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 462149
                          component_handle: handle
                          component_name: Component name
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 2000
                          memo: 'Fractional Metered Components: 20.0 Fractional Metereds'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426665
                          component_handle: handle
                          component_name: Fractional Metered Components
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 0
                          memo: On/Off Component
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426670
                          component_handle: handle
                          component_name: On/Off Component
                        - transaction_type: adjustment
                          kind: coupon
                          amount_in_cents: 0
                          memo: 'Coupon: 1DOLLAR - You only get $1.00 off'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                        total_in_cents: 35000
                        total_discount_in_cents: 0
                        total_tax_in_cents: 0
                        subtotal_in_cents: 35000
                        start_date: 2018-08-21T21:25:21Z
                        end_date: 2018-09-21T21:25:21Z
                        period_type: recurring
                        existing_balance_in_cents: 0
                      next_billing_manifest:
                        line_items:
                        - transaction_type: charge
                          kind: baseline
                          amount_in_cents: 5000
                          memo: Gold Product (09/21/2018 - 10/21/2018)
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          product_id: 1
                          product_handle: gold-product
                          product_name: Gold Product
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 28000
                          memo: 'Component name: 14 Unit names'
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 462149
                          component_handle: handle
                          component_name: Component name
                        - transaction_type: charge
                          kind: component
                          amount_in_cents: 0
                          memo: On/Off Component
                          discount_amount_in_cents: 0
                          taxable_amount_in_cents: 0
                          component_id: 426670
                          component_handle: handle
                          component_name: On/Off Component
                        total_in_cents: 33000
                        total_discount_in_cents: 0
                        total_tax_in_cents: 0
                        subtotal_in_cents: 33000
                        start_date: 2018-09-21T21:25:21Z
                        end_date: 2018-10-21T21:25:21Z
                        period_type: recurring
                        existing_balance_in_cents: 0
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/add_coupon.json:
    post:
      tags:
      - Subscriptions
      summary: applyCouponToSubscription
      description: >-
        An existing subscription can accommodate multiple discounts/coupon codes. This is only applicable if each coupon is stackable. For more information on stackable coupons, we recommend reviewing our [coupon documentation.](https://chargify.zendesk.com/hc/en-us/articles/4407755909531#stackable-coupons)


        ## Query Parameters vs Request Body Parameters


        Passing in a coupon code as a query parameter will add the code to the subscription, completely replacing all existing coupon codes on the subscription.


        For this reason, using this query parameter on this endpoint has been deprecated in favor of using the request body parameters as described below. When passing in request body parameters, the list of coupon codes will simply be added to any existing list of codes on the subscription.
      operationId: applyCouponToSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: code
        in: query
        description: A code for the coupon that would be applied to a subscription
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          deprecated: true
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddCouponsRequest'
              - examples:
                - codes:
                  - COUPON_1
                  - COUPON_2
              contentMediaType: application/json
            examples:
              Example:
                value:
                  codes:
                  - COUPON_1
                  - COUPON_2
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 21607180
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-04-20T14:20:57-05:00
                      created_at: 2018-04-20T14:20:57-05:00
                      updated_at: 2018-05-11T13:53:44-05:00
                      expires_at: null
                      balance_in_cents: 49000
                      current_period_ends_at: 2018-05-12T11:33:03-05:00
                      next_assessment_at: 2018-05-12T11:33:03-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: remittance
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2018-05-11T11:33:03-05:00
                      previous_state: active
                      signup_payment_id: 237154761
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: COUPONA
                      total_revenue_in_cents: 52762
                      product_price_in_cents: 100000
                      product_version_number: 2
                      payment_type: credit_card
                      referral_code: x45nc8
                      coupon_use_count: 0
                      coupon_uses_allowed: 1
                      reason_code: null
                      automatically_resume_at: null
                      coupon_codes:
                      - COUPONA
                      - COUPONB
                      customer:
                        id: 21259051
                        first_name: K
                        last_name: C
                        organization: ''
                        email: example@chargify.com
                        created_at: 2018-04-20T14:20:57-05:00
                        updated_at: 2018-04-23T15:29:28-05:00
                        reference: null
                        address: ''
                        address_2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                        phone: ''
                        portal_invite_last_sent_at: 2018-04-20T14:20:59-05:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2018-04-20T14:20:59-05:00
                        cc_emails: ''
                        tax_exempt: false
                      product:
                        id: 4581816
                        name: Basic
                        handle: basic
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-11-02T15:00:11-05:00
                        updated_at: 2018-04-10T09:02:59-05:00
                        price_in_cents: 100000
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: 100000
                        trial_price_in_cents: 1000
                        trial_interval: 10
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 2
                        update_return_params: ''
                        product_family:
                          id: 1025627
                          name: My Product Family
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 333589
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic
                        - id: 335926
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic
                        - id: 345555
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic
                        - id: 345556
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic
                      credit_card:
                        id: 14839830
                        first_name: John
                        last_name: Doe
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2028
                        customer_id: 21259051
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: null
                        billing_city: null
                        billing_state: null
                        billing_zip: '99999'
                        billing_country: null
                        customer_vault_token: null
                        billing_address_2: null
                        payment_type: credit_card
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 21607180
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-04-20T14:20:57-05:00
                      created_at: 2018-04-20T14:20:57-05:00
                      updated_at: 2018-05-11T13:53:44-05:00
                      expires_at: null
                      balance_in_cents: 49000
                      current_period_ends_at: 2018-05-12T11:33:03-05:00
                      next_assessment_at: 2018-05-12T11:33:03-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: remittance
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2018-05-11T11:33:03-05:00
                      previous_state: active
                      signup_payment_id: 237154761
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: COUPONA
                      total_revenue_in_cents: 52762
                      product_price_in_cents: 100000
                      product_version_number: 2
                      payment_type: credit_card
                      referral_code: x45nc8
                      coupon_use_count: 0
                      coupon_uses_allowed: 1
                      reason_code: null
                      automatically_resume_at: null
                      coupon_codes:
                      - COUPONA
                      - COUPONB
                      customer:
                        id: 21259051
                        first_name: K
                        last_name: C
                        organization: ''
                        email: example@chargify.com
                        created_at: 2018-04-20T14:20:57-05:00
                        updated_at: 2018-04-23T15:29:28-05:00
                        reference: null
                        address: ''
                        address_2: ''
                        city: ''
                        state: ''
                        zip: ''
                        country: ''
                        phone: ''
                        portal_invite_last_sent_at: 2018-04-20T14:20:59-05:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2018-04-20T14:20:59-05:00
                        cc_emails: ''
                        tax_exempt: false
                      product:
                        id: 4581816
                        name: Basic
                        handle: basic
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-11-02T15:00:11-05:00
                        updated_at: 2018-04-10T09:02:59-05:00
                        price_in_cents: 100000
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: 100000
                        trial_price_in_cents: 1000
                        trial_interval: 10
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 2
                        update_return_params: ''
                        product_family:
                          id: 1025627
                          name: My Product Family
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 333589
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/hbwtd98j3hk2/basic
                        - id: 335926
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/g366zy67c7rm/basic
                        - id: 345555
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/txqyyqk7d8rz/basic
                        - id: 345556
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargifypay.com/subscribe/2zss3qpf4249/basic
                      credit_card:
                        id: 14839830
                        first_name: John
                        last_name: Doe
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2028
                        customer_id: 21259051
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: null
                        billing_city: null
                        billing_state: null
                        billing_zip: '99999'
                        billing_country: null
                        customer_vault_token: null
                        billing_address_2: null
                        payment_type: credit_card
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionAddCouponError1'
                - examples:
                  - "{\"coupon_codes\":[\"Coupon Codes: 'COUPONA' - That coupon is not stackable\",\"Coupon Codes: 'COUPONB' - That coupon is not stackable\"],\"subscription\":[\"Coupon is invalid.\"]}"
                  - "{\"coupon_code\":[\"Coupon Codes: 'COUPONA' - Coupon code could not be found.\"],\"subscription\":[\"Coupon is invalid.\"]}"
                  - '{"codes":["Coupon Codes: Subscription already has at least one non-stackable coupon."],"subscription":["Coupon is invalid."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    coupon_codes:
                    - "Coupon Codes: 'COUPONA' - That coupon is not stackable"
                    - "Coupon Codes: 'COUPONB' - That coupon is not stackable"
                    subscription:
                    - Coupon is invalid.
                Example-2:
                  value:
                    coupon_code:
                    - "Coupon Codes: 'COUPONA' - Coupon code could not be found."
                    subscription:
                    - Coupon is invalid.
                Example-3:
                  value:
                    codes:
                    - 'Coupon Codes: Subscription already has at least one non-stackable coupon.'
                    subscription:
                    - Coupon is invalid.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/remove_coupon.json:
    delete:
      tags:
      - Subscriptions
      summary: deleteCouponFromSubscription
      description: >-
        Use this endpoint to remove a coupon from an existing subscription.


        For more information on the expected behaviour of removing a coupon from a subscription, please see our documentation [here.](https://chargify.zendesk.com/hc/en-us/articles/4407896488987#removing-a-coupon)
      operationId: deleteCouponFromSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: coupon_code
        in: query
        description: The coupon code
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: string
                examples:
                - Coupon successfully removed
                contentMediaType: application/json
              examples:
                Example:
                  value: Coupon successfully removed
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionRemoveCouponErrors1'
                - examples:
                  - subscription:
                    - There's no coupon applied to this subscription
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                    - There's no coupon applied to this subscription
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/activate.json:
    put:
      tags:
      - Subscriptions
      summary: activateSubscription
      description: >
        Chargify offers the ability to activate awaiting signup and trialing subscriptions. This feature is only available on the Relationship Invoicing architecture. Subscriptions in a group may not be activated immediately.


        For details on how the activation works, and how to activate subscriptions through the application, see [activation](#).


        The `revert_on_failure` parameter controls the behavior upon activation failure.

        - If set to `true` and something goes wrong i.e. payment fails, then Chargify will not change the subscription's state. The subscription’s billing period will also remain the same.

        - If set to `false` and something goes wrong i.e. payment fails, then Chargify will continue through with the activation and enter an end of life state. For trialing subscriptions, that will either be trial ended (if the trial is no obligation), past due (if the trial has an obligation), or canceled (if the site has no dunning strategy, or has a strategy that says to cancel immediately). For awaiting signup subscriptions, that will always be canceled.


        The default activation failure behavior can be configured per activation attempt, or you may set a default value under Config > Settings > Subscription Activation Settings.


        ## Activation Scenarios


        ### Activate Awaiting Signup subscription


        - Given you have a product without trial

        - Given you have a site without dunning strategy


        ```mermaid
          flowchart LR
            AS[Awaiting Signup] --> A{Activate}
            A -->|Success| Active
            A -->|Failure| ROF{revert_on_failure}
            ROF -->|true| AS
            ROF -->|false| Canceled
        ```


        - Given you have a product with trial

        - Given you have a site with dunning strategy


        ```mermaid
          flowchart LR
            AS[Awaiting Signup] --> A{Activate}
            A -->|Success| Trialing
            A -->|Failure| ROF{revert_on_failure}
            ROF -->|true| AS
            ROF -->|false| PD[Past Due]
        ```


        ### Activate Trialing subscription


        You can read more about the behavior of trialing subscriptions [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404494617357#trialing-subscriptions-0-0).

        When the `revert_on_failure` parameter is set to `true`, the subscription's state will remain as Trialing, we will void the invoice from activation and return any prepayments and credits applied to the invoice back to the subscription.
      operationId: activateSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ActivateSubscriptionRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorArrayMapResponse1'
                - examples:
                  - errors:
                      base:
                      - Purchase Declined. The subscription is now in the 'awaiting_signup' state.
                contentMediaType: application/json
              examples:
                Generic error:
                  value:
                    errors:
                      base:
                      - Purchase Declined. The subscription is now in the 'awaiting_signup' state.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/components/{component_id}.json:
    get:
      tags:
      - Subscription Components
      summary: readSubscriptionComponent
      description: This request will list information regarding a specific component owned by a subscription.
      operationId: readSubscriptionComponent
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component. Alternatively, the component's handle prefixed by `handle:`
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionComponentResponse'
                - examples:
                  - component:
                      component_id: 193028
                      subscription_id: 14593192
                      allocated_quantity: 1
                      pricing_scheme: per_unit
                      name: Users
                      kind: quantity_based_component
                      unit_name: Users
                      price_point_id: 1
                      price_point_handle: top-tier
                      enabled: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    component:
                      component_id: 193028
                      subscription_id: 14593192
                      allocated_quantity: 1
                      pricing_scheme: per_unit
                      name: Users
                      kind: quantity_based_component
                      unit_name: Users
                      price_point_id: 1
                      price_point_handle: top-tier
                      enabled: true
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/components.json:
    get:
      tags:
      - Subscription Components
      summary: listSubscriptionComponents
      description: >-
        This request will list a subscription's applied components.


        ## Archived Components


        When requesting to list components for a given subscription, if the subscription contains **archived** components they will be listed in the server response.
      operationId: listSubscriptionComponents
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: date_field
        in: query
        description: The type of filter you'd like to apply to your search. Use in query `date_field=updated_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionListDateField'
          - description: The type of filter you'd like to apply to your search. Use in query `date_field=updated_at`.
            examples:
            - updated_at
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of end_date.
        style: form
        explode: true
        schema:
          type: string
      - name: price_point_ids
        in: query
        description: Allows fetching components allocation only if price point id is present. Use in query `price_point_ids=not_null`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: Allows fetching components allocation only if price point id is present. Use in query `price_point_ids=not_null`.
            examples:
            - not_null
      - name: product_family_ids
        in: query
        description: Allows fetching components allocation with matching product family id based on provided ids. Use in query `product_family_ids=1,2,3`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: sort
        in: query
        description: The attribute by which to sort. Use in query `sort=updated_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionComponentsSort'
          - description: The attribute by which to sort. Use in query `sort=updated_at`.
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of start_date.
        style: form
        explode: true
        schema:
          type: string
      - name: include
        in: query
        description: Allows including additional data in the response. Use in query `include=subscription`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionComponentsInclude'
          - description: Allows including additional data in the response. Use in query `include=subscription`.
            examples:
            - subscription
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching components allocation with matching use_site_exchange_rate based on provided value. Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      - name: filter[currencies]
        in: query
        description: Allows fetching components allocation with matching currency based on provided values. Use in query `filter[currencies]=EUR,USD`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - EUR
            - USD
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionComponentResponse'
                description: ''
                examples:
                - - component:
                      component_id: 0
                      subscription_id: 0
                      allocated_quantity: 0
                      pricing_scheme: per_unit
                      name: string
                      kind: quantity_based_component
                      unit_name: string
                      price_point_id: 0
                      price_point_handle: string
                      price_point_type: default
                      price_point_name: string
                      enabled: true
                      unit_balance: 0
                      id: 0
                      created_at: 2022-02-22T14:07:00-05:00
                      updated_at: 2022-02-22T14:07:00-05:00
                      component_handle: string
                      archived_at: string
                contentMediaType: application/json
              examples:
                example-1:
                  value:
                  - component:
                      component_id: 0
                      subscription_id: 0
                      allocated_quantity: 0
                      pricing_scheme: per_unit
                      name: string
                      kind: quantity_based_component
                      unit_name: string
                      price_point_id: 0
                      price_point_handle: string
                      price_point_type: default
                      price_point_name: string
                      enabled: true
                      unit_balance: 0
                      id: 0
                      created_at: 2022-02-22T14:07:00-05:00
                      updated_at: 2022-02-22T14:07:00-05:00
                      component_handle: string
                      archived_at: string
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/price_points.json:
    post:
      tags:
      - Subscription Components
      summary: updateSubscriptionComponentsPricePoints
      description: >-
        Updates the price points on one or more of a subscription's components.


        The `price_point` key can take either a:

        1. Price point id (integer)

        2. Price point handle (string)

        3. `"_default"` string, which will reset the price point to the component's current default price point.
      operationId: updateSubscriptionComponentsPricePoints
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BulkComponentsPricePointAssignment'
              - examples:
                - components:
                  - component_id: 997
                    price_point: 1022
                  - component_id: 998
                    price_point: wholesale-handle
                  - component_id: 999
                    price_point: _default
              contentMediaType: application/json
            examples:
              Example:
                value:
                  components:
                  - component_id: 997
                    price_point: 1022
                  - component_id: 998
                    price_point: wholesale-handle
                  - component_id: 999
                    price_point: _default
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BulkComponentsPricePointAssignment'
                - examples:
                  - components:
                    - component_id: 123
                      price_point: 456
                    - component_id: 789
                      price_point: 987
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    components:
                    - component_id: 123
                      price_point: 456
                    - component_id: 789
                      price_point: 987
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentPricePointError1'
                - examples:
                  - errors:
                    - component_id: 6474
                      price_point: 12140
                      message: Price Point does not belong to Component
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - component_id: 6474
                      price_point: 12140
                      message: Price Point does not belong to Component
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/price_points/reset.json:
    post:
      tags:
      - Subscription Components
      summary: resetSubscriptionComponentsPricePoints
      description: >-
        Resets all of a subscription's components to use the current default.


        **Note**: this will update the price point for all of the subscription's components, even ones that have not been allocated yet.
      operationId: resetSubscriptionComponentsPricePoints
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: -80293620
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2023-11-23T10:28:34-05:00
                      created_at: 2023-11-23T10:28:34-05:00
                      updated_at: 2023-11-23T10:28:34-05:00
                      expires_at: null
                      balance_in_cents: 50504234
                      current_period_ends_at: 2023-11-23T10:28:34-05:00
                      next_assessment_at: 2023-11-23T10:28:34-05:00
                      canceled_at: null
                      cancellation_message: lorem ipsum
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: remittance
                      snap_day: null
                      cancellation_method: dunning
                      current_period_started_at: 2023-11-23T10:28:34-05:00
                      previous_state: active
                      signup_payment_id: -45156092
                      signup_revenue: do aliquip ea
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: -49740952
                      product_price_in_cents: 87617888
                      product_version_number: 13656635
                      payment_type: null
                      referral_code: null
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: -26151968
                      customer:
                        id: 15208337
                        first_name: ipsum culpa in labore eiusmod
                        last_name: esse
                        organization: null
                        email: ex eiusmod
                        created_at: ad occaecat cillum
                        updated_at: ut aute proident est
                        reference: laboris ea cupidatat
                        address: null
                        address_2: null
                        city: id eiusmod proident
                        state: magna eiusmod anim non
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: null
                        portal_invite_last_accepted_at: reprehenderit labore voluptate
                        portal_customer_created_at: nisi aute reprehenderit Excepteur Duis
                        cc_emails: eiusmod sunt
                        tax_exempt: true
                      product:
                        id: -74447756
                        name: eu mollit nulla ut aute
                        handle: esse dolor anim
                        description: Lorem ut et non
                        accounting_code: nisi
                        request_credit_card: false
                        expiration_interval: 1
                        expiration_interval_unit: day
                        created_at: 2022-11-23T10:28:34-05:00
                        updated_at: 2022-11-23T10:28:34-05:00
                        price_in_cents: -4151649
                        interval: 20680876
                        interval_unit: day
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: day
                        archived_at: null
                        require_credit_card: true
                        return_params: magna eu
                        taxable: true
                        update_return_url: exercitation in
                        tax_code: Excepteur aliqua sunt in
                        initial_charge_after_trial: true
                        version_number: 41642597
                        update_return_params: dolore labore
                        product_family:
                          id: -5356997
                          name: officia amet Lorem proident enim
                          description: Duis
                          handle: ea dolore dolore sunt
                          accounting_code: null
                        public_signup_pages: []
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: -80293620
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2023-11-23T10:28:34-05:00
                      created_at: 2023-11-23T10:28:34-05:00
                      updated_at: 2023-11-23T10:28:34-05:00
                      expires_at: null
                      balance_in_cents: 50504234
                      current_period_ends_at: 2023-11-23T10:28:34-05:00
                      next_assessment_at: 2023-11-23T10:28:34-05:00
                      canceled_at: null
                      cancellation_message: lorem ipsum
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: remittance
                      snap_day: null
                      cancellation_method: dunning
                      current_period_started_at: 2023-11-23T10:28:34-05:00
                      previous_state: active
                      signup_payment_id: -45156092
                      signup_revenue: do aliquip ea
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: -49740952
                      product_price_in_cents: 87617888
                      product_version_number: 13656635
                      payment_type: null
                      referral_code: null
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: -26151968
                      customer:
                        id: 15208337
                        first_name: ipsum culpa in labore eiusmod
                        last_name: esse
                        organization: null
                        email: ex eiusmod
                        created_at: ad occaecat cillum
                        updated_at: ut aute proident est
                        reference: laboris ea cupidatat
                        address: null
                        address_2: null
                        city: id eiusmod proident
                        state: magna eiusmod anim non
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: null
                        portal_invite_last_accepted_at: reprehenderit labore voluptate
                        portal_customer_created_at: nisi aute reprehenderit Excepteur Duis
                        cc_emails: eiusmod sunt
                        tax_exempt: true
                      product:
                        id: -74447756
                        name: eu mollit nulla ut aute
                        handle: esse dolor anim
                        description: Lorem ut et non
                        accounting_code: nisi
                        request_credit_card: false
                        expiration_interval: 1
                        expiration_interval_unit: day
                        created_at: 2022-11-23T10:28:34-05:00
                        updated_at: 2022-11-23T10:28:34-05:00
                        price_in_cents: -4151649
                        interval: 20680876
                        interval_unit: day
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: day
                        archived_at: null
                        require_credit_card: true
                        return_params: magna eu
                        taxable: true
                        update_return_url: exercitation in
                        tax_code: Excepteur aliqua sunt in
                        initial_charge_after_trial: true
                        version_number: 41642597
                        update_return_params: dolore labore
                        product_family:
                          id: -5356997
                          name: officia amet Lorem proident enim
                          description: Duis
                          handle: ea dolore dolore sunt
                          accounting_code: null
                        public_signup_pages: []
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/components/{component_id}/allocations.json:
    post:
      tags:
      - Subscription Components
      summary: allocateComponent
      description: >-
        This endpoint creates a new allocation, setting the current allocated quantity for the Component and recording a memo.


        **Notice**: Allocations can only be updated for Quantity, On/Off, and Prepaid Components.


        ## Allocations Documentation


        Full documentation on how to record Allocations in the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997). It is focused on how allocations operate within the Chargify UI.It goes into greater detail on how the user interface will react when recording allocations.


        This documentation also goes into greater detail on how proration is taken into consideration when applying component allocations.


        ## Proration Schemes


        Changing the allocated quantity of a component mid-period can result in either a Charge or Credit being applied to the subscription. When creating an allocation via the API, you can pass the `upgrade_charge`, `downgrade_credit`, and `accrue_charge` to be applied.


        **Notice:** These proration and accural fields will be ignored for Prepaid Components since this component type always generate charges immediately without proration.


        For background information on prorated components and upgrade/downgrade schemes, see [Setting Component Allocations.](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997#proration-upgrades-vs-downgrades).

        See the tables below for valid values.


        | upgrade_charge | Definition                                                        |

        |----------------|-------------------------------------------------------------------|

        | `full`         | A charge is added for the full price of the component.            |

        | `prorated`     | A charge is added for the prorated price of the component change. |

        | `none`         | No charge is added.                                               |


        | downgrade_credit | Definition                                        |

        |------------------|---------------------------------------------------|

        | `full`           | A full price credit is added for the amount owed. |

        | `prorated`       | A prorated credit is added for the amount owed.   |

        | `none`           | No charge is added.                               |


        | accrue_charge | Definition                                                                                                 |

        |---------------|------------------------------------------------------------------------------------------------------------|

        | `true`        | Attempt to charge the customer at next renewal.                                                            |

        | `false`       | Attempt to charge the customer right away. If it fails, the charge will be accrued until the next renewal. |


        ### Order of Resolution for upgrade_charge and downgrade_credit


        1. Per allocation in API call (within a single allocation of the `allocations` array)

        2. [Component-level default value](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997-Component-Allocations#component-allocations-0-0)

        3. Allocation API call top level (outside of the `allocations` array)

        4. [Site-level default value](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997#proration-schemes)


        ### Order of Resolution for accrue charge


        1. Allocation API call top level (outside of the `allocations` array)

        2. [Site-level default value](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997#proration-schemes)


        **NOTE: Proration uses the current price of the component as well as the current tax rates. Changes to either may cause the prorated charge/credit to be wrong.**
      operationId: allocateComponent
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateAllocationRequest'
              - examples:
                - '{"allocation":{"quantity":5,"memo":"Recoding component purchase of Acme Support"}}'
                - '{"allocation":{"quantity":1,"memo":"Recoding component purchase of Acme Support"}}'
                - '{"allocation":{"quantity":0,"memo":"Recoding component purchase of Acme Support"}}'
              contentMediaType: application/json
            examples:
              Quantity Based:
                value:
                  allocation:
                    quantity: 5
                    memo: Recoding component purchase of Acme Support
              On/Off Component (Toggle On):
                value:
                  allocation:
                    quantity: 1
                    memo: Recoding component purchase of Acme Support
              On/Off Component (Toggle Off):
                value:
                  allocation:
                    quantity: 0
                    memo: Recoding component purchase of Acme Support
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AllocationResponse'
                - examples:
                  - allocation:
                      component_id: 4034995
                      subscription_id: 23737320
                      quantity: 3
                      previous_quantity: 2
                      memo: dolore cupidatat elit
                      timestamp: 2022-11-23T10:28:34-05:00
                      proration_upgrade_scheme: laboris ipsum dolore
                      proration_downgrade_scheme: eiusmod dolore
                      price_point_id: -69720370
                      previous_price_point_id: -76493052
                      accrue_charge: true
                      upgrade_charge: full
                      downgrade_credit: full
                      payment:
                        id: -44566528
                        amount_in_cents: 123
                        success: false
                        memo: aliqua
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    allocation:
                      component_id: 4034995
                      subscription_id: 23737320
                      quantity: 3
                      previous_quantity: 2
                      memo: dolore cupidatat elit
                      timestamp: 2022-11-23T10:28:34-05:00
                      proration_upgrade_scheme: laboris ipsum dolore
                      proration_downgrade_scheme: eiusmod dolore
                      price_point_id: -69720370
                      previous_price_point_id: -76493052
                      accrue_charge: true
                      upgrade_charge: full
                      downgrade_credit: full
                      payment:
                        id: -44566528
                        amount_in_cents: 123
                        success: false
                        memo: aliqua
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - One or more allocation changes are required.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - One or more allocation changes are required.
      deprecated: false
    get:
      tags:
      - Subscription Components
      summary: listAllocations
      description: >-
        This endpoint returns the 50 most recent Allocations, ordered by most recent first.


        ## On/Off Components


        When a subscription's on/off component has been toggled to on (`1`) or off (`0`), usage will be logged in this response.


        ## Querying data via Chargify gem


        You can also query the current quantity via the [official Chargify Gem.](http://github.com/chargify/chargify_api_ares)


        ```# First way

        component = Chargify::Subscription::Component.find(1, :params => {:subscription_id => 7})

        puts component.allocated_quantity

        # => 23


        # Second way

        component = Chargify::Subscription.find(7).component(1)

        puts component.allocated_quantity

        # => 23

        ```
      operationId: listAllocations
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocationResponse'
                description: ''
                examples:
                - - allocation:
                      memo: moving to 7
                      timestamp: 2012-11-20T22:00:37Z
                      quantity: 7
                      previous_quantity: 3
                      component_id: 11960
                      subscription_id: 2585595
                      proration_upgrade_scheme: no-prorate
                      proration_downgrade_scheme: no-prorate
                  - allocation:
                      memo: null
                      timestamp: 2012-11-20T21:48:09Z
                      quantity: 3
                      previous_quantity: 0
                      component_id: 11960
                      subscription_id: 2585595
                      proration_upgrade_scheme: no-prorate
                      proration_downgrade_scheme: no-prorate
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - allocation:
                      memo: moving to 7
                      timestamp: 2012-11-20T22:00:37Z
                      quantity: 7
                      previous_quantity: 3
                      component_id: 11960
                      subscription_id: 2585595
                      proration_upgrade_scheme: no-prorate
                      proration_downgrade_scheme: no-prorate
                  - allocation:
                      memo: null
                      timestamp: 2012-11-20T21:48:09Z
                      quantity: 3
                      previous_quantity: 0
                      component_id: 11960
                      subscription_id: 2585595
                      proration_upgrade_scheme: no-prorate
                      proration_downgrade_scheme: no-prorate
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'invalid page: 0'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'invalid page: 0'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/allocations.json:
    post:
      tags:
      - Subscription Components
      summary: allocateComponents
      description: >-
        Creates multiple allocations, setting the current allocated quantity for each of the components and recording a memo. The charges and/or credits that are created will be rolled up into a single total which is used to determine whether this is an upgrade or a downgrade. Be aware of the Order of Resolutions explained below in determining the proration scheme.


        A `component_id` is required for each allocation.


        This endpoint only responds to JSON. It is not available for XML.
      operationId: allocateComponents
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AllocateComponents'
              - examples:
                - proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  allocations:
                  - component_id: 123
                    quantity: 10
                    memo: foo
                  - component_id: 456
                    quantity: 5
                    memo: bar
              contentMediaType: application/json
            examples:
              Example:
                value:
                  proration_upgrade_scheme: prorate-attempt-capture
                  proration_downgrade_scheme: no-prorate
                  allocations:
                  - component_id: 123
                    quantity: 10
                    memo: foo
                  - component_id: 456
                    quantity: 5
                    memo: bar
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocationResponse'
                description: ''
                examples:
                - - allocation:
                      component_id: 193159
                      subscription_id: 15540611
                      quantity: 10
                      previous_quantity: 0
                      memo: foo
                      timestamp: 2016-12-08T19:09:15Z
                      proration_upgrade_scheme: prorate-attempt-capture
                      proration_downgrade_scheme: no-prorate
                      payment:
                        amount_in_cents: 1451
                        success: true
                        memo: 'Payment for: Prorated component allocation changes.'
                        id: 165473487
                  - allocation:
                      component_id: 277221
                      subscription_id: 15540611
                      quantity: 5
                      previous_quantity: 0
                      memo: bar
                      timestamp: 2016-12-08T19:09:15Z
                      proration_upgrade_scheme: prorate-attempt-capture
                      proration_downgrade_scheme: no-prorate
                      payment:
                        amount_in_cents: 1451
                        success: true
                        memo: 'Payment for: Prorated component allocation changes.'
                        id: 165473487
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - allocation:
                      component_id: 193159
                      subscription_id: 15540611
                      quantity: 10
                      previous_quantity: 0
                      memo: foo
                      timestamp: 2016-12-08T19:09:15Z
                      proration_upgrade_scheme: prorate-attempt-capture
                      proration_downgrade_scheme: no-prorate
                      payment:
                        amount_in_cents: 1451
                        success: true
                        memo: 'Payment for: Prorated component allocation changes.'
                        id: 165473487
                  - allocation:
                      component_id: 277221
                      subscription_id: 15540611
                      quantity: 5
                      previous_quantity: 0
                      memo: bar
                      timestamp: 2016-12-08T19:09:15Z
                      proration_upgrade_scheme: prorate-attempt-capture
                      proration_downgrade_scheme: no-prorate
                      payment:
                        amount_in_cents: 1451
                        success: true
                        memo: 'Payment for: Prorated component allocation changes.'
                        id: 165473487
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Quantity: cannot be blank.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Quantity: cannot be blank.'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/allocations/preview.json:
    post:
      tags:
      - Subscription Components
      summary: previewAllocations
      description: >-
        Chargify offers the ability to preview a potential subscription's **quantity-based** or **on/off** component allocation in the middle of the current billing period.  This is useful if you want users to be able to see the effect of a component operation before actually doing it.


        ## Fine-grained Component Control: Use with multiple `upgrade_charge`s or `downgrade_credits`


        When the allocation uses multiple different types of `upgrade_charge`s or `downgrade_credit`s, the Allocation is viewed as an Allocation which uses "Fine-Grained Component Control". As a result, the response will not include `direction` and `proration` within the `allocation_preview`, but at the `line_items` and `allocations` level respectfully.


        See example below for Fine-Grained Component Control response.
      operationId: previewAllocations
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PreviewAllocationsRequest'
              - examples:
                - allocations:
                  - proration_upgrade_scheme: prorate-attempt-capture
                    proration_downgrade_scheme: prorate
                    component_id: 554108
                    price_point_id: 325826
                    quantity: 10
                    memo: NOW
                  effective_proration_date: 2023-11-01
              contentMediaType: application/json
            examples:
              Example:
                value:
                  allocations:
                  - proration_upgrade_scheme: prorate-attempt-capture
                    proration_downgrade_scheme: prorate
                    component_id: 554108
                    price_point_id: 325826
                    quantity: 10
                    memo: NOW
                  effective_proration_date: 2023-11-01
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AllocationPreviewResponse'
                - examples:
                  - allocation_preview:
                      start_date: 2019-05-02T15:26:46Z
                      end_date: 2019-05-08T15:26:46Z
                      period_type: prorated
                      total_in_cents: 150
                      total_discount_in_cents: 0
                      total_tax_in_cents: 0
                      subtotal_in_cents: 150
                      existing_balance_in_cents: 0
                      accrue_charge: true
                      line_items:
                      - direction: upgrade
                        transaction_type: charge
                        kind: quantity_based_component
                        amount_in_cents: 100
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 0 to 10 foo'
                        component_id: 123
                        component_handle: foo
                      - direction: downgrade
                        transaction_type: credit
                        kind: quantity_based_component
                        amount_in_cents: -20
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 10 to 5 bar'
                        component_id: 456
                        component_handle: bar
                      - direction: upgrade
                        transaction_type: credit
                        kind: quantity_based_component
                        amount_in_cents: 70
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 0 to 10 baz'
                        component_id: 789
                        component_handle: baz
                      allocations:
                      - accrue_charge: true
                        upgrade_charge: prorated
                        downgrade_credit: full
                        component_handle: foo
                        component_id: 123
                        memo: foo
                        previous_price_point_id: 123
                        previous_quantity: 0
                        price_point_id: 123
                        proration_downgrade_scheme: full
                        proration_upgrade_scheme: prorate-delay-capture
                        quantity: 10
                        subscription_id: 123456
                        timestamp: null
                      - accrue_charge: true
                        upgrade_charge: full
                        downgrade_credit: prorated
                        component_handle: bar
                        component_id: 456
                        memo: foo
                        previous_price_point_id: 456
                        previous_quantity: 10
                        price_point_id: 456
                        proration_downgrade_scheme: prorate
                        proration_upgrade_scheme: full-price-delay-capture
                        quantity: 5
                        subscription_id: 123456
                        timestamp: null
                      - accrue_charge: true
                        upgrade_charge: full
                        downgrade_credit: none
                        component_handle: baz
                        component_id: 789
                        memo: foo
                        previous_price_point_id: 789
                        previous_quantity: 0
                        price_point_id: 789
                        proration_downgrade_scheme: no-prorate
                        proration_upgrade_scheme: full-price-delay-capture
                        quantity: 10
                        subscription_id: 123456
                        timestamp: null
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    allocation_preview:
                      start_date: 2019-05-02T15:26:46Z
                      end_date: 2019-05-08T15:26:46Z
                      period_type: prorated
                      total_in_cents: 150
                      total_discount_in_cents: 0
                      total_tax_in_cents: 0
                      subtotal_in_cents: 150
                      existing_balance_in_cents: 0
                      accrue_charge: true
                      line_items:
                      - direction: upgrade
                        transaction_type: charge
                        kind: quantity_based_component
                        amount_in_cents: 100
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 0 to 10 foo'
                        component_id: 123
                        component_handle: foo
                      - direction: downgrade
                        transaction_type: credit
                        kind: quantity_based_component
                        amount_in_cents: -20
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 10 to 5 bar'
                        component_id: 456
                        component_handle: bar
                      - direction: upgrade
                        transaction_type: credit
                        kind: quantity_based_component
                        amount_in_cents: 70
                        taxable_amount_in_cents: 0
                        discount_amount_in_cents: 0
                        memo: 'Foo: 0 to 10 baz'
                        component_id: 789
                        component_handle: baz
                      allocations:
                      - accrue_charge: true
                        upgrade_charge: prorated
                        downgrade_credit: full
                        component_handle: foo
                        component_id: 123
                        memo: foo
                        previous_price_point_id: 123
                        previous_quantity: 0
                        price_point_id: 123
                        proration_downgrade_scheme: full
                        proration_upgrade_scheme: prorate-delay-capture
                        quantity: 10
                        subscription_id: 123456
                        timestamp: null
                      - accrue_charge: true
                        upgrade_charge: full
                        downgrade_credit: prorated
                        component_handle: bar
                        component_id: 456
                        memo: foo
                        previous_price_point_id: 456
                        previous_quantity: 10
                        price_point_id: 456
                        proration_downgrade_scheme: prorate
                        proration_upgrade_scheme: full-price-delay-capture
                        quantity: 5
                        subscription_id: 123456
                        timestamp: null
                      - accrue_charge: true
                        upgrade_charge: full
                        downgrade_credit: none
                        component_handle: baz
                        component_id: 789
                        memo: foo
                        previous_price_point_id: 789
                        previous_quantity: 0
                        price_point_id: 789
                        proration_downgrade_scheme: no-prorate
                        proration_upgrade_scheme: full-price-delay-capture
                        quantity: 10
                        subscription_id: 123456
                        timestamp: null
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ComponentAllocationError1'
                - examples:
                  - errors:
                    - kind: allocation
                      component_id: 379512
                      on: base
                      message: Allocations can only be updated for quantity and on/off components.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - kind: allocation
                      component_id: 379512
                      on: base
                      message: Allocations can only be updated for quantity and on/off components.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/components/{component_id}/allocations/{allocation_id}.json:
    put:
      tags:
      - Subscription Components
      summary: updatePrepaidUsageAllocation
      description: >-
        When the expiration interval options are selected on a prepaid usage component price point, all allocations will be created with an expiration date. This expiration date can be changed after the fact to allow for extending or shortening the allocation's active window.


        In order to change a prepaid usage allocation's expiration date, a PUT call must be made to the allocation's endpoint with a new expiration date.


        ## Limitations


        A few limitations exist when changing an allocation's expiration date:


        - An expiration date can only be changed for an allocation that belongs to a price point with expiration interval options explicitly set.

        - An expiration date can be changed towards the future with no limitations.

        - An expiration date can be changed towards the past (essentially expiring it) up to the subscription's current period beginning date.
      operationId: updatePrepaidUsageAllocation
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: allocation_id
        in: path
        description: The Chargify id of the allocation
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateAllocationExpirationDate'
              - examples:
                - allocation:
                    expires_at: 05/07/2021
              contentMediaType: application/json
            examples:
              Example:
                value:
                  allocation:
                    expires_at: 05/07/2021
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionComponentAllocationError1'
                - examples:
                  - errors:
                    - kind: base
                      message: Credit scheme must be one of credit, refund or none.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - kind: base
                      message: Credit scheme must be one of credit, refund or none.
      deprecated: false
    delete:
      tags:
      - Subscription Components
      summary: deletePrepaidUsageAllocation
      description: >-
        Prepaid Usage components are unique in that their allocations are always additive. In order to reduce a subscription's allocated quantity for a prepaid usage component each allocation must be destroyed individually via this endpoint.


        ## Credit Scheme


        By default, destroying an allocation will generate a service credit on the subscription. This behavior can be modified with the optional `credit_scheme` parameter on this endpoint. The accepted values are:


        1. `none`: The allocation will be destroyed and the balances will be updated but no service credit or refund will be created.

        2. `credit`: The allocation will be destroyed and the balances will be updated and a service credit will be generated. This is also the default behavior if the `credit_scheme` param is not passed.

        3. `refund`: The allocation will be destroyed and the balances will be updated and a refund will be issued along with a Credit Note.
      operationId: deletePrepaidUsageAllocation
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: allocation_id
        in: path
        description: The Chargify id of the allocation
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreditSchemeRequest'
              - examples:
                - credit_scheme: none
              contentMediaType: application/json
            examples:
              Example:
                value:
                  credit_scheme: none
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionComponentAllocationError1'
                - examples:
                  - errors:
                    - kind: base
                      message: Credit scheme must be one of credit, refund or none.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - kind: base
                      message: Credit scheme must be one of credit, refund or none.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/components/{component_id}/usages.json:
    post:
      tags:
      - Subscription Components
      summary: createUsage
      description: >-
        ## Documentation


        Full documentation on how to create Components in the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677#creating-components). Additionally, for information on how to record component usage against a subscription, please see the following resources:


        + [Recording Metered Component Usage](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997#reporting-metered-component-usage)

        + [Reporting Prepaid Component Status](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404527849997#reporting-prepaid-component-status)


        You may choose to report metered or prepaid usage to Chargify as often as you wish. You may report usage as it happens. You may also report usage periodically, such as each night or once per billing period. If usage events occur in your system very frequently (on the order of thousands of times an hour), it is best to accumulate usage into batches on your side, and then report those batches less frequently, such as daily. This will ensure you remain below any API throttling limits. If your use case requires higher rates of usage reporting, we recommend utilizing Events Based Components.


        ## Create Usage for Subscription


        This endpoint allows you to record an instance of metered or prepaid usage for a subscription. The `quantity` from usage for each component is accumulated to the `unit_balance` on the [Component Line Item](./b3A6MTQxMDgzNzQ-read-subscription-component) for the subscription.


        ## Price Point ID usage


        If you are using price points, for metered and prepaid usage components, Chargify gives you the option to specify a price point in your request.


        You do not need to specify a price point ID. If a price point is not included, the default price point for the component will be used when the usage is recorded.


        If an invalid `price_point_id` is submitted, the endpoint will return an error.


        ## Deducting Usage


        In the event that you need to reverse a previous usage report or otherwise deduct from the current usage balance, you may provide a negative quantity.


        Example:


        Previously recorded:


        ```json

        {
          "usage": {
            "quantity": 5000,
            "memo": "Recording 5000 units"
          }
        }

        ```


        At this point, `unit_balance` would be `5000`. To reduce the balance to `0`, POST the following payload:


        ```json

        {
          "usage": {
            "quantity": -5000,
            "memo": "Deducting 5000 units"
          }
        }

        ```


        The `unit_balance` has a floor of `0`; negative unit balances are never allowed. For example, if the usage balance is 100 and you deduct 200 units, the unit balance would then be `0`, not `-100`.


        ## FAQ


        Q. Is it possible to record metered usage for more than one component at a time?


        A. No. Usage should be reported as one API call per component on a single subscription. For example, to record that a subscriber has sent both an SMS Message and an Email, send an API call for each.
      operationId: createUsage
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: Either the Chargify id for the component or the component's handle prefixed by `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateUsageRequest'
              - examples:
                - usage:
                    quantity: 1000
                    price_point_id: '149416'
                    memo: My memo
              contentMediaType: application/json
            examples:
              Example:
                value:
                  usage:
                    quantity: 1000
                    price_point_id: '149416'
                    memo: My memo
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UsageResponse'
                - examples:
                  - usage:
                      id: 138522957
                      memo: My memo
                      created_at: 2017-11-13T10:05:32-06:00
                      price_point_id: 149416
                      quantity: 1000
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    usage:
                      id: 138522957
                      memo: My memo
                      created_at: 2017-11-13T10:05:32-06:00
                      price_point_id: 149416
                      quantity: 1000
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'Price point: could not be found.'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'Price point: could not be found.'
      deprecated: false
    get:
      tags:
      - Subscription Components
      summary: listUsages
      description: >-
        This request will return a list of the usages associated with a subscription for a particular metered component. This will display the previously recorded components for a subscription.


        This endpoint is not compatible with quantity-based components.


        ## Since Date and Until Date Usage


        Note: The `since_date` and `until_date` attributes each default to midnight on the date specified. For example, in order to list usages for January 20th, you would need to append the following to the URL.


        ```

        ?since_date=2016-01-20&until_date=2016-01-21

        ```


        ## Read Usage by Handle


        Use this endpoint to read the previously recorded components for a subscription.  You can now specify either the component id (integer) or the component handle prefixed by "handle:" to specify the unique identifier for the component you are working with.
      operationId: listUsages
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: Either the Chargify id for the component or the component's handle prefixed by `handle:`
        required: true
        style: simple
        schema:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
      - name: since_id
        in: query
        description: Returns usages with an id greater than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: max_id
        in: query
        description: Returns usages with an id less than or equal to the one specified
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: since_date
        in: query
        description: Returns usages with a created_at date greater than or equal to midnight (12:00 AM) on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: until_date
        in: query
        description: Returns usages with a created_at date less than or equal to midnight (12:00 AM) on the date specified.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResponse'
                description: ''
                examples:
                - - usage:
                      id: 178534642
                      memo: '20'
                      created_at: 2018-08-03T11:58:42-05:00
                      price_point_id: 242632
                      quantity: '20.0'
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
                  - usage:
                      id: 178534591
                      memo: '10'
                      created_at: 2018-08-03T11:58:29-05:00
                      price_point_id: 242632
                      quantity: '10.0'
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - usage:
                      id: 178534642
                      memo: '20'
                      created_at: 2018-08-03T11:58:42-05:00
                      price_point_id: 242632
                      quantity: '20.0'
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
                  - usage:
                      id: 178534591
                      memo: '10'
                      created_at: 2018-08-03T11:58:29-05:00
                      price_point_id: 242632
                      quantity: '10.0'
                      component_id: 500093
                      component_handle: handle
                      subscription_id: 22824464
      deprecated: false
    parameters: []
  /event_based_billing/subscriptions/{subscription_id}/components/{component_id}/activate.json:
    post:
      tags:
      - Subscription Components
      summary: activateEventBasedComponent
      description: >-
        In order to bill your subscribers on your Events data under the Events-Based Billing feature, the components must be activated for the subscriber.


        Learn more about the role of activation in the [Events-Based Billing docs](https://chargify.zendesk.com/hc/en-us/articles/4407720810907#activating-components-for-subscribers).


        Use this endpoint to activate an event-based component for a single subscription. Activating an event-based component causes Chargify to bill for events when the subscription is renewed.


        *Note: it is possible to stream events for a subscription at any time, regardless of component activation status. The activation status only determines if the subscription should be billed for event-based component usage at renewal.*
      operationId: activateEventBasedComponent
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /event_based_billing/subscriptions/{subscription_id}/components/{component_id}/deactivate.json:
    post:
      tags:
      - Subscription Components
      summary: deactivateEventBasedComponent
      description: Use this endpoint to deactivate an event-based component for a single subscription. Deactivating the event-based component causes Chargify to ignore related events at subscription renewal.
      operationId: deactivateEventBasedComponent
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: component_id
        in: path
        description: The Chargify id of the component
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /{subdomain}/events/{api_handle}.json:
    post:
      tags:
      - Subscription Components
      summary: recordEvent
      description: >-
        ## Documentation


        Events-Based Billing is an evolved form of metered billing that is based on data-rich events streamed in real-time from your system to Chargify.


        These events can then be transformed, enriched, or analyzed to form the computed totals of usage charges billed to your customers.


        This API allows you to stream events into the Chargify data ingestion engine.


        Learn more about the feature in general in the [Events-Based Billing help docs](https://chargify.zendesk.com/hc/en-us/articles/4407720613403).


        ## Record Event


        Use this endpoint to record a single event.


        *Note: this endpoint differs from the standard Chargify endpoints in that the URL subdomain will be `events` and your site subdomain will be included in the URL path. For example:*


        ```

        https://events.chargify.com/my-site-subdomain/events/my-stream-api-handle

        ```
      operationId: recordEvent
      parameters:
      - name: subdomain
        in: path
        description: Your site's subdomain
        required: true
        style: simple
        schema:
          type: string
      - name: api_handle
        in: path
        description: Identifies the Stream for which the event should be published.
        required: true
        style: simple
        schema:
          type: string
      - name: store_uid
        in: query
        description: If you've attached your own Keen project as a Chargify event data-store, use this parameter to indicate the data-store.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/EBBEvent'
              - examples:
                - chargify:
                    subscription_id: 1
                    timestamp: 2020-02-27T17:45:50-05:00
                  messages: 150
                  country: US
                  customer:
                    name: John
                    lastName: Doe
                    address:
                      street: Maple Street
                      zip: 4888
                      state: MA
              contentMediaType: application/json
            examples:
              Example:
                value:
                  chargify:
                    subscription_id: 1
                    timestamp: 2020-02-27T17:45:50-05:00
                  messages: 150
                  country: US
                  customer:
                    name: John
                    lastName: Doe
                    address:
                      street: Maple Street
                      zip: 4888
                      state: MA
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /{subdomain}/events/{api_handle}/bulk.json:
    post:
      tags:
      - Subscription Components
      summary: recordEvents
      description: >-
        Use this endpoint to record a collection of events.


        *Note: this endpoint differs from the standard Chargify endpoints in that the subdomain will be `events` and your site subdomain will be included in the URL path.*


        A maximum of 1000 events can be published in a single request. A 422 will be returned if this limit is exceeded.
      operationId: recordEvents
      parameters:
      - name: subdomain
        in: path
        description: Your site's subdomain
        required: true
        style: simple
        schema:
          type: string
      - name: api_handle
        in: path
        description: Identifies the Stream for which the events should be published.
        required: true
        style: simple
        schema:
          type: string
      - name: store_uid
        in: query
        description: If you've attached your own Keen project as a Chargify event data-store, use this parameter to indicate the data-store.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EBBEvent'
              description: ''
              contentMediaType: application/json
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions_components.json:
    get:
      tags:
      - Subscription Components
      summary: listSubscriptionComponentsForSite
      description: This request will list components applied to each subscription.
      operationId: listSubscriptionComponentsForSite
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: sort
        in: query
        description: 'The attribute by which to sort. Use in query: `sort=updated_at`.'
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionComponentsSort'
          - description: 'The attribute by which to sort. Use in query: `sort=updated_at`.'
            examples:
            - updated_at
      - name: direction
        in: query
        description: >-
          Controls the order in which results are returned.

          Use in query `direction=asc`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/Sortingdirection'
          - description: >-
              Controls the order in which results are returned.

              Use in query `direction=asc`.
      - name: date_field
        in: query
        description: "The type of filter you'd like to apply to your search. Use in query: `date_field=updated_at`."
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionListDateField'
          - description: "The type of filter you'd like to apply to your search. Use in query: `date_field=updated_at`."
            examples:
            - updated_at
      - name: start_date
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. Use in query `start_date=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
      - name: start_datetime
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of start_date. Use in query `start_datetime=2022-07-01 09:00:05`.
        style: form
        explode: true
        schema:
          type: string
      - name: end_date
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. Use in query `end_date=2011-12-16`.
        style: form
        explode: true
        schema:
          type: string
      - name: end_datetime
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of end_date. Use in query `end_datetime=2022-07-01 09:00:05`.
        style: form
        explode: true
        schema:
          type: string
      - name: subscription_ids
        in: query
        description: Allows fetching components allocation with matching subscription id based on provided ids. Use in query `subscription_ids=1,2,3`.
        style: form
        explode: true
        schema:
          maxItems: 200
          minItems: 1
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: price_point_ids
        in: query
        description: Allows fetching components allocation only if price point id is present. Use in query `price_point_ids=not_null`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/IncludeNotNull'
          - description: Allows fetching components allocation only if price point id is present. Use in query `price_point_ids=not_null`.
            examples:
            - not_null
      - name: product_family_ids
        in: query
        description: Allows fetching components allocation with matching product family id based on provided ids. Use in query `product_family_ids=1,2,3`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            contentEncoding: int32
          examples:
          - - 1
            - 2
            - 3
      - name: include
        in: query
        description: Allows including additional data in the response. Use in query `include=subscription`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionComponentsInclude'
          - description: Allows including additional data in the response. Use in query `include=subscription`.
            examples:
            - subscription
      - name: filter[use_site_exchange_rate]
        in: query
        description: Allows fetching components allocation with matching use_site_exchange_rate based on provided value. Use in query `filter[use_site_exchange_rate]=true`.
        style: form
        explode: true
        schema:
          type: boolean
          examples:
          - true
      - name: filter[currencies]
        in: query
        description: Allows fetching components allocation with matching currency based on provided values. Use in query `filter[currencies]=USD,EUR`.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - EUR
            - USD
      - name: filter[subscription][states]
        in: query
        description: Allows fetching components allocations that belong to the subscription with matching states based on provided values. To use this filter you also have to include the following param in the request `include=subscription`. Use in query `filter[subscription][states]=active,canceled&include=subscription`.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionStateFilter'
          examples:
          - - active
            - canceled
      - name: filter[subscription][date_field]
        in: query
        description: The type of filter you'd like to apply to your search. To use this filter you also have to include the following param in the request `include=subscription`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/SubscriptionListDateField'
          - description: The type of filter you'd like to apply to your search. To use this filter you also have to include the following param in the request `include=subscription`.
            examples:
            - updated_at
      - name: filter[subscription][start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns components that belong to the subscription with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. To use this filter you also have to include the following param in the request `include=subscription`.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[subscription][start_datetime]
        in: query
        description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components that belong to the subscription with a timestamp at or after exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of start_date. To use this filter you also have to include the following param in the request `include=subscription`.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[subscription][end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns components that belong to the subscription with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. To use this filter you also have to include the following param in the request `include=subscription`.
        style: form
        explode: true
        schema:
          type: string
      - name: filter[subscription][end_datetime]
        in: query
        description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns components that belong to the subscription with a timestamp at or before exact time provided in query. You can specify timezone in query - otherwise your site''s time zone will be used. If provided, this parameter will be used instead of end_date. To use this filter you also have to include the following param in the request `include=subscription`.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionComponentsResponse'
      deprecated: false
    parameters: []
  /subscription_groups/signup.json:
    post:
      tags:
      - Subscription Groups
      summary: signupWithSubscriptionGroup
      description: >-
        Create multiple subscriptions at once under the same customer and consolidate them into a subscription group.


        You must provide one and only one of the `payer_id`/`payer_reference`/`payer_attributes` for the customer attached to the group.


        You must provide one and only one of the `payment_profile_id`/`credit_card_attributes`/`bank_account_attributes` for the payment profile attached to the group.


        Only one of the `subscriptions` can have `"primary": true` attribute set.


        When passing product to a subscription you can use either `product_id` or `product_handle` or `offer_id`. You can also use `custom_price` instead.
      operationId: signupWithSubscriptionGroup
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SubscriptionGroupSignupRequest'
              - examples:
                - '{"subscription_group":{"payment_profile_id":123,"payer_id":123,"subscriptions":[{"product_id":11,"primary":true},{"product_id":12},{"product_id":13}]}}'
                - '{"subscription_group":{"payer_attributes":{"first_name":"John","last_name":"Doe","email":"john@example.com","organization":"Acme, Inc"},"credit_card_attributes":{"full_number":"4111111111111111","expiration_month":"12","expiration_year":"2031"},"subscriptions":[{"product_id":123,"primary":true},{"product_handle":"silver-plan"},{"product_id":124}]}}'
                - '{"subscription_group":{"payer_id":123,"credit_card_attributes":{"chargify_token":"tok_19gnjsa9433u9b22","last_four":"1111","card_type":"visa"},"subscriptions":[{"product_id":11,"primary":true},{"product_id":12},{"product_id":13}]}}'
                - '{"subscription_group":{"payer_id":234,"bank_account_attributes":{"chargify_token":"tok_19gnjsa9433u9b22"},"subscriptions":[{"product_id":11,"primary":true},{"product_id":12},{"product_id":13}]}}'
                - '{"subscription_group":{"payer_attributes":{"first_name":"John","last_name":"Doe","email":"john@example.com","organization":"Acme, Inc","metafields":{"win-over":"ABCompany"}},"credit_card_attributes":{"full_number":"4111111111111111","expiration_month":"12","expiration_year":"2031"},"subscriptions":[{"product_id":123,"primary":true,"metafields":{"mrr":"$99","discounted":"false"}},{"product_handle":"silver-plan","metafields":{"mrr":"$49"}},{"product_id":124}]}}'
                - '{"subscription_group":{"payment_profile_id":123,"payer_id":123,"subscriptions":[{"product_id":11,"primary":true,"components":[{"component_id":99,"allocated_quantity":10}]},{"product_id":12},{"product_id":13}]}}'
                - '{"subscription_group":{"payment_profile_id":123,"payer_id":123,"subscriptions":[{"product_id":19,"custom_price":{"handle":"custom-price","price_in_cents":9900,"interval":1,"interval_unit":"month"},"primary":true},{"product_id":12,"components":[{"component_id":29,"allocated_quantity":5,"custom_price":{"pricing_scheme":"volume","prices":[{"unit_price":"5","starting_quantity":"1","ending_quantity":"15"},{"unit_price":"2","starting_quantity":"16"}]}}]},{"product_id":13}]}}'
              contentMediaType: application/json
            examples:
              Basic request:
                value:
                  subscription_group:
                    payment_profile_id: 123
                    payer_id: 123
                    subscriptions:
                    - product_id: 11
                      primary: true
                    - product_id: 12
                    - product_id: 13
              Create customer and payment profile in-place:
                value:
                  subscription_group:
                    payer_attributes:
                      first_name: John
                      last_name: Doe
                      email: john@example.com
                      organization: Acme, Inc
                    credit_card_attributes:
                      full_number: '4111111111111111'
                      expiration_month: '12'
                      expiration_year: '2031'
                    subscriptions:
                    - product_id: 123
                      primary: true
                    - product_handle: silver-plan
                    - product_id: 124
              Create credit card using Chargify.js token:
                value:
                  subscription_group:
                    payer_id: 123
                    credit_card_attributes:
                      chargify_token: tok_19gnjsa9433u9b22
                      last_four: '1111'
                      card_type: visa
                    subscriptions:
                    - product_id: 11
                      primary: true
                    - product_id: 12
                    - product_id: 13
              Create bank account using Chargify.js token:
                value:
                  subscription_group:
                    payer_id: 234
                    bank_account_attributes:
                      chargify_token: tok_19gnjsa9433u9b22
                    subscriptions:
                    - product_id: 11
                      primary: true
                    - product_id: 12
                    - product_id: 13
              Create group with subscription and customer metafields:
                value:
                  subscription_group:
                    payer_attributes:
                      first_name: John
                      last_name: Doe
                      email: john@example.com
                      organization: Acme, Inc
                      metafields:
                        win-over: ABCompany
                    credit_card_attributes:
                      full_number: '4111111111111111'
                      expiration_month: '12'
                      expiration_year: '2031'
                    subscriptions:
                    - product_id: 123
                      primary: true
                      metafields:
                        mrr: $99
                        discounted: 'false'
                    - product_handle: silver-plan
                      metafields:
                        mrr: $49
                    - product_id: 124
              Create subscription with components:
                value:
                  subscription_group:
                    payment_profile_id: 123
                    payer_id: 123
                    subscriptions:
                    - product_id: 11
                      primary: true
                      components:
                      - component_id: 99
                        allocated_quantity: 10
                    - product_id: 12
                    - product_id: 13
              Create subscription with Custom Pricing:
                value:
                  subscription_group:
                    payment_profile_id: 123
                    payer_id: 123
                    subscriptions:
                    - product_id: 19
                      custom_price:
                        handle: custom-price
                        price_in_cents: 9900
                        interval: 1
                        interval_unit: month
                      primary: true
                    - product_id: 12
                      components:
                      - component_id: 29
                        allocated_quantity: 5
                        custom_price:
                          pricing_scheme: volume
                          prices:
                          - unit_price: '5'
                            starting_quantity: '1'
                            ending_quantity: '15'
                          - unit_price: '2'
                            starting_quantity: '16'
                    - product_id: 13
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGroupSignupResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionGroupSignupErrorResponse1'
      deprecated: false
    parameters: []
  /subscription_groups.json:
    post:
      tags:
      - Subscription Groups
      summary: createSubscriptionGroup
      description: Creates a subscription group with given members.
      operationId: createSubscriptionGroup
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionGroupRequest'
              - examples:
                - subscription_group:
                    subscription_id: 1
                    member_ids:
                    - 2
                    - 3
                    - 4
              contentMediaType: application/json
            examples:
              Example:
                value:
                  subscription_group:
                    subscription_id: 1
                    member_ids:
                    - 2
                    - 3
                    - 4
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionGroupResponse'
                - examples:
                  - subscription_group:
                      customer_id: 1
                      payment_profile:
                        id: 1
                        first_name: t
                        last_name: t
                        masked_card_number: XXXX-XXXX-XXXX-1
                      payment_collection_method: automatic
                      subscription_ids:
                      - 1
                      - 2
                      created_at: 2021-01-21T05:47:38-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription_group:
                      customer_id: 1
                      payment_profile:
                        id: 1
                        first_name: t
                        last_name: t
                        masked_card_number: XXXX-XXXX-XXXX-1
                      payment_collection_method: automatic
                      subscription_ids:
                      - 1
                      - 2
                      created_at: 2021-01-21T05:47:38-05:00
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SingleStringErrorResponse1'
                - examples:
                  - errors: Subscription is already in group
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors: Subscription is already in group
      deprecated: false
    get:
      tags:
      - Subscription Groups
      summary: listSubscriptionGroups
      description: >-
        Returns an array of subscription groups for the site. The response is paginated and will return a `meta` key with pagination information.


        #### Account Balance Information


        Account balance information for the subscription groups is not returned by default. If this information is desired, the `include[]=account_balances` parameter must be provided with the request.
      operationId: listSubscriptionGroups
      parameters:
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: include
        in: query
        description: >-
          A list of additional information to include in the response. The following values are supported:


          - `account_balances`: Account balance information for the subscription groups. Use in query: `include[]=account_balances`
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListSubscriptionGroupsResponse'
                - examples:
                  - subscription_groups:
                    - uid: grp_952mvqcnk53wq
                      scheme: 1
                      customer_id: 88498000
                      payment_profile_id: 93063018
                      subscription_ids:
                      - 42768907
                      - 82370782
                      primary_subscription_id: 69844395
                      next_assessment_at: Sun, 09 Aug 2020 15:59:06 EDT -04:00
                      state: active
                      cancel_at_end_of_period: false
                      account_balances:
                        prepayments:
                          balance_in_cents: 0
                        service_credits:
                          balance_in_cents: 0
                        pending_discounts:
                          balance_in_cents: 0
                    meta:
                      current_page: 1
                      total_count: 1
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription_groups:
                    - uid: grp_952mvqcnk53wq
                      scheme: 1
                      customer_id: 88498000
                      payment_profile_id: 93063018
                      subscription_ids:
                      - 42768907
                      - 82370782
                      primary_subscription_id: 69844395
                      next_assessment_at: Sun, 09 Aug 2020 15:59:06 EDT -04:00
                      state: active
                      cancel_at_end_of_period: false
                      account_balances:
                        prepayments:
                          balance_in_cents: 0
                        service_credits:
                          balance_in_cents: 0
                        pending_discounts:
                          balance_in_cents: 0
                    meta:
                      current_page: 1
                      total_count: 1
      deprecated: false
    parameters: []
  /subscription_groups/{uid}.json:
    get:
      tags:
      - Subscription Groups
      summary: readSubscriptionGroup
      description: >-
        Use this endpoint to find subscription group details.


        #### Current Billing Amount in Cents


        Current billing amount for the subscription group is not returned by default. If this information is desired, the `include[]=current_billing_amount_in_cents` parameter must be provided with the request.
      operationId: readSubscriptionGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FullSubscriptionGroupResponse'
                - examples:
                  - uid: grp_939ktzq8v4477
                    scheme: 1
                    customer_id: 400
                    payment_profile_id: 567
                    subscription_ids:
                    - 101
                    - 102
                    - 103
                    primary_subscription_id: 101
                    next_assessment_at: 2020-08-01T14:00:00-05:00
                    state: active
                    cancel_at_end_of_period: false
                    current_billing_amount_in_cents: 11500
                    customer:
                      first_name: Mark
                      last_name: Wannabewahlberg
                      organization: The Funky Bunch
                      email: markymark@example.com
                      reference: 4c92223b-bc16-4d0d-87ff-b177a89a2655
                    account_balances:
                      prepayments:
                        balance_in_cents: 0
                      service_credits:
                        balance_in_cents: 0
                      open_invoices:
                        balance_in_cents: 4400
                      pending_discounts:
                        balance_in_cents: 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: grp_939ktzq8v4477
                    scheme: 1
                    customer_id: 400
                    payment_profile_id: 567
                    subscription_ids:
                    - 101
                    - 102
                    - 103
                    primary_subscription_id: 101
                    next_assessment_at: 2020-08-01T14:00:00-05:00
                    state: active
                    cancel_at_end_of_period: false
                    current_billing_amount_in_cents: 11500
                    customer:
                      first_name: Mark
                      last_name: Wannabewahlberg
                      organization: The Funky Bunch
                      email: markymark@example.com
                      reference: 4c92223b-bc16-4d0d-87ff-b177a89a2655
                    account_balances:
                      prepayments:
                        balance_in_cents: 0
                      service_credits:
                        balance_in_cents: 0
                      open_invoices:
                        balance_in_cents: 4400
                      pending_discounts:
                        balance_in_cents: 0
      deprecated: false
    put:
      tags:
      - Subscription Groups
      summary: updateSubscriptionGroupMembers
      description: >-
        Use this endpoint to update subscription group members.

        `"member_ids": []` should contain an array of both subscription IDs to set as group members and subscription IDs already present in the groups. Not including them will result in removing them from subscription group. To clean up members, just leave the array empty.
      operationId: updateSubscriptionGroupMembers
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSubscriptionGroupRequest'
              - examples:
                - subscription_group:
                    member_ids:
                    - 1
                    - 2
                    - 3
              contentMediaType: application/json
            examples:
              Example:
                value:
                  subscription_group:
                    member_ids:
                    - 1
                    - 2
                    - 3
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionGroupResponse'
                - examples:
                  - subscription_group:
                      customer_id: 1
                      payment_profile:
                        id: 1
                        first_name: t
                        last_name: t
                        masked_card_number: XXXX-XXXX-XXXX-1
                      payment_collection_method: automatic
                      subscription_ids:
                      - 1
                      created_at: 2021-01-21T05:47:38-05:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription_group:
                      customer_id: 1
                      payment_profile:
                        id: 1
                        first_name: t
                        last_name: t
                        masked_card_number: XXXX-XXXX-XXXX-1
                      payment_collection_method: automatic
                      subscription_ids:
                      - 1
                      created_at: 2021-01-21T05:47:38-05:00
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionGroupUpdateErrorResponse1'
                - examples:
                  - errors:
                      members:
                      - id: 10101
                        type: not_found
                        message: Subscription could not be found
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      members:
                      - id: 10101
                        type: not_found
                        message: Subscription could not be found
      deprecated: false
    delete:
      tags:
      - Subscription Groups
      summary: deleteSubscriptionGroup
      description: >-
        Use this endpoint to delete subscription group.

        Only groups without members can be deleted
      operationId: deleteSubscriptionGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteSubscriptionGroupResponse'
                - examples:
                  - uid: grp_99w5xp9y5xycy
                    deleted: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: grp_99w5xp9y5xycy
                    deleted: true
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscription_groups/lookup.json:
    get:
      tags:
      - Subscription Groups
      summary: readSubscriptionGroupBySubscriptionId
      description: >-
        Use this endpoint to find subscription group associated with subscription.


        If the subscription is not in a group endpoint will return 404 code.
      operationId: readSubscriptionGroupBySubscriptionId
      parameters:
      - name: subscription_id
        in: query
        description: The Chargify id of the subscription associated with the subscription group
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FullSubscriptionGroupResponse'
                - examples:
                  - uid: grp_939ktzq8v4477
                    scheme: 1
                    customer_id: 400
                    payment_profile_id: 567
                    subscription_ids:
                    - 101
                    - 102
                    - 103
                    primary_subscription_id: 101
                    next_assessment_at: 2020-08-01T14:00:00-05:00
                    state: active
                    cancel_at_end_of_period: false
                    customer:
                      first_name: Mark
                      last_name: Wannabewahlberg
                      organization: The Funky Bunch
                      email: markymark@example.com
                      reference: 4c92223b-bc16-4d0d-87ff-b177a89a2655
                    account_balances:
                      prepayments:
                        balance_in_cents: 0
                      service_credits:
                        balance_in_cents: 0
                      open_invoices:
                        balance_in_cents: 4400
                      pending_discounts:
                        balance_in_cents: 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: grp_939ktzq8v4477
                    scheme: 1
                    customer_id: 400
                    payment_profile_id: 567
                    subscription_ids:
                    - 101
                    - 102
                    - 103
                    primary_subscription_id: 101
                    next_assessment_at: 2020-08-01T14:00:00-05:00
                    state: active
                    cancel_at_end_of_period: false
                    customer:
                      first_name: Mark
                      last_name: Wannabewahlberg
                      organization: The Funky Bunch
                      email: markymark@example.com
                      reference: 4c92223b-bc16-4d0d-87ff-b177a89a2655
                    account_balances:
                      prepayments:
                        balance_in_cents: 0
                      service_credits:
                        balance_in_cents: 0
                      open_invoices:
                        balance_in_cents: 4400
                      pending_discounts:
                        balance_in_cents: 0
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/group.json:
    post:
      tags:
      - Subscription Groups
      summary: createSubscriptionGroupHierarchy
      description: >
        For sites making use of the [Relationship Billing](https://chargify.zendesk.com/hc/en-us/articles/4407737494171) and [Customer Hierarchy](https://chargify.zendesk.com/hc/en-us/articles/4407746683291) features, it is possible to add existing subscriptions to subscription groups.


        Passing `group` parameters with a `target` containing a `type` and optional `id` is all that's needed. When the `target` parameter specifies a `"customer"` or `"subscription"` that is already part of a hierarchy, the subscription will become a member of the customer's subscription group.  If the target customer or subscription is not part of a subscription group, a new group will be created and the subscription will become part of the group with the specified target customer set as the responsible payer for the group's subscriptions.


        **Please Note:** In order to add an existing subscription to a subscription group, it must belong to either the same customer record as the target, or be within the same customer hierarchy.


        Rather than specifying a customer, the `target` parameter could instead simply have a value of

        * `"self"` which indicates the subscription will be paid for not by some other customer, but by the subscribing customer,

        * `"parent"` which indicates the subscription will be paid for by the subscribing customer's parent within a customer hierarchy, or

        * `"eldest"` which indicates the subscription will be paid for by the root-level customer in the subscribing customer's hierarchy.


        To create a new subscription into a subscription group, please reference the following:

        [Create Subscription in a Subscription Group](https://developers.chargify.com/docs/api-docs/d571659cf0f24-create-subscription#subscription-in-a-subscription-group)
      operationId: createSubscriptionGroupHierarchy
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddSubscriptiontoaGroup'
              - examples:
                - group:
                    target:
                      type: subscription
                      id: 32987
                    billing:
                      accrue: true
                      align_date: true
                      prorate: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  group:
                    target:
                      type: subscription
                      id: 32987
                    billing:
                      accrue: true
                      align_date: true
                      prorate: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionGroupResponse'
                - examples:
                  - subscription_group:
                      customer_id: 130690
                      payment_profile:
                        id: 32055
                        first_name: Marty
                        last_name: McFly
                        masked_card_number: XXXX-XXXX-XXXX-1111
                      subscription_ids:
                      - 32988
                      - 33060
                      - 32986
                      created_at: 2018-08-30T17:14:30-04:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription_group:
                      customer_id: 130690
                      payment_profile:
                        id: 32055
                        first_name: Marty
                        last_name: McFly
                        masked_card_number: XXXX-XXXX-XXXX-1111
                      subscription_ids:
                      - 32988
                      - 33060
                      - 32986
                      created_at: 2018-08-30T17:14:30-04:00
      deprecated: false
    delete:
      tags:
      - Subscription Groups
      summary: removeSubscriptionFromGroup
      description: For sites making use of the [Relationship Billing](https://chargify.zendesk.com/hc/en-us/articles/4407737494171) and [Customer Hierarchy](https://chargify.zendesk.com/hc/en-us/articles/4407746683291) features, it is possible to remove existing subscription from subscription group.
      operationId: removeSubscriptionFromGroup
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - You can not remove primary subscription when there are others in group
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - You can not remove primary subscription when there are others in group
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/prepayments.json:
    post:
      tags:
      - Subscription Group Invoice Account
      summary: createSubscriptionGroupPrepayment
      description: A prepayment can be added for a subscription group identified by the group's `uid`. This endpoint requires a `amount`, `details`, `method`, and `memo`. On success, the prepayment will be added to the group's prepayment balance.
      operationId: createSubscriptionGroupPrepayment
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SubscriptionGroupPrepaymentRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionGroupPrepaymentResponse'
                - examples:
                  - id: 6049554
                    amount_in_cents: 10000
                    ending_balance_in_cents: 5000
                    entry_type: Debit
                    memo: Debit from invoice account.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    id: 6049554
                    amount_in_cents: 10000
                    ending_balance_in_cents: 5000
                    entry_type: Debit
                    memo: Debit from invoice account.
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Amount must be greater than 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Amount must be greater than 0
      deprecated: false
    get:
      tags:
      - Subscription Group Invoice Account
      summary: listPrepaymentsForSubscriptionGroup
      description: This request will list a subscription group's prepayments.
      operationId: listPrepaymentsForSubscriptionGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      - name: filter[date_field]
        in: query
        description: >-
          The type of filter you would like to apply to your search.

          Use in query: `filter[date_field]=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionGroupPrepaymentDateField'
          - description: >-
              The type of filter you would like to apply to your search.

              Use in query: `filter[date_field]=created_at`.
            examples:
            - created_at
      - name: filter[end_date]
        in: query
        description: >-
          The end date (format YYYY-MM-DD) with which to filter the date_field.

          Returns prepayments with a timestamp up to and including 11:59:59PM in your site's time zone on the date specified.

          Use in query: `filter[end_date]=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-15
      - name: filter[start_date]
        in: query
        description: >-
          The start date (format YYYY-MM-DD) with which to filter the date_field.

          Returns prepayments with a timestamp at or after midnight (12:00:00 AM) in your site's time zone on the date specified.

          Use in query: `filter[start_date]=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-15
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListSubscriptionGroupPrepaymentResponse'
                - examples:
                  - prepayments:
                    - prepayment:
                        id: 142
                        subscription_group_uid: grp_b4qhx3bvx72t8
                        amount_in_cents: 10000
                        remaining_amount_in_cents: 10000
                        details: test
                        external: true
                        memo: test
                        payment_type: cash
                        created_at: 2023-06-21T04:37:02-04:00
                contentMediaType: application/json
              examples:
                example-success-response:
                  value:
                    prepayments:
                    - prepayment:
                        id: 142
                        subscription_group_uid: grp_b4qhx3bvx72t8
                        amount_in_cents: 10000
                        remaining_amount_in_cents: 10000
                        details: test
                        external: true
                        memo: test
                        payment_type: cash
                        created_at: 2023-06-21T04:37:02-04:00
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
      security:
      - BasicAuth: []
    parameters: []
  /subscription_groups/{uid}/service_credits.json:
    post:
      tags:
      - Subscription Group Invoice Account
      summary: issueSubscriptionGroupServiceCredits
      description: Credit can be issued for a subscription group identified by the group's `uid`. Credit will be added to the group in the amount specified in the request body. The credit will be applied to group member invoices as they are generated.
      operationId: issueSubscriptionGroupServiceCredits
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IssueServiceCreditRequest'
              - examples:
                - service_credit:
                    amount: 10
                    memo: Credit the group account
              contentMediaType: application/json
            examples:
              Example:
                value:
                  service_credit:
                    amount: 10
                    memo: Credit the group account
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ServiceCreditResponse'
                - examples:
                  - service_credit:
                      id: 101
                      amount_in_cents: 1000
                      ending_balance_in_cents: 2000
                      entry_type: Credit
                      memo: Credit to group account
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    service_credit:
                      id: 101
                      amount_in_cents: 1000
                      ending_balance_in_cents: 2000
                      entry_type: Credit
                      memo: Credit to group account
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Amount must be greater than 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Amount must be greater than 0
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/service_credit_deductions.json:
    post:
      tags:
      - Subscription Group Invoice Account
      summary: deductSubscriptionGroupServiceCredits
      description: Credit can be deducted for a subscription group identified by the group's `uid`. Credit will be deducted from the group in the amount specified in the request body.
      operationId: deductSubscriptionGroupServiceCredits
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeductServiceCreditRequest'
              - examples:
                - deduction:
                    amount: 10
                    memo: Deduct from group account
              contentMediaType: application/json
            examples:
              Example:
                value:
                  deduction:
                    amount: 10
                    memo: Deduct from group account
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ServiceCredit'
                - examples:
                  - id: 100
                    amount_in_cents: 1000
                    ending_balance_in_cents: 0
                    entry_type: Debit
                    memo: Debit from group account
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    id: 100
                    amount_in_cents: 1000
                    ending_balance_in_cents: 0
                    entry_type: Debit
                    memo: Debit from group account
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Amount must be greater than 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Amount must be greater than 0
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/cancel.json:
    post:
      tags:
      - Subscription Group Status
      summary: cancelSubscriptionsInGroup
      description: >-
        This endpoint will immediately cancel all subscriptions within the specified group. The group is identified by it's `uid` passed in the URL. To successfully cancel the group, the primary subscription must be on automatic billing. The group members as well must be on automatic billing or they must be prepaid.


        In order to cancel a subscription group while also charging for any unbilled usage on metered or prepaid components, the `charge_unbilled_usage=true` parameter must be included in the request.
      operationId: cancelSubscriptionsInGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CancelGroupedSubscriptionsRequest'
              - examples:
                - charge_unbilled_usage: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  charge_unbilled_usage: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - One or more subscriptions are not on automatic billing
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - One or more subscriptions are not on automatic billing
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/delayed_cancel.json:
    post:
      tags:
      - Subscription Group Status
      summary: initiateDelayedCancellationForGroup
      description: >-
        This endpoint will schedule all subscriptions within the specified group to be canceled at the end of their billing period. The group is identified by it's uid passed in the URL.


        All subscriptions in the group must be on automatic billing in order to successfully cancel them, and the group must not be in a "past_due" state.
      operationId: initiateDelayedCancellationForGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Subscriptions group is in a past due state
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Subscriptions group is in a past due state
      deprecated: false
    delete:
      tags:
      - Subscription Group Status
      summary: stopDelayedCancellationForGroup
      description: Removing the delayed cancellation on a subscription group will ensure that the subscriptions do not get canceled at the end of the period. The request will reset the `cancel_at_end_of_period` flag to false on each member in the group.
      operationId: stopDelayedCancellationForGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Subscriptions group does not have a pending delayed cancellation
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Subscriptions group does not have a pending delayed cancellation
      deprecated: false
    parameters: []
  /subscription_groups/{uid}/reactivate.json:
    post:
      tags:
      - Subscription Group Status
      summary: reactivateSubscriptionGroup
      description: >-
        This endpoint will attempt to reactivate or resume a cancelled subscription group. Upon reactivation, any canceled invoices created after the beginning of the primary subscription's billing period will be reopened and payment will be attempted on them. If the subscription group is being reactivated (as opposed to resumed), new charges will also be assessed for the new billing period.


        Whether a subscription group is reactivated (a new billing period is created) or resumed (the current billing period is respected) will depend on the parameters that are sent with the request as well as the date of the request relative to the primary subscription's period.


        ## Reactivating within the current period


        If a subscription group is cancelled and reactivated within the primary subscription's current period, we can choose to either start a new billing period or maintain the existing one. If we want to maintain the existing billing period the `resume=true` option must be passed in request parameters.


        An exception to the above are subscriptions that are on calendar billing. These subscriptions cannot be reactivated within the current period. If the `resume=true` option is not passed the request will return an error.


        The `resume_members` option is ignored in this case. All eligible group members will be automatically resumed.



        ## Reactivating beyond the current period


        In this case, a subscription group can only be reactivated with a new billing period. If the `resume=true` option is passed it will be ignored.


        Member subscriptions can have billing periods that are longer than the primary (e.g. a monthly primary with annual group members). If the primary subscription in a group cannot be reactivated within the current period, but other group members can be, passing `resume_members=true` will resume the existing billing period for eligible group members. The primary subscription will begin a new billing period.


        For calendar billing subscriptions, the new billing period created will be a partial one, spanning from the date of reactivation to the next corresponding calendar renewal date.
      operationId: reactivateSubscriptionGroup
      parameters:
      - name: uid
        in: path
        description: The uid of the subscription group
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReactivateSubscriptionGroupRequest'
              - examples:
                - resume: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  resume: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReactivateSubscriptionGroupResponse'
                - examples:
                  - uid: grp_93wgm89cbjkw6
                    scheme: 1
                    customer_id: 1
                    payment_profile_id: 1
                    subscription_ids:
                    - 1
                    - 2
                    primary_subscription_id: 1
                    next_assessment_at: 2020-06-18T12:00:00-04:00
                    state: active
                    cancel_at_end_of_period: false
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    uid: grp_93wgm89cbjkw6
                    scheme: 1
                    customer_id: 1
                    payment_profile_id: 1
                    subscription_ids:
                    - 1
                    - 2
                    primary_subscription_id: 1
                    next_assessment_at: 2020-06-18T12:00:00-04:00
                    state: active
                    cancel_at_end_of_period: false
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Must be inside the current billing period to resume this subscription group
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Must be inside the current billing period to resume this subscription group
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/account_balances.json:
    get:
      tags:
      - Subscription Invoice Account
      summary: readAccountBalances
      description: Returns the `balance_in_cents` of the Subscription's Pending Discount, Service Credit, and Prepayment accounts, as well as the sum of the Subscription's open, payable invoices.
      operationId: readAccountBalances
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalances'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/prepayments.json:
    post:
      tags:
      - Subscription Invoice Account
      summary: createPrepayment
      description: >
        ## Create Prepayment


        In order to specify a prepayment made against a subscription, specify the `amount, memo, details, method`.


        When the `method` specified is `"credit_card_on_file"`, the prepayment amount will be collected using the default credit card payment profile and applied to the prepayment account balance.  This is especially useful for manual replenishment of prepaid subscriptions.


        Please note that you **can't** pass `amount_in_cents`.
      operationId: createPrepayment
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePrepaymentRequest'
              - examples:
                - prepayment:
                    amount: 100
                    details: John Doe signup for $100
                    memo: Signup for $100
                    method: check
              contentMediaType: application/json
            examples:
              Example:
                value:
                  prepayment:
                    amount: 100
                    details: John Doe signup for $100
                    memo: Signup for $100
                    method: check
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreatePrepaymentResponse'
                - examples:
                  - prepayment:
                      id: 1
                      subscription_id: 1
                      amount_in_cents: 10000
                      memo: John Doe - Prepayment
                      created_at: 2020-07-31T05:52:32-04:00
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: -10000
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    prepayment:
                      id: 1
                      subscription_id: 1
                      amount_in_cents: 10000
                      memo: John Doe - Prepayment
                      created_at: 2020-07-31T05:52:32-04:00
                      starting_balance_in_cents: 0
                      ending_balance_in_cents: -10000
      deprecated: false
    get:
      tags:
      - Subscription Invoice Account
      summary: listPrepayments
      description: This request will list a subscription's prepayments.
      operationId: listPrepayments
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: filter[date_field]
        in: query
        description: The type of filter you would like to apply to your search. created_at - Time when prepayment was created. application_at - Time when prepayment was applied to invoice. Use in query `filter[date_field]=created_at`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BasicDateField'
          - description: The type of filter you would like to apply to your search. created_at - Time when prepayment was created. application_at - Time when prepayment was applied to invoice. Use in query `filter[date_field]=created_at`.
            examples:
            - updated_at
      - name: filter[start_date]
        in: query
        description: The start date (format YYYY-MM-DD) with which to filter the date_field. Returns prepayments with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified. Use in query `filter[start_date]=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-15
      - name: filter[end_date]
        in: query
        description: The end date (format YYYY-MM-DD) with which to filter the date_field. Returns prepayments with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified. Use in query `filter[end_date]=2011-12-15`.
        style: form
        explode: true
        schema:
          type: string
          contentEncoding: date
          examples:
          - 2011-12-15
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PrepaymentsResponse'
                - examples:
                  - prepayments:
                    - id: 17
                      subscription_id: 3558750
                      amount_in_cents: 2000
                      remaining_amount_in_cents: 1100
                      refunded_amount_in_cents: 0
                      external: true
                      memo: test
                      details: test details
                      payment_type: cash
                      created_at: 2022-01-18T22:45:41+11:00
                contentMediaType: application/json
              examples:
                example-success-response:
                  value:
                    prepayments:
                    - id: 17
                      subscription_id: 3558750
                      amount_in_cents: 2000
                      remaining_amount_in_cents: 1100
                      refunded_amount_in_cents: 0
                      external: true
                      memo: test
                      details: test details
                      payment_type: cash
                      created_at: 2022-01-18T22:45:41+11:00
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/service_credits.json:
    post:
      tags:
      - Subscription Invoice Account
      summary: issueServiceCredit
      description: Credit will be added to the subscription in the amount specified in the request body. The credit is subsequently applied to the next generated invoice.
      operationId: issueServiceCredit
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IssueServiceCreditRequest'
              - examples:
                - service_credit:
                    amount: '1'
                    memo: Courtesy credit
              contentMediaType: application/json
            examples:
              Example:
                value:
                  service_credit:
                    amount: '1'
                    memo: Courtesy credit
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ServiceCredit'
                - examples:
                  - id: 101
                    amount_in_cents: 1000
                    ending_balance_in_cents: 2000
                    entry_type: Credit
                    memo: Credit to group account
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    id: 101
                    amount_in_cents: 1000
                    ending_balance_in_cents: 2000
                    entry_type: Credit
                    memo: Credit to group account
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/service_credit_deductions.json:
    post:
      tags:
      - Subscription Invoice Account
      summary: deductServiceCredit
      description: Credit will be removed from the subscription in the amount specified in the request body. The credit amount being deducted must be equal to or less than the current credit balance.
      operationId: deductServiceCredit
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeductServiceCreditRequest'
              - examples:
                - deduction:
                    amount: '1'
                    memo: Deduction
              contentMediaType: application/json
            examples:
              Example:
                value:
                  deduction:
                    amount: '1'
                    memo: Deduction
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Amount cannot exceed current service credit account balance.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Amount cannot exceed current service credit account balance.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/prepayments/{prepayment_id}/refunds.json:
    post:
      tags:
      - Subscription Invoice Account
      summary: refundPrepayment
      description: >-
        This endpoint will refund, completely or partially, a particular prepayment applied to a subscription. The `prepayment_id` will be the account transaction ID of the original payment. The prepayment must have some amount remaining in order to be refunded.


        The amount may be passed either as a decimal, with `amount`, or an integer in cents, with `amount_in_cents`.
      operationId: refundPrepayment
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: prepayment_id
        in: path
        description: id of prepayment
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RefundPrepaymentRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaymentResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RefundPrepaymentBaseErrorsResponse1'
                - description: Errors returned on creating a refund prepayment when bad request
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                type: string
                contentMediaType: application/json
        '422':
          description: Unprocessable Entity
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RefundPrepaymentAggregatedErrorsResponse1'
                - description: Errors returned on creating a refund prepayment, grouped by field, as arrays of strings.
                  examples:
                  - errors:
                      refund:
                        amount_in_cents:
                        - Refund amount exceeds prepayment amount
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                      refund:
                        amount_in_cents:
                        - Refund amount exceeds prepayment amount
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/notes.json:
    post:
      tags:
      - Subscription Notes
      summary: createSubscriptionNote
      description: >-
        Use the following method to create a note for a subscription.


        ## How to Use Subscription Notes


        Notes allow you to record information about a particular Subscription in a free text format.


        If you have structured data such as birth date, color, etc., consider using Metadata instead.


        Full documentation on how to use Notes in the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404434903181-Subscription-Summary#notes).
      operationId: createSubscriptionNote
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSubscriptionNoteRequest'
              - examples:
                - note:
                    body: New test note.
                    sticky: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  note:
                    body: New test note.
                    sticky: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionNoteResponse'
      deprecated: false
    get:
      tags:
      - Subscription Notes
      summary: listSubscriptionNotes
      description: Use this method to retrieve a list of Notes associated with a Subscription. The response will be an array of Notes.
      operationId: listSubscriptionNotes
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionNoteResponse'
                description: ''
                examples:
                - - note:
                      body: Test note.
                      created_at: 2015-06-15T13:26:47-04:00
                      id: 5
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:28:12-04:00
                  - note:
                      body: Another test note.
                      created_at: 2015-06-15T12:04:46-04:00
                      id: 4
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:26:33-04:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - note:
                      body: Test note.
                      created_at: 2015-06-15T13:26:47-04:00
                      id: 5
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:28:12-04:00
                  - note:
                      body: Another test note.
                      created_at: 2015-06-15T12:04:46-04:00
                      id: 4
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:26:33-04:00
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/notes/{note_id}.json:
    get:
      tags:
      - Subscription Notes
      summary: readSubscriptionNote
      description: Once you have obtained the ID of the note you wish to read, use this method to show a particular note attached to a subscription.
      operationId: readSubscriptionNote
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: note_id
        in: path
        description: The Chargify id of the note
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionNoteResponse'
                - examples:
                  - note:
                      body: Test note.
                      created_at: 2015-06-15T13:26:47-04:00
                      id: 5
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:28:12-04:00
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    note:
                      body: Test note.
                      created_at: 2015-06-15T13:26:47-04:00
                      id: 5
                      sticky: false
                      subscription_id: 100046
                      updated_at: 2015-06-15T13:28:12-04:00
      deprecated: false
    put:
      tags:
      - Subscription Notes
      summary: updateSubscriptionNote
      description: Use the following method to update a note for a Subscription.
      operationId: updateSubscriptionNote
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: note_id
        in: path
        description: The Chargify id of the note
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSubscriptionNoteRequest'
              - examples:
                - note:
                    body: Modified test note.
                    sticky: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  note:
                    body: Modified test note.
                    sticky: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionNoteResponse'
      deprecated: false
    delete:
      tags:
      - Subscription Notes
      summary: deleteSubscriptionNote
      description: Use the following method to delete a note for a Subscription.
      operationId: deleteSubscriptionNote
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: note_id
        in: path
        description: The Chargify id of the note
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/migrations.json:
    post:
      tags:
      - Subscription Products
      summary: migrateSubscriptionProduct
      description: >-
        In order to create a migration, you must pass the `product_id` or `product_handle` in the object when you send a POST request. You may also pass either a `product_price_point_id` or `product_price_point_handle` to choose which price point the subscription is moved to. If no price point identifier is passed the subscription will be moved to the products default price point. The response will be the updated subscription.


        ## Valid Subscriptions


        Subscriptions should be in the `active` or `trialing` state in order to be migrated.


        (For backwards compatibility reasons, it is possible to migrate a subscription that is in the `trial_ended` state via the API, however this is not recommended.  Since `trial_ended` is an end-of-life state, the subscription should be canceled, the product changed, and then the subscription can be reactivated.)


        ## Migrations Documentation


        Full documentation on how to record Migrations in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407898373531).


        ## Failed Migrations


        One of the most common ways that a migration can fail is when the attempt is made to migrate a subscription to it's current product. Please be aware of this issue!


        ## Migration 3D Secure - Stripe


        It may happen that a payment needs 3D Secure Authentication when the subscription is migrated to a new product; this is referred to in our help docs as a [post-authentication flow](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405177432077#psd2-flows-pre-authentication-and-post-authentication). The server returns `422 Unprocessable Entity` in this case with the following response:


        ```json

        {
          "errors": [
            "Your card was declined. This transaction requires 3D secure authentication."
          ],
          "gateway_payment_id": "pi_1F0aGoJ2UDb3Q4av7zU3sHPh",
          "description": "This card requires 3D secure authentication. Redirect the customer to the URL from the action_link attribute to authenticate. Attach callback_url param to this URL if you want to be notified about the result of 3D Secure authentication. Attach redirect_url param to this URL if you want to redirect a customer back to your page after 3D Secure authentication. Example: https://mysite.chargify.com/3d-secure/pi_1FCm4RKDeye4C0XfbqquXRYm?one_time_token_id=128&callback_url=https://localhost:4000&redirect_url=https://yourpage.com will do a POST request to https://localhost:4000 after payment is authenticated and will redirect a customer to https://yourpage.com after 3DS authentication.",
          "action_link": "http://acme.chargify.com/3d-secure/pi_1F0aGoJ2UDb3Q4av7zU3sHPh?one_time_token_id=242"
        }

        ```


        To let the customer go through 3D Secure Authentication, they need to be redirected to the URL specified in `action_link`.

        Optionally, you can specify `callback_url` parameter in the `action_link` URL if you’d like to be notified about the result of 3D Secure Authentication. The `callback_url` will return the following information:


        - whether the authentication was successful (`success`)

        - the gateway ID for the payment (`gateway_payment_id`)

        - the subscription ID (`subscription_id`)


        Lastly, you can also specify a `redirect_url` within the `action_link` URL if you’d like to redirect a customer back to your site.


        It is not possible to use `action_link` in an iframe inside a custom application. You have to redirect the customer directly to the `action_link`, then, to be notified about the result, use `redirect_url` or `callback_url`.


        The final URL that you send a customer to to complete 3D Secure may resemble the following, where the first half is the `action_link` and the second half contains a `redirect_url` and `callback_url`: `https://mysite.chargify.com/3d-secure/pi_1FCm4RKDeye4C0XfbqquXRYm?one_time_token_id=128&callback_url=https://localhost:4000&redirect_url=https://yourpage.com`


        ### Example Redirect Flow


        You may wish to redirect customers to different pages depending on whether their SCA was performed successfully. Here's an example flow to use as a reference:


        1. Create a migration via API; it requires 3DS

        2. You receive a `gateway_payment_id` in the `action_link` along other params in the response.

        3. Use this `gateway_payment_id` to, for example, connect with your internal resources or generate a session_id

        4. Include 1 of those attributes inside the `callback_url` and `redirect_url` to be aware which “session” this applies to

        5. Redirect the customer to the `action_link` with `callback_url` and `redirect_url` applied

        6. After the customer finishes 3DS authentication, we let you know the result by making a request to applied `callback_url`.

        7. After that, we redirect the customer to the `redirect_url`; at this point the result of authentication is known

        8. Optionally, you can use the applied "msg" param in the `redirect_url` to determine whether it was successful or not.
      operationId: migrateSubscriptionProduct
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SubscriptionProductMigrationRequest'
              - examples:
                - migration:
                    product_id: 3801242
                    include_trial: false
                    include_initial_charge: false
                    include_coupons: true
                    preserve_period: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  migration:
                    product_id: 3801242
                    include_trial: false
                    include_initial_charge: false
                    include_coupons: true
                    preserve_period: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 15054201
                      state: trialing
                      trial_started_at: 2016-11-03T13:43:36-04:00
                      trial_ended_at: 2016-11-10T12:43:36-05:00
                      activated_at: 2016-11-02T10:20:57-04:00
                      created_at: 2016-11-02T10:20:55-04:00
                      updated_at: 2016-11-03T13:43:36-04:00
                      expires_at: null
                      balance_in_cents: -13989
                      current_period_ends_at: 2016-11-10T12:43:36-05:00
                      next_assessment_at: 2016-11-10T12:43:36-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2016-11-03T13:43:35-04:00
                      previous_state: active
                      signup_payment_id: 160680121
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 6
                      payment_type: credit_card
                      referral_code: ghnhvy
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      customer:
                        id: 14543792
                        first_name: Frankie
                        last_name: Test
                        organization: null
                        email: testfrankie111@test.com
                        created_at: 2016-11-02T10:20:55-04:00
                        updated_at: 2016-11-02T10:20:58-04:00
                        reference: null
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: '5555551212'
                        portal_invite_last_sent_at: 2016-11-02T10:20:58-04:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2016-11-02T10:20:58-04:00
                        cc_emails: null
                      product:
                        id: 3861800
                        name: Trial Product
                        handle: trial-product
                        description: Trial period with payment expected at end of trial.
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2016-07-08T09:53:55-04:00
                        updated_at: 2016-09-05T13:00:36-04:00
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: 0
                        trial_interval: 7
                        trial_interval_unit: day
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        initial_charge_after_trial: false
                        version_number: 6
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          description: ''
                          handle: billing-plans
                          accounting_code: null
                        public_signup_pages:
                        - id: 294791
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product
                      credit_card:
                        id: 10088716
                        first_name: F
                        last_name: NB
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2017
                        customer_id: 14543792
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: 123 Montana Way
                        billing_city: Billings
                        billing_state: MT
                        billing_zip: '59101'
                        billing_country: US
                        customer_vault_token: null
                        billing_address_2: Apt. 10
                        payment_type: credit_card
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 15054201
                      state: trialing
                      trial_started_at: 2016-11-03T13:43:36-04:00
                      trial_ended_at: 2016-11-10T12:43:36-05:00
                      activated_at: 2016-11-02T10:20:57-04:00
                      created_at: 2016-11-02T10:20:55-04:00
                      updated_at: 2016-11-03T13:43:36-04:00
                      expires_at: null
                      balance_in_cents: -13989
                      current_period_ends_at: 2016-11-10T12:43:36-05:00
                      next_assessment_at: 2016-11-10T12:43:36-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2016-11-03T13:43:35-04:00
                      previous_state: active
                      signup_payment_id: 160680121
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 14000
                      product_price_in_cents: 1000
                      product_version_number: 6
                      payment_type: credit_card
                      referral_code: ghnhvy
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      customer:
                        id: 14543792
                        first_name: Frankie
                        last_name: Test
                        organization: null
                        email: testfrankie111@test.com
                        created_at: 2016-11-02T10:20:55-04:00
                        updated_at: 2016-11-02T10:20:58-04:00
                        reference: null
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: '5555551212'
                        portal_invite_last_sent_at: 2016-11-02T10:20:58-04:00
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2016-11-02T10:20:58-04:00
                        cc_emails: null
                      product:
                        id: 3861800
                        name: Trial Product
                        handle: trial-product
                        description: Trial period with payment expected at end of trial.
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2016-07-08T09:53:55-04:00
                        updated_at: 2016-09-05T13:00:36-04:00
                        price_in_cents: 1000
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: 0
                        trial_interval: 7
                        trial_interval_unit: day
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        initial_charge_after_trial: false
                        version_number: 6
                        update_return_params: ''
                        product_family:
                          id: 527890
                          name: Acme Projects
                          description: ''
                          handle: billing-plans
                          accounting_code: null
                        public_signup_pages:
                        - id: 294791
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/xv52yrcc3byx/trial-product
                      credit_card:
                        id: 10088716
                        first_name: F
                        last_name: NB
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2017
                        customer_id: 14543792
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: 123 Montana Way
                        billing_city: Billings
                        billing_state: MT
                        billing_zip: '59101'
                        billing_country: US
                        customer_vault_token: null
                        billing_address_2: Apt. 10
                        payment_type: credit_card
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - No credit card was on file for the $200.00 balance
                    - This subscription is not eligible for a prorated migration
                    - Invalid Product
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - No credit card was on file for the $200.00 balance
                    - This subscription is not eligible for a prorated migration
                    - Invalid Product
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/migrations/preview.json:
    post:
      tags:
      - Subscription Products
      summary: previewSubscriptionProductMigration
      description: >-
        ## Previewing a future date

        It is also possible to preview the migration for a date in the future, as long as it's still within the subscription's current billing period, by passing a `proration_date` along with the request (eg: `"proration_date": "2020-12-18T18:25:43.511Z"`).


        This will calculate the prorated adjustment, charge, payment and credit applied values assuming the migration is done at that date in the future as opposed to right now.
      operationId: previewSubscriptionProductMigration
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SubscriptionMigrationPreviewRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionMigrationPreviewResponse'
                - examples:
                  - migration:
                      prorated_adjustment_in_cents: 0
                      charge_in_cents: 5000
                      payment_due_in_cents: 0
                      credit_applied_in_cents: 0
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    migration:
                      prorated_adjustment_in_cents: 0
                      charge_in_cents: 5000
                      payment_due_in_cents: 0
                      credit_applied_in_cents: 0
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Subscription must be active
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Subscription must be active
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/retry.json:
    put:
      tags:
      - Subscription Status
      summary: retrySubscription
      description: >-
        Chargify offers the ability to retry collecting the balance due on a past due Subscription without waiting for the next scheduled attempt.


        ## Successful Reactivation


        The response will be `200 OK` with the updated Subscription.


        ## Failed Reactivation


        The response will be `422 "Unprocessable Entity`.
      operationId: retrySubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 46330
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-10-22T13:10:46-06:00
                      created_at: 2018-10-22T13:10:46-06:00
                      updated_at: 2021-06-10T09:23:43-06:00
                      expires_at: null
                      balance_in_cents: 18600
                      current_period_ends_at: 2021-06-22T13:10:46-06:00
                      next_assessment_at: 2021-06-22T13:10:46-06:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: null
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      product_price_point_id: 3464
                      next_product_price_point_id: null
                      receives_invoice_emails: null
                      net_terms: null
                      locale: null
                      currency: USD
                      reference: null
                      scheduled_cancellation_at: null
                      current_period_started_at: 2021-05-22T13:10:46-06:00
                      previous_state: past_due
                      signup_payment_id: 651268
                      signup_revenue: '6.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 600
                      product_price_in_cents: 600
                      product_version_number: 501
                      payment_type: null
                      referral_code: rzqvrx
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      coupon_codes: []
                      offer_id: null
                      credit_balance_in_cents: 0
                      prepayment_balance_in_cents: 0
                      payer_id: 142365
                      stored_credential_transaction_id: null
                      next_product_handle: null
                      on_hold_at: null
                      prepaid_dunning: false
                      customer:
                        id: 142365
                        first_name: Lavern
                        last_name: Fahey
                        organization: null
                        email: millie2@example.com
                        created_at: 2018-10-22T13:10:46-06:00
                        updated_at: 2018-10-22T13:10:46-06:00
                        reference: null
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: null
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2018-10-22T13:10:46-06:00
                        vat_number: null
                        cc_emails: john@example.com, sue@example.com
                        tax_exempt: false
                        parent_id: null
                        locale: null
                      product:
                        id: 8080
                        name: Pro Versions
                        handle: null
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: month
                        created_at: 2019-02-15T10:15:00-07:00
                        updated_at: 2019-02-15T10:30:34-07:00
                        price_in_cents: 600
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        require_shipping_address: false
                        request_billing_address: false
                        require_billing_address: false
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        default_product_price_point_id: 3464
                        version_number: 501
                        update_return_params: ''
                        product_price_point_id: 3464
                        product_price_point_name: Default
                        product_price_point_handle: uuid:5305c3f0-1375-0137-5619-065dfbfdc636
                        product_family:
                          id: 37
                          name: Acme Projects
                          description: null
                          handle: acme-projects
                          accounting_code: null
                          created_at: 2013-02-20T15:05:51-07:00
                          updated_at: 2013-02-20T15:05:51-07:00
                        public_signup_pages:
                        - id: 1540
                          return_url: null
                          return_params: ''
                          url: https://acme-test.staging-chargifypay.com/subscribe/2f6y53rrqgsf
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 46330
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-10-22T13:10:46-06:00
                      created_at: 2018-10-22T13:10:46-06:00
                      updated_at: 2021-06-10T09:23:43-06:00
                      expires_at: null
                      balance_in_cents: 18600
                      current_period_ends_at: 2021-06-22T13:10:46-06:00
                      next_assessment_at: 2021-06-22T13:10:46-06:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: null
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      product_price_point_id: 3464
                      next_product_price_point_id: null
                      receives_invoice_emails: null
                      net_terms: null
                      locale: null
                      currency: USD
                      reference: null
                      scheduled_cancellation_at: null
                      current_period_started_at: 2021-05-22T13:10:46-06:00
                      previous_state: past_due
                      signup_payment_id: 651268
                      signup_revenue: '6.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 600
                      product_price_in_cents: 600
                      product_version_number: 501
                      payment_type: null
                      referral_code: rzqvrx
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      coupon_codes: []
                      offer_id: null
                      credit_balance_in_cents: 0
                      prepayment_balance_in_cents: 0
                      payer_id: 142365
                      stored_credential_transaction_id: null
                      next_product_handle: null
                      on_hold_at: null
                      prepaid_dunning: false
                      customer:
                        id: 142365
                        first_name: Lavern
                        last_name: Fahey
                        organization: null
                        email: millie2@example.com
                        created_at: 2018-10-22T13:10:46-06:00
                        updated_at: 2018-10-22T13:10:46-06:00
                        reference: null
                        address: null
                        address_2: null
                        city: null
                        state: null
                        zip: null
                        country: null
                        phone: null
                        portal_invite_last_sent_at: null
                        portal_invite_last_accepted_at: null
                        verified: false
                        portal_customer_created_at: 2018-10-22T13:10:46-06:00
                        vat_number: null
                        cc_emails: john@example.com, sue@example.com
                        tax_exempt: false
                        parent_id: null
                        locale: null
                      product:
                        id: 8080
                        name: Pro Versions
                        handle: null
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: month
                        created_at: 2019-02-15T10:15:00-07:00
                        updated_at: 2019-02-15T10:30:34-07:00
                        price_in_cents: 600
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        require_shipping_address: false
                        request_billing_address: false
                        require_billing_address: false
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        default_product_price_point_id: 3464
                        version_number: 501
                        update_return_params: ''
                        product_price_point_id: 3464
                        product_price_point_name: Default
                        product_price_point_handle: uuid:5305c3f0-1375-0137-5619-065dfbfdc636
                        product_family:
                          id: 37
                          name: Acme Projects
                          description: null
                          handle: acme-projects
                          accounting_code: null
                          created_at: 2013-02-20T15:05:51-07:00
                          updated_at: 2013-02-20T15:05:51-07:00
                        public_signup_pages:
                        - id: 1540
                          return_url: null
                          return_params: ''
                          url: https://acme-test.staging-chargifypay.com/subscribe/2f6y53rrqgsf
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'base: subscription retry was unsuccessful'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'base: subscription retry was unsuccessful'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/resume.json:
    post:
      tags:
      - Subscription Status
      summary: resumeSubscription
      description: Resume a paused (on-hold) subscription. If the normal next renewal date has not passed, the subscription will return to active and will renew on that date.  Otherwise, it will behave like a reactivation, setting the billing date to 'now' and charging the subscriber.
      operationId: resumeSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      - name: calendar_billing['resumption_charge']
        in: query
        description: (For calendar billing subscriptions only) The way that the resumed subscription's charge should be handled
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ResumptionCharge'
          - description: (For calendar billing subscriptions only) The way that the resumed subscription's charge should be handled
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Only subscriptions that are on hold can be resumed.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Only subscriptions that are on hold can be resumed.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/hold.json:
    post:
      tags:
      - Subscription Status
      summary: pauseSubscription
      description: >-
        This will place the subscription in the on_hold state and it will not renew.


        ## Limitations


        You may not place a subscription on hold if the `next_billing` date is within 24 hours.
      operationId: pauseSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PauseRequest'
              - examples:
                - hold:
                    automatically_resume_at: 2017-05-25T11:25:00Z
              contentMediaType: application/json
            examples:
              Example:
                value:
                  hold:
                    automatically_resume_at: 2017-05-25T11:25:00Z
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 18220670
                      state: on_hold
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 18220670
                      state: on_hold
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - This subscription is not eligible to be put on hold.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - This subscription is not eligible to be put on hold.
      deprecated: false
    put:
      tags:
      - Subscription Status
      summary: updateAutomaticSubscriptionResumption
      description: >-
        Once a subscription has been paused / put on hold, you can update the date which was specified to automatically resume the subscription.


        To update a subscription's resume date, use this method to change or update the `automatically_resume_at` date.


        ### Remove the resume date


        Alternately, you can change the `automatically_resume_at` to `null` if you would like the subscription to not have a resume date.
      operationId: updateAutomaticSubscriptionResumption
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PauseRequest'
              - examples:
                - hold:
                    automatically_resume_at: 2019-01-20T00:00:00
              contentMediaType: application/json
            examples:
              Example:
                value:
                  hold:
                    automatically_resume_at: 2019-01-20T00:00:00
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 20359140
                      state: on_hold
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-01-05T17:15:50-06:00
                      created_at: 2018-01-05T17:15:49-06:00
                      updated_at: 2018-01-09T10:26:14-06:00
                      expires_at: null
                      balance_in_cents: 0
                      current_period_ends_at: 2023-01-05T17:15:00-06:00
                      next_assessment_at: 2023-01-05T17:15:00-06:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2018-01-05T17:15:49-06:00
                      previous_state: active
                      signup_payment_id: 219829722
                      signup_revenue: '100.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 10009991
                      product_price_in_cents: 10000
                      product_version_number: 1
                      payment_type: credit_card
                      referral_code: 8y7jqr
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: 2019-01-20T00:00:00-06:00
                      coupon_codes: []
                      customer:
                        id: 19948683
                        first_name: Vanessa
                        last_name: Test
                        organization: ''
                        email: vanessa@example.com
                        created_at: 2018-01-05T17:15:49-06:00
                        updated_at: 2018-01-05T17:15:51-06:00
                        reference: null
                        address: 123 Anywhere Ln
                        address_2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                        phone: 555-555-1212
                        portal_invite_last_sent_at: 2018-01-05T17:15:51-06:00
                        portal_invite_last_accepted_at: null
                        verified: null
                        portal_customer_created_at: 2018-01-05T17:15:51-06:00
                        cc_emails: null
                        tax_exempt: false
                      product:
                        id: 4535643
                        name: Annual Product
                        handle: annual-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-08-25T10:25:31-05:00
                        updated_at: 2017-08-25T10:25:31-05:00
                        price_in_cents: 10000
                        interval: 12
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 1025627
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages: []
                      credit_card:
                        id: 13826563
                        first_name: Bomb 3
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2028
                        customer_id: 19948683
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: 123 Anywhere Lane
                        billing_city: Boston
                        billing_state: Ma
                        billing_zip: '02120'
                        billing_country: US
                        customer_vault_token: null
                        billing_address_2: ''
                        payment_type: credit_card
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 20359140
                      state: on_hold
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2018-01-05T17:15:50-06:00
                      created_at: 2018-01-05T17:15:49-06:00
                      updated_at: 2018-01-09T10:26:14-06:00
                      expires_at: null
                      balance_in_cents: 0
                      current_period_ends_at: 2023-01-05T17:15:00-06:00
                      next_assessment_at: 2023-01-05T17:15:00-06:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: null
                      cancellation_method: null
                      current_period_started_at: 2018-01-05T17:15:49-06:00
                      previous_state: active
                      signup_payment_id: 219829722
                      signup_revenue: '100.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 10009991
                      product_price_in_cents: 10000
                      product_version_number: 1
                      payment_type: credit_card
                      referral_code: 8y7jqr
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: 2019-01-20T00:00:00-06:00
                      coupon_codes: []
                      customer:
                        id: 19948683
                        first_name: Vanessa
                        last_name: Test
                        organization: ''
                        email: vanessa@example.com
                        created_at: 2018-01-05T17:15:49-06:00
                        updated_at: 2018-01-05T17:15:51-06:00
                        reference: null
                        address: 123 Anywhere Ln
                        address_2: ''
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                        phone: 555-555-1212
                        portal_invite_last_sent_at: 2018-01-05T17:15:51-06:00
                        portal_invite_last_accepted_at: null
                        verified: null
                        portal_customer_created_at: 2018-01-05T17:15:51-06:00
                        cc_emails: null
                        tax_exempt: false
                      product:
                        id: 4535643
                        name: Annual Product
                        handle: annual-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-08-25T10:25:31-05:00
                        updated_at: 2017-08-25T10:25:31-05:00
                        price_in_cents: 10000
                        interval: 12
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: true
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 1025627
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages: []
                      credit_card:
                        id: 13826563
                        first_name: Bomb 3
                        last_name: Test
                        masked_card_number: XXXX-XXXX-XXXX-1
                        card_type: bogus
                        expiration_month: 1
                        expiration_year: 2028
                        customer_id: 19948683
                        current_vault: bogus
                        vault_token: '1'
                        billing_address: 123 Anywhere Lane
                        billing_city: Boston
                        billing_state: Ma
                        billing_zip: '02120'
                        billing_country: US
                        customer_vault_token: null
                        billing_address_2: ''
                        payment_type: credit_card
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - '{"errors":["Subscription is not currently on hold."]}'
                  - '{"errors":["Automatic resume date: must be at least 24 hours in the future."]}'
                contentMediaType: application/json
              examples:
                Example-1:
                  value:
                    errors:
                    - Subscription is not currently on hold.
                Example-2:
                  value:
                    errors:
                    - 'Automatic resume date: must be at least 24 hours in the future.'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/reactivate.json:
    put:
      tags:
      - Subscription Status
      summary: reactivateSubscription
      description: >-
        Chargify offers the ability to reactivate a previously canceled subscription. For details on how the reactivation works, and how to reactivate subscriptions through the application, see [reactivation](https://chargify.zendesk.com/hc/en-us/articles/4407898737691).


        **Please note: The term

        "resume" is used also during another process in Chargify. This occurs when an on-hold subscription is "resumed". This returns the subscription to an active state.**


        + The response returns the subscription object in the `active` or `trialing` state.

        + The `canceled_at` and `cancellation_message` fields do not have values.

        + The method works for "Canceled" or "Trial Ended" subscriptions.

        + It will not work for items not marked as "Canceled", "Unpaid", or "Trial Ended".


        ## Resume the current billing period for a subscription


        A subscription is considered "resumable" if you are attempting to reactivate within the billing period the subscription was canceled in.


        A resumed subscription's billing date remains the same as before it was canceled. In other words, it does not start a new billing period. Payment may or may not be collected for a resumed subscription, depending on whether or not the subscription had a balance when it was canceled (for example, if it was canceled because of dunning).


        Consider a subscription which was created on June 1st, and would renew on July 1st. The subscription is then canceled on June 15.


        If a reactivation with `resume: true` were attempted _before_ what would have been the next billing date of July 1st, then Chargify would resume the subscription.


        If a reactivation with `resume: true` were attempted _after_ what would have been the next billing date of July 1st, then Chargify would not resume the subscription, and instead it would be reactivated with a new billing period.


        | Canceled | Reactivation | Resumable? |

        |---|---|---|

        | Jun 15 | June 28 | Yes |

        | Jun 15 | July 2 | No |


        ## Reactivation Scenarios


        ### Reactivating Canceled Subscription While Preserving Balance


        + Given you have a product that costs $20

        + Given you have a canceled subscription to the $20 product
            + 1 charge should exist for $20
            + 1 payment should exist for $20
        + When the subscription has canceled due to dunning, it retained a negative balance of $20


        #### Results


        The resulting charges upon reactivation will be:

        + 1 charge for $20 for the new product

        + 1 charge for $20 for the balance due

        + Total charges = $40


        + The subscription will transition to active

        + The subscription balance will be zero


        ### Reactivating a Canceled Subscription With Coupon


        + Given you have a canceled subscription

        + It has no current period defined

        + You have a coupon code "EARLYBIRD"

        + The coupon is set to recur for 6 periods


        PUT request sent to:

        `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?coupon_code=EARLYBIRD`


        #### Results


        + The subscription will transition to active

        + The subscription should have applied a coupon with code "EARLYBIRD"


        ### Reactivating Canceled Subscription With a Trial, Without the include_trial Flag


        + Given you have a canceled subscription

        + The product associated with the subscription has a trial


        + PUT request to

        `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json`



        #### Results

        + The subscription will transition to active


        ### Reactivating Canceled Subscription With Trial, With the include_trial Flag


        + Given you have a canceled subscription

        + The product associated with the subscription has a trial


        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?include_trial=1`



        #### Results


        + The subscription will transition to trialing


        ### Reactivating Trial Ended Subscription


        + Given you have a trial_ended subscription

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json`


        #### Results


        + The subscription will transition to active


        ### Resuming a Canceled Subscription


        + Given you have a `canceled` subscription and it is resumable

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?resume=true`


        #### Results


        + The subscription will transition to active

        + The next billing date should not have changed


        ### Attempting to resume a subscription which is not resumable


        + Given you have a `canceled` subscription, and it is not resumable

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?resume=true`


        #### Results


        + The subscription will transition to active, with a new billing period.


        ### Attempting to resume but not reactivate a subscription which is not resumable


        + Given you have a `canceled` subscription, and it is not resumable

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?resume[require_resume]=true`

        + The response status should be "422 UNPROCESSABLE ENTITY"

        + The subscription should be canceled with the following response

        ```
          {
            "errors": ["Request was 'resume only', but this subscription cannot be resumed."]
          }
        ```


        #### Results


        + The subscription should remain `canceled`

        + The next billing date should not have changed


        ### Resuming Subscription Which Was Trialing


        + Given you have a `trial_ended` subscription, and it is resumable

        + And the subscription was canceled in the middle of a trial

        + And there is still time left on the trial

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?resume=true`


        #### Results


        + The subscription will transition to trialing

        + The next billing date should not have changed


        ### Resuming Subscription Which Was trial_ended


        + Given you have a `trial_ended` subscription, and it is resumable

        + Send a PUT request to `https://acme.chargify.com/subscriptions/{subscription_id}/reactivate.json?resume=true`


        #### Results


        + The subscription will transition to active

        + The next billing date should not have changed

        + Any product-related charges should have been collected
      operationId: reactivateSubscription
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReactivateSubscriptionRequest'
              - examples:
                - calendar_billing:
                    reactivation_charge: prorated
                  include_trial: true
                  preserve_balance: true
                  coupon_code: 10OFF
                  use_credits_and_prepayments: true
                  resume: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  calendar_billing:
                    reactivation_charge: prorated
                  include_trial: true
                  preserve_balance: true
                  coupon_code: 10OFF
                  use_credits_and_prepayments: true
                  resume: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SubscriptionResponse'
                - examples:
                  - subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                        vat_number: '012345678'
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    subscription:
                      id: 18220670
                      state: active
                      trial_started_at: null
                      trial_ended_at: null
                      activated_at: 2017-06-27T13:45:15-05:00
                      created_at: 2017-06-27T13:45:13-05:00
                      updated_at: 2017-06-30T09:26:50-05:00
                      expires_at: null
                      balance_in_cents: 10000
                      current_period_ends_at: 2017-06-30T12:00:00-05:00
                      next_assessment_at: 2017-06-30T12:00:00-05:00
                      canceled_at: null
                      cancellation_message: null
                      next_product_id: null
                      cancel_at_end_of_period: false
                      payment_collection_method: automatic
                      snap_day: end
                      cancellation_method: null
                      current_period_started_at: 2017-06-27T13:45:13-05:00
                      previous_state: active
                      signup_payment_id: 191819284
                      signup_revenue: '0.00'
                      delayed_cancel_at: null
                      coupon_code: null
                      total_revenue_in_cents: 0
                      product_price_in_cents: 0
                      product_version_number: 1
                      payment_type: null
                      referral_code: d3pw7f
                      coupon_use_count: null
                      coupon_uses_allowed: null
                      reason_code: null
                      automatically_resume_at: null
                      current_billing_amount_in_cents: 10000
                      customer:
                        id: 17780587
                        first_name: Catie
                        last_name: Test
                        organization: Acme, Inc.
                        email: catie@example.com
                        created_at: 2017-06-27T13:01:05-05:00
                        updated_at: 2017-06-30T09:23:10-05:00
                        reference: 123ABC
                        address: 123 Anywhere Street
                        address_2: 'Apartment #10'
                        city: Los Angeles
                        state: CA
                        zip: '90210'
                        country: US
                        phone: 555-555-5555
                        portal_invite_last_sent_at: 2017-06-27T13:45:16-05:00
                        portal_invite_last_accepted_at: null
                        verified: true
                        portal_customer_created_at: 2017-06-27T13:01:08-05:00
                        cc_emails: support@example.com
                        tax_exempt: true
                        vat_number: '012345678'
                      product:
                        id: 4470347
                        name: Zero Dollar Product
                        handle: zero-dollar-product
                        description: ''
                        accounting_code: ''
                        request_credit_card: true
                        expiration_interval: null
                        expiration_interval_unit: never
                        created_at: 2017-03-23T10:54:12-05:00
                        updated_at: 2017-04-20T15:18:46-05:00
                        price_in_cents: 0
                        interval: 1
                        interval_unit: month
                        initial_charge_in_cents: null
                        trial_price_in_cents: null
                        trial_interval: null
                        trial_interval_unit: month
                        archived_at: null
                        require_credit_card: false
                        return_params: ''
                        taxable: false
                        update_return_url: ''
                        tax_code: ''
                        initial_charge_after_trial: false
                        version_number: 1
                        update_return_params: ''
                        product_family:
                          id: 997233
                          name: Acme Products
                          description: ''
                          handle: acme-products
                          accounting_code: null
                        public_signup_pages:
                        - id: 316810
                          return_url: ''
                          return_params: ''
                          url: https://general-goods.chargify.com/subscribe/69x825m78v3d/zero-dollar-product
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Cannot reactivate a subscription that is not marked "Canceled", "Unpaid", or "Trial Ended".
                    - Request was 'resume only', but this subscription cannot be resumed.
                    - The credit card on file could not be charged.
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Cannot reactivate a subscription that is not marked "Canceled", "Unpaid", or "Trial Ended".
                    - Request was 'resume only', but this subscription cannot be resumed.
                    - The credit card on file could not be charged.
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/delayed_cancel.json:
    post:
      tags:
      - Subscription Status
      summary: initiateDelayedCancellation
      description: >-
        Chargify offers the ability to cancel a subscription at the end of the current billing period. This period is set by its current product.


        Requesting to cancel the subscription at the end of the period sets the `cancel_at_end_of_period` flag to true.


        Note that you cannot set `cancel_at_end_of_period` at subscription creation, or if the subscription is past due.
      operationId: initiateDelayedCancellation
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CancellationRequest'
              - {}
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayedCancellationResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Subscription Status
      summary: stopDelayedCancellation
      description: >-
        Removing the delayed cancellation on a subscription will ensure that it doesn't get canceled at the end of the period that it is in. The request will reset the `cancel_at_end_of_period` flag to `false`.


        This endpoint is idempotent. If the subscription was not set to cancel in the future, removing the delayed cancellation has no effect and the call will be successful.
      operationId: stopDelayedCancellation
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DelayedCancellationResponse'
                - examples:
                  - message: This subscription will no longer be canceled
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    message: This subscription will no longer be canceled
        '404':
          description: Not Found
          headers: {}
          content: {}
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/cancel_dunning.json:
    post:
      tags:
      - Subscription Status
      summary: cancelDunning
      description: If a subscription is currently in dunning, the subscription will be set to active and the active Dunner will be resolved.
      operationId: cancelDunning
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
      deprecated: false
    parameters: []
  /subscriptions/{subscription_id}/renewals/preview.json:
    post:
      tags:
      - Subscription Status
      summary: previewRenewal
      description: >-
        The Chargify API allows you to preview a renewal by posting to the renewals endpoint. Renewal Preview is an object representing a subscription’s next assessment. You can retrieve it to see a snapshot of how much your customer will be charged on their next renewal.


        The "Next Billing" amount and "Next Billing" date are already represented in the UI on each Subscriber's Summary. For more information, please see our documentation [here](https://chargify.zendesk.com/hc/en-us/articles/4407884887835#next-billing).


        ## Optional Component Fields


        This endpoint is particularly useful due to the fact that it will return the computed billing amount for the base product and the components which are in use by a subscriber.


        By default, the preview will include billing details for all components _at their **current** quantities_. This means:


        * Current `allocated_quantity` for quantity-based components

        * Current enabled/disabled status for on/off components

        * Current metered usage `unit_balance` for metered components

        * Current metric quantity value for events recorded thus far for events-based components


        In the above statements, "current" means the quantity or value as of the call to the renewal preview endpoint. We do not predict end-of-period values for components, so metered or events-based usage may be less than it will eventually be at the end of the period.


        Optionally, **you may provide your own custom quantities** for any component to see a billing preview for non-current quantities. This is accomplished by sending a request body with data under the `components` key. See the request body documentation below.


        ## Subscription Side Effects


        You can request a `POST` to obtain this data from the endpoint without any side effects. Plain and simple, this will preview data, not log any changes against a subscription.
      operationId: previewRenewal
      parameters:
      - name: subscription_id
        in: path
        description: The Chargify id of the subscription
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RenewalPreviewRequest'
              - examples:
                - components:
                  - component_id: 10708
                    quantity: 10000
                  - component_id: handle:small-instance-hours
                    quantity: 10000
                    price_point_id: 8712
                  - component_id: handle:large-instance-hours
                    quantity: 100
                    price_point_id: handle:startup-pricing
              contentMediaType: application/json
            examples:
              Example:
                value:
                  components:
                  - component_id: 10708
                    quantity: 10000
                  - component_id: handle:small-instance-hours
                    quantity: 10000
                    price_point_id: 8712
                  - component_id: handle:large-instance-hours
                    quantity: 100
                    price_point_id: handle:startup-pricing
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RenewalPreviewResponse'
                - examples:
                  - renewal_preview:
                      next_assessment_at: 2017-03-13T12:50:55-04:00
                      subtotal_in_cents: 6000
                      total_tax_in_cents: 0
                      total_discount_in_cents: 0
                      total_in_cents: 6000
                      existing_balance_in_cents: 0
                      total_amount_due_in_cents: 6000
                      uncalculated_taxes: false
                      line_items:
                      - transaction_type: charge
                        kind: baseline
                        amount_in_cents: 5000
                        memo: Gold Product (03/13/2017 - 04/13/2017)
                        discount_amount_in_cents: 0
                        taxable_amount_in_cents: 0
                        product_id: 1
                        product_handle: gold-product
                        product_name: Gold Product
                        period_range_start: 01/10/2024
                        period_range_end: 02/10/2024
                      - transaction_type: charge
                        kind: quantity_based_component
                        amount_in_cents: 1000
                        memo: 'Quantity Component: 10 Quantity Components'
                        discount_amount_in_cents: 0
                        taxable_amount_in_cents: 0
                        component_id: 104
                        component_handle: quantity-component
                        component_name: Quantity Component
                        period_range_start: 01/10/2024
                        period_range_end: 02/10/2024
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    renewal_preview:
                      next_assessment_at: 2017-03-13T12:50:55-04:00
                      subtotal_in_cents: 6000
                      total_tax_in_cents: 0
                      total_discount_in_cents: 0
                      total_in_cents: 6000
                      existing_balance_in_cents: 0
                      total_amount_due_in_cents: 6000
                      uncalculated_taxes: false
                      line_items:
                      - transaction_type: charge
                        kind: baseline
                        amount_in_cents: 5000
                        memo: Gold Product (03/13/2017 - 04/13/2017)
                        discount_amount_in_cents: 0
                        taxable_amount_in_cents: 0
                        product_id: 1
                        product_handle: gold-product
                        product_name: Gold Product
                        period_range_start: 01/10/2024
                        period_range_end: 02/10/2024
                      - transaction_type: charge
                        kind: quantity_based_component
                        amount_in_cents: 1000
                        memo: 'Quantity Component: 10 Quantity Components'
                        discount_amount_in_cents: 0
                        taxable_amount_in_cents: 0
                        component_id: 104
                        component_handle: quantity-component
                        component_name: Quantity Component
                        period_range_start: 01/10/2024
                        period_range_end: 02/10/2024
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Couldn't find Component by handle:unknown
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Couldn't find Component by handle:unknown
      deprecated: false
    parameters: []
  /webhooks.json:
    get:
      tags:
      - Webhooks
      summary: listWebhooks
      description: >-
        ## Webhooks Intro


        The Webhooks API allows you to view a list of all webhooks and to selectively resend individual or groups of webhooks. Webhooks will be sent on endpoints specified by you. Endpoints can be added via API or Web UI. There is also an option to enable / disable webhooks via API request.


        We recommend that you review Chargify's webhook documentation located in our help site. The following resources will help guide you on how to use webhooks in Chargify, in addition to these webhook endpoints:


        + [Adding/editing new webhooks](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404448450317#configure-webhook-url)

        + [Webhooks introduction and delivery information](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405568068365#webhooks-introduction-0-0)

        + [Main webhook overview](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405357509645-Webhooks-Reference#webhooks-reference-0-0)

        + [Available webhooks and payloads](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405357509645-Webhooks-Reference#events)


        ## List Webhooks for a Site


        This method allows you to fetch data about webhooks. You can pass query parameters if you want to filter webhooks.
      operationId: listWebhooks
      parameters:
      - name: status
        in: query
        description: Webhooks with matching status would be returned.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/WebhookStatus'
          - description: Webhooks with matching status would be returned.
      - name: since_date
        in: query
        description: Format YYYY-MM-DD. Returns Webhooks with the created_at date greater than or equal to the one specified.
        style: form
        explode: true
        schema:
          type: string
      - name: until_date
        in: query
        description: Format YYYY-MM-DD. Returns Webhooks with the created_at date less than or equal to the one specified.
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: >-
          Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.

          Use in query `page=1`.
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 1
          examples:
          - 2
      - name: per_page
        in: query
        description: >-
          This parameter indicates how many records to fetch in each request. Default value is 20. The maximum allowed values is 200; any per_page value over 200 will be changed to 200.

          Use in query `per_page=200`.
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 50
      - name: order
        in: query
        description: The order in which the Webhooks are returned.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/WebhookOrder'
          - description: The order in which the Webhooks are returned.
      - name: subscription
        in: query
        description: The Chargify id of a subscription you'd like to filter for
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '201':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookResponse'
                description: ''
                examples:
                - - webhook:
                      event: statement_settled
                      id: 141765032
                      created_at: 2016-11-08T16:22:26-05:00
                      last_error: 404 Resource Not Found (retry 5 of 5)
                      last_error_at: 2016-11-08T16:43:54-05:00
                      accepted_at: null
                      last_sent_at: 2016-11-08T16:43:54-05:00
                      last_sent_url: http://requestb.in/11u45x71
                      successful: false
                      body: id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384
                      signature: 7c606ec4628ce75ec46e284097ce163a
                      signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
                  - webhook:
                      event: payment_success
                      id: 141765008
                      created_at: 2016-11-08T16:22:25-05:00
                      last_error: 404 Resource Not Found (retry 5 of 5)
                      last_error_at: 2016-11-08T16:43:54-05:00
                      accepted_at: null
                      last_sent_at: 2016-11-08T16:43:54-05:00
                      last_sent_url: http://requestb.in/11u45x71
                      successful: false
                      body: id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[subscription][credit_card][site_gateway_setting_id]=&payload[subscription][credit_card][gateway_handle]=&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_response_code]=&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364
                      signature: fbcf2f6be579f9658cff90c4373e0ca2
                      signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - webhook:
                      event: statement_settled
                      id: 141765032
                      created_at: 2016-11-08T16:22:26-05:00
                      last_error: 404 Resource Not Found (retry 5 of 5)
                      last_error_at: 2016-11-08T16:43:54-05:00
                      accepted_at: null
                      last_sent_at: 2016-11-08T16:43:54-05:00
                      last_sent_url: http://requestb.in/11u45x71
                      successful: false
                      body: id=141765032&event=statement_settled&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][balance_in_cents]=0&payload[customer][id]=14585695&payload[customer][first_name]=Pookie&payload[customer][last_name]=Test&payload[customer][reference]=&payload[customer][organization]=&payload[customer][address]=&payload[customer][address_2]=&payload[customer][city]=&payload[customer][state]=&payload[customer][zip]=&payload[customer][country]=&payload[customer][email]=pookie999%40example.com&payload[customer][phone]=&payload[statement][closed_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][id]=80168049&payload[statement][opened_at]=2016-11-07%2016%3A22%3A15%20-0500&payload[statement][settled_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][subscription_id]=15100141&payload[statement][updated_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][starting_balance_in_cents]=0&payload[statement][ending_balance_in_cents]=0&payload[statement][total_in_cents]=6400&payload[statement][memo]=We%20thank%20you%20for%20your%20continued%20business!&payload[statement][events][0][id]=346956565&payload[statement][events][0][key]=renewal_success&payload[statement][events][0][message]=Successful%20renewal%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][1][id]=346956579&payload[statement][events][1][key]=payment_success&payload[statement][events][1][message]=Successful%20payment%20of%20%2464.00%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][events][2][id]=347299359&payload[statement][events][2][key]=renewal_success&payload[statement][events][2][message]=Successful%20renewal%20for%20Pookie%20Test's%20subscription%20to%20%2410%20Basic%20Plan&payload[statement][transactions][0][id]=161537343&payload[statement][transactions][0][subscription_id]=15100141&payload[statement][transactions][0][type]=Charge&payload[statement][transactions][0][kind]=baseline&payload[statement][transactions][0][transaction_type]=charge&payload[statement][transactions][0][success]=true&payload[statement][transactions][0][amount_in_cents]=1000&payload[statement][transactions][0][memo]=%2410%20Basic%20Plan%20(11%2F08%2F2016%20-%2011%2F09%2F2016)&payload[statement][transactions][0][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][0][starting_balance_in_cents]=0&payload[statement][transactions][0][ending_balance_in_cents]=1000&payload[statement][transactions][0][gateway_used]=&payload[statement][transactions][0][gateway_transaction_id]=&payload[statement][transactions][0][gateway_order_id]=&payload[statement][transactions][0][payment_id]=161537369&payload[statement][transactions][0][product_id]=3792003&payload[statement][transactions][0][tax_id]=&payload[statement][transactions][0][component_id]=&payload[statement][transactions][0][statement_id]=80168049&payload[statement][transactions][0][customer_id]=14585695&payload[statement][transactions][0][original_amount_in_cents]=&payload[statement][transactions][0][discount_amount_in_cents]=&payload[statement][transactions][0][taxable_amount_in_cents]=&payload[statement][transactions][1][id]=161537344&payload[statement][transactions][1][subscription_id]=15100141&payload[statement][transactions][1][type]=Charge&payload[statement][transactions][1][kind]=quantity_based_component&payload[statement][transactions][1][transaction_type]=charge&payload[statement][transactions][1][success]=true&payload[statement][transactions][1][amount_in_cents]=5400&payload[statement][transactions][1][memo]=Timesheet%20Users%3A%2018%20Timesheet%20Users&payload[statement][transactions][1][created_at]=2016-11-08%2016%3A22%3A18%20-0500&payload[statement][transactions][1][starting_balance_in_cents]=1000&payload[statement][transactions][1][ending_balance_in_cents]=6400&payload[statement][transactions][1][gateway_used]=&payload[statement][transactions][1][gateway_transaction_id]=&payload[statement][transactions][1][gateway_order_id]=&payload[statement][transactions][1][payment_id]=161537369&payload[statement][transactions][1][product_id]=3792003&payload[statement][transactions][1][tax_id]=&payload[statement][transactions][1][component_id]=277221&payload[statement][transactions][1][statement_id]=80168049&payload[statement][transactions][1][customer_id]=14585695&payload[statement][transactions][1][original_amount_in_cents]=&payload[statement][transactions][1][discount_amount_in_cents]=&payload[statement][transactions][1][taxable_amount_in_cents]=&payload[statement][transactions][2][id]=161537369&payload[statement][transactions][2][subscription_id]=15100141&payload[statement][transactions][2][type]=Payment&payload[statement][transactions][2][kind]=&payload[statement][transactions][2][transaction_type]=payment&payload[statement][transactions][2][success]=true&payload[statement][transactions][2][amount_in_cents]=6400&payload[statement][transactions][2][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[statement][transactions][2][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[statement][transactions][2][starting_balance_in_cents]=6400&payload[statement][transactions][2][ending_balance_in_cents]=0&payload[statement][transactions][2][gateway_used]=bogus&payload[statement][transactions][2][gateway_transaction_id]=53433&payload[statement][transactions][2][gateway_order_id]=&payload[statement][transactions][2][payment_id]=&payload[statement][transactions][2][product_id]=3792003&payload[statement][transactions][2][tax_id]=&payload[statement][transactions][2][component_id]=&payload[statement][transactions][2][statement_id]=80168049&payload[statement][transactions][2][customer_id]=14585695&payload[statement][transactions][2][card_number]=XXXX-XXXX-XXXX-1&payload[statement][transactions][2][card_expiration]=10%2F2020&payload[statement][transactions][2][card_type]=bogus&payload[statement][transactions][2][refunded_amount_in_cents]=0&payload[product][id]=3792003&payload[product][name]=%2410%20Basic%20Plan&payload[product_family][id]=527890&payload[product_family][name]=Acme%20Projects&payload[payment_profile][id]=10102821&payload[payment_profile][first_name]=Pookie&payload[payment_profile][last_name]=Test&payload[payment_profile][billing_address]=&payload[payment_profile][billing_address_2]=&payload[payment_profile][billing_city]=&payload[payment_profile][billing_country]=&payload[payment_profile][billing_state]=&payload[payment_profile][billing_zip]=&payload[event_id]=347299384
                      signature: 7c606ec4628ce75ec46e284097ce163a
                      signature_hmac_sha_256: 40f25e83dd324508bb2149e3e525821922fb210535ebfbfa81e7ab951996b41d
                  - webhook:
                      event: payment_success
                      id: 141765008
                      created_at: 2016-11-08T16:22:25-05:00
                      last_error: 404 Resource Not Found (retry 5 of 5)
                      last_error_at: 2016-11-08T16:43:54-05:00
                      accepted_at: null
                      last_sent_at: 2016-11-08T16:43:54-05:00
                      last_sent_url: http://requestb.in/11u45x71
                      successful: false
                      body: id=141765008&event=payment_success&payload[site][id]=31615&payload[site][subdomain]=general-goods&payload[subscription][id]=15100141&payload[subscription][state]=active&payload[subscription][trial_started_at]=&payload[subscription][trial_ended_at]=&payload[subscription][activated_at]=2016-11-04%2017%3A06%3A43%20-0400&payload[subscription][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][updated_at]=2016-11-08%2016%3A22%3A22%20-0500&payload[subscription][expires_at]=&payload[subscription][balance_in_cents]=0&payload[subscription][current_period_ends_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][next_assessment_at]=2016-11-09%2016%3A06%3A42%20-0500&payload[subscription][canceled_at]=&payload[subscription][cancellation_message]=&payload[subscription][next_product_id]=&payload[subscription][cancel_at_end_of_period]=false&payload[subscription][payment_collection_method]=automatic&payload[subscription][snap_day]=&payload[subscription][cancellation_method]=&payload[subscription][current_period_started_at]=2016-11-08%2016%3A06%3A42%20-0500&payload[subscription][previous_state]=active&payload[subscription][signup_payment_id]=161034048&payload[subscription][signup_revenue]=64.00&payload[subscription][delayed_cancel_at]=&payload[subscription][coupon_code]=&payload[subscription][total_revenue_in_cents]=32000&payload[subscription][product_price_in_cents]=1000&payload[subscription][product_version_number]=7&payload[subscription][payment_type]=credit_card&payload[subscription][referral_code]=pggn84&payload[subscription][coupon_use_count]=&payload[subscription][coupon_uses_allowed]=&payload[subscription][customer][id]=14585695&payload[subscription][customer][first_name]=Test&payload[subscription][customer][last_name]=Test&payload[subscription][customer][organization]=&payload[subscription][customer][email]=pookie999%40example.com&payload[subscription][customer][created_at]=2016-11-04%2017%3A06%3A42%20-0400&payload[subscription][customer][updated_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][reference]=&payload[subscription][customer][address]=&payload[subscription][customer][address_2]=&payload[subscription][customer][city]=&payload[subscription][customer][state]=&payload[subscription][customer][zip]=&payload[subscription][customer][country]=&payload[subscription][customer][phone]=&payload[subscription][customer][portal_invite_last_sent_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][portal_invite_last_accepted_at]=&payload[subscription][customer][verified]=false&payload[subscription][customer][portal_customer_created_at]=2016-11-04%2017%3A06%3A45%20-0400&payload[subscription][customer][cc_emails]=&payload[subscription][product][id]=3792003&payload[subscription][product][name]=%2410%20Basic%20Plan&payload[subscription][product][handle]=basic&payload[subscription][product][description]=lorem%20ipsum&payload[subscription][product][accounting_code]=basic&payload[subscription][product][request_credit_card]=false&payload[subscription][product][expiration_interval]=&payload[subscription][product][expiration_interval_unit]=never&payload[subscription][product][created_at]=2016-03-24%2013%3A38%3A39%20-0400&payload[subscription][product][updated_at]=2016-11-03%2013%3A03%3A05%20-0400&payload[subscription][product][price_in_cents]=1000&payload[subscription][product][interval]=1&payload[subscription][product][interval_unit]=day&payload[subscription][product][initial_charge_in_cents]=&payload[subscription][product][trial_price_in_cents]=&payload[subscription][product][trial_interval]=&payload[subscription][product][trial_interval_unit]=month&payload[subscription][product][archived_at]=&payload[subscription][product][require_credit_card]=false&payload[subscription][product][return_params]=&payload[subscription][product][taxable]=false&payload[subscription][product][update_return_url]=&payload[subscription][product][initial_charge_after_trial]=false&payload[subscription][product][version_number]=7&payload[subscription][product][update_return_params]=&payload[subscription][product][product_family][id]=527890&payload[subscription][product][product_family][name]=Acme%20Projects&payload[subscription][product][product_family][description]=&payload[subscription][product][product_family][handle]=billing-plans&payload[subscription][product][product_family][accounting_code]=&payload[subscription][product][public_signup_pages][id]=281054&payload[subscription][product][public_signup_pages][return_url]=http%3A%2F%2Fwww.example.com%3Fsuccessfulsignup&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fkqvmfrbgd89q%2Fbasic&payload[subscription][product][public_signup_pages][id]=281240&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fdkffht5dxfd8%2Fbasic&payload[subscription][product][public_signup_pages][id]=282694&payload[subscription][product][public_signup_pages][return_url]=&payload[subscription][product][public_signup_pages][return_params]=&payload[subscription][product][public_signup_pages][url]=https%3A%2F%2Fgeneral-goods.chargify.com%2Fsubscribe%2Fjwffwgdd95s8%2Fbasic&payload[subscription][credit_card][id]=10102821&payload[subscription][credit_card][first_name]=Pookie&payload[subscription][credit_card][last_name]=Test&payload[subscription][credit_card][masked_card_number]=XXXX-XXXX-XXXX-1&payload[subscription][credit_card][card_type]=bogus&payload[subscription][credit_card][expiration_month]=10&payload[subscription][credit_card][expiration_year]=2020&payload[subscription][credit_card][customer_id]=14585695&payload[subscription][credit_card][current_vault]=bogus&payload[subscription][credit_card][vault_token]=1&payload[subscription][credit_card][billing_address]=&payload[subscription][credit_card][billing_city]=&payload[subscription][credit_card][billing_state]=&payload[subscription][credit_card][billing_zip]=&payload[subscription][credit_card][billing_country]=&payload[subscription][credit_card][customer_vault_token]=&payload[subscription][credit_card][billing_address_2]=&payload[subscription][credit_card][payment_type]=credit_card&payload[subscription][credit_card][site_gateway_setting_id]=&payload[subscription][credit_card][gateway_handle]=&payload[transaction][id]=161537369&payload[transaction][subscription_id]=15100141&payload[transaction][type]=Payment&payload[transaction][kind]=&payload[transaction][transaction_type]=payment&payload[transaction][success]=true&payload[transaction][amount_in_cents]=6400&payload[transaction][memo]=Pookie%20Test%20-%20%2410%20Basic%20Plan%3A%20Renewal%20payment&payload[transaction][created_at]=2016-11-08%2016%3A22%3A20%20-0500&payload[transaction][starting_balance_in_cents]=6400&payload[transaction][ending_balance_in_cents]=0&payload[transaction][gateway_used]=bogus&payload[transaction][gateway_transaction_id]=53433&payload[transaction][gateway_response_code]=&payload[transaction][gateway_order_id]=&payload[transaction][payment_id]=&payload[transaction][product_id]=3792003&payload[transaction][tax_id]=&payload[transaction][component_id]=&payload[transaction][statement_id]=80168049&payload[transaction][customer_id]=14585695&payload[transaction][card_number]=XXXX-XXXX-XXXX-1&payload[transaction][card_expiration]=10%2F2020&payload[transaction][card_type]=bogus&payload[transaction][refunded_amount_in_cents]=0&payload[transaction][invoice_id]=&payload[event_id]=347299364
                      signature: fbcf2f6be579f9658cff90c4373e0ca2
                      signature_hmac_sha_256: db96654f5456c5460062feb944ac8bb1418f9d181ae04a8ed982fe9ffdca8de1
      deprecated: false
    parameters: []
  /webhooks/settings.json:
    put:
      tags:
      - Webhooks
      summary: enableWebhooks
      description: This method allows you to enable webhooks via API for your site
      operationId: enableWebhooks
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/EnableWebhooksRequest'
              - examples:
                - webhooks_enabled: true
              contentMediaType: application/json
            examples:
              Example:
                value:
                  webhooks_enabled: true
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EnableWebhooksResponse'
                - examples:
                  - webhooks_enabled: true
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    webhooks_enabled: true
      deprecated: false
    parameters: []
  /webhooks/replay.json:
    post:
      tags:
      - Webhooks
      summary: replayWebhooks
      description: >-
        Posting to the replay endpoint does not immediately resend the webhooks. They are added to a queue and will be sent as soon as possible, depending on available system resources.


        You may submit an array of up to 1000 webhook IDs to replay in the request.
      operationId: replayWebhooks
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReplayWebhooksRequest'
              - examples:
                - ids:
                  - 123456789
                  - 123456788
              contentMediaType: application/json
            examples:
              Example:
                value:
                  ids:
                  - 123456789
                  - 123456788
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReplayWebhooksResponse'
                - examples:
                  - status: ok
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    status: ok
      deprecated: false
    parameters: []
  /endpoints.json:
    post:
      tags:
      - Webhooks
      summary: createEndpoint
      description: >-
        The Chargify API allows you to create an endpoint and assign a list of webhooks subscriptions (events) to it.


        You can check available events here.

        [Event keys](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405357509645-Webhooks-Reference#example-payloads)
      operationId: createEndpoint
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateEndpointRequest'
              - examples:
                - endpoint:
                    url: https://your.site/webhooks
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
              contentMediaType: application/json
            examples:
              Example:
                value:
                  endpoint:
                    url: https://your.site/webhooks
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EndpointResponse'
                - examples:
                  - endpoint:
                      id: 1
                      url: https://your.site/webhooks
                      site_id: 1
                      status: enabled
                      webhook_subscriptions:
                      - payment_success
                      - payment_failure
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    endpoint:
                      id: 1
                      url: https://your.site/webhooks
                      site_id: 1
                      status: enabled
                      webhook_subscriptions:
                      - payment_success
                      - payment_failure
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - 'URL: invalid, only http and https supported'
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - 'URL: invalid, only http and https supported'
      deprecated: false
    get:
      tags:
      - Webhooks
      summary: listEndpoints
      description: This method returns created endpoints for site.
      operationId: listEndpoints
      parameters: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endpoint'
                description: ''
                examples:
                - - id: 11
                    url: https://foobar.com/webhooks
                    site_id: 1
                    status: enabled
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
                  - id: 12
                    url: https:/example.com/webhooks
                    site_id: 1
                    status: enabled
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
                    - refund_failure
                contentMediaType: application/json
              examples:
                Example:
                  value:
                  - id: 11
                    url: https://foobar.com/webhooks
                    site_id: 1
                    status: enabled
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
                  - id: 12
                    url: https:/example.com/webhooks
                    site_id: 1
                    status: enabled
                    webhook_subscriptions:
                    - payment_success
                    - payment_failure
                    - refund_failure
      deprecated: false
    parameters: []
  /endpoints/{endpoint_id}.json:
    put:
      tags:
      - Webhooks
      summary: updateEndpoint
      description: >-
        You can update an Endpoint via the API with a PUT request to the resource endpoint.


        You can change the `url` of your endpoint which consumes webhooks or list of `webhook_subscriptions`.

        Check available [Event keys](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404448450317-Webhooks#configure-webhook-url).


        Always send a complete list of events which you want subscribe/watch.

        Sending an PUT request for existing endpoint with empty list of `webhook_subscriptions` will end with unsubscribe from all events.


        If you want unsubscribe from specific event, just send a list of `webhook_subscriptions` without the specific event key.
      operationId: updateEndpoint
      parameters:
      - name: endpoint_id
        in: path
        description: The Chargify id for the endpoint that should be updated
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateEndpointRequest'
              - examples:
                - endpoint:
                    url: https://yout.site/webhooks/1/json.
                    webhook_subscriptions:
                    - payment_failure
                    - payment_success
                    - refund_failure
              contentMediaType: application/json
            examples:
              Example:
                value:
                  endpoint:
                    url: https://yout.site/webhooks/1/json.
                    webhook_subscriptions:
                    - payment_failure
                    - payment_success
                    - refund_failure
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResponse'
        '404':
          description: Not Found
          headers: {}
          content: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorListResponse1'
                - description: Error which contains list of messages.
                  examples:
                  - errors:
                    - Event key is not valid - foobar
                contentMediaType: application/json
              examples:
                Example:
                  value:
                    errors:
                    - Event key is not valid - foobar
      deprecated: false
    parameters: []
components:
  schemas:
    InvoiceEventPayment:
      title: InvoiceEventPayment
      required:
      - type
      type: object
      properties:
        type:
          type: string
        masked_account_number:
          type: string
        masked_routing_number:
          type: string
        card_brand:
          type: string
        card_expiration:
          type: string
        last_four:
          type:
          - string
          - 'null'
        masked_card_number:
          type: string
        details:
          type:
          - string
          - 'null'
        kind:
          type: string
        memo:
          type:
          - string
          - 'null'
        email:
          type: string
      description: A nested data structure detailing the method of payment
      discriminator:
        propertyName: type
    PaymentMethodApplePay:
      title: PaymentMethodApplePay
      required:
      - type
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPaymentMethod'
          - {}
    PaymentMethodBankAccount:
      title: PaymentMethodBankAccount
      required:
      - masked_account_number
      - masked_routing_number
      - type
      type: object
      properties:
        masked_account_number:
          type: string
        masked_routing_number:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPaymentMethod'
          - {}
    PaymentMethodCreditCard:
      title: PaymentMethodCreditCard
      required:
      - card_brand
      - masked_card_number
      - type
      type: object
      properties:
        card_brand:
          type: string
        card_expiration:
          type: string
        last_four:
          type:
          - string
          - 'null'
        masked_card_number:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPaymentMethod'
          - {}
    PaymentMethodExternal:
      title: PaymentMethodExternal
      required:
      - details
      - kind
      - memo
      - type
      type: object
      properties:
        details:
          type:
          - string
          - 'null'
        kind:
          type: string
        memo:
          type:
          - string
          - 'null'
        type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPaymentMethod'
          - {}
    PaymentMethodPaypal:
      title: PaymentMethodPaypal
      required:
      - email
      - type
      type: object
      properties:
        email:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPaymentMethod'
          - {}
    Invoice-Event:
      title: Invoice-Event
      required:
      - event_type
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          type: string
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice1'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/ApplyCreditNoteEventData1'
          - description: Example schema for an `apply_credit_note` event
      description: Base type for invoice events.
      discriminator:
        propertyName: event_type
    ApplyCreditNoteEvent:
      title: ApplyCreditNoteEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/ApplyCreditNoteEventData'
          - description: Example schema for an `apply_credit_note` event
    ApplyDebitNoteEvent:
      title: ApplyDebitNoteEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/ApplyDebitNoteEventData'
          - description: Example schema for an `apply_debit_note` event
    ApplyPaymentEvent:
      title: ApplyPaymentEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/ApplyPaymentEventData'
          - description: Example schema for an `apply_payment` event
    BackportInvoiceEvent:
      title: BackportInvoiceEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          type: object
          description: Example schema for an `backport_invoice` event
    ChangeChargebackStatusEvent:
      title: ChangeChargebackStatusEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          type: object
          description: Example schema for an `change_chargeback_status` event
    ChangeInvoiceCollectionMethodEvent:
      title: ChangeInvoiceCollectionMethodEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/ChangeInvoiceCollectionMethodEventData'
          - description: Example schema for an `change_invoice_collection_method` event
    ChangeInvoiceStatusEvent:
      title: ChangeInvoiceStatusEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          type: object
          description: Example schema for an `change_invoice_status` event
    CreateCreditNoteEvent:
      title: CreateCreditNoteEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          type: object
          description: Example schema for an `create_credit_note` event
    FailedPaymentEvent:
      title: FailedPaymentEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          type: object
          description: Example schema for an `failed_payment` event
    IssueInvoiceEvent:
      title: IssueInvoiceEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/IssueInvoiceEventData'
          - description: Example schema for an `issue_invoice` event
    RefundInvoiceEvent:
      title: RefundInvoiceEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/RefundInvoiceEventData'
          - description: Example schema for an `refund_invoice` event
    RemovePaymentEvent:
      title: RemovePaymentEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/RemovePaymentEventData'
          - description: Example schema for an `remove_payment` event
    VoidInvoiceEvent:
      title: VoidInvoiceEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/VoidInvoiceEventData'
          - description: Example schema for an `void_invoice` event
    VoidRemainderEvent:
      title: VoidRemainderEvent
      required:
      - id
      - event_type
      - timestamp
      - invoice
      - event_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        event_type:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventType'
          - description: Invoice Event Type
        timestamp:
          type: string
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
        event_data:
          allOf:
          - $ref: '#/components/schemas/VoidInvoiceEventData'
          - description: Example schema for an `void_invoice` event
    AccountBalance:
      title: AccountBalance
      type: object
      properties:
        balance_in_cents:
          type: integer
          description: The balance in cents.
          contentEncoding: int64
    AccountBalances:
      title: AccountBalances
      type: object
      properties:
        open_invoices:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - description: The balance, in cents, of the sum of the subscription's  open, payable invoices.
        pending_discounts:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - description: The balance, in cents, of the subscription's Pending Discount account.
        service_credits:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - description: The balance, in cents, of the subscription's Service Credit account.
        prepayments:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - description: The balance, in cents, of the subscription's Prepayment account.
    ACHAgreement:
      title: ACHAgreement
      type: object
      properties:
        agreement_terms:
          type: string
          description: (Required when providing ACH agreement params) The ACH authorization agreement terms.
        authorizer_first_name:
          type: string
          description: (Required when providing ACH agreement params) The first name of the person authorizing the ACH agreement.
        authorizer_last_name:
          type: string
          description: (Required when providing ACH agreement params) The last name of the person authorizing the ACH agreement.
        ip_address:
          type: string
          description: (Required when providing ACH agreement params) The IP address of the person authorizing the ACH agreement.
      description: (Optional) If passed, the proof of the authorized ACH agreement terms will be persisted.
    ActivateSubscriptionRequest:
      title: ActivateSubscriptionRequest
      type: object
      properties:
        revert_on_failure:
          type:
          - boolean
          - 'null'
          description: 'You may choose how to handle the activation failure. `true` means do not change the subscription’s state and billing period. `false`  means to continue through with the activation and enter an end of life state. If this parameter is omitted or `null` is passed it will default to value set in the  site settings (default: `true`)'
    AddCouponsRequest:
      title: AddCouponsRequest
      type: object
      properties:
        codes:
          type: array
          items:
            type: string
          description: ''
    AddSubscriptiontoaGroup:
      title: AddSubscriptiontoaGroup
      type: object
      properties:
        group:
          oneOf:
          - $ref: '#/components/schemas/GroupSettings'
          - type: boolean
    AddressChange:
      title: AddressChange
      required:
      - before
      - after
      type: object
      properties:
        before:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        after:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
    AgreementAcceptance:
      title: AgreementAcceptance
      type: object
      properties:
        ip_address:
          type: string
          description: Required when providing agreement acceptance params.
        terms_url:
          type: string
          description: Required when creating a subscription with Maxio Payments. Either terms_url or provacy_policy_url required when providing agreement_acceptance params.
        privacy_policy_url:
          type: string
        return_refund_policy_url:
          type: string
        delivery_policy_url:
          type: string
        secure_checkout_policy_url:
          type: string
      description: Required when creating a subscription with Maxio Payments.
    AllocateComponents:
      title: AllocateComponents
      type: object
      properties:
        proration_upgrade_scheme:
          type: string
          deprecated: true
        proration_downgrade_scheme:
          type: string
          deprecated: true
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/CreateAllocation'
          description: ''
        accrue_charge:
          type: boolean
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        payment_collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: (Optional) If not passed, the allocation(s) will use the payment collection method on the subscription
        initiate_dunning:
          type: boolean
          description: "If true, if the immediate component payment fails, initiate dunning for the subscription. \nOtherwise, leave the charges on the subscription to pay for at renewal."
    Allocation:
      title: Allocation
      type: object
      properties:
        allocation_id:
          type: integer
          description: The allocation unique id
          contentEncoding: int32
        component_id:
          type: integer
          description: The integer component ID for the allocation. This references a component that you have created in your Product setup
          contentEncoding: int32
        component_handle:
          type:
          - string
          - 'null'
          description: The handle of the component. This references a component that you have created in your Product setup
        subscription_id:
          type: integer
          description: The integer subscription ID for the allocation. This references a unique subscription in your Site
          contentEncoding: int32
        quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: The allocated quantity set in to effect by the allocation. String for components supporting fractional quantities
        previous_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: The allocated quantity that was in effect before this allocation was created. String for components supporting fractional quantities
        memo:
          type:
          - string
          - 'null'
          description: The memo passed when the allocation was created
        timestamp:
          type: string
          description: The time that the allocation was recorded, in format and UTC timezone, i.e. 2012-11-20T22:00:37Z
          contentEncoding: date-time
        created_at:
          type: string
          description: Timestamp indicating when this allocation was created
          contentEncoding: date-time
        proration_upgrade_scheme:
          type: string
          description: The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.
          deprecated: true
        proration_downgrade_scheme:
          type: string
          description: The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.
          deprecated: true
        price_point_id:
          type: integer
          contentEncoding: int32
        price_point_name:
          type: string
        price_point_handle:
          type: string
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        previous_price_point_id:
          type: integer
          contentEncoding: int32
        accrue_charge:
          type: boolean
          description: If the change in cost is an upgrade, this determines if the charge should accrue to the next renewal or if capture should be attempted immediately.
        initiate_dunning:
          type: boolean
          description: "If true, if the immediate component payment fails, initiate dunning for the subscription. \nOtherwise, leave the charges on the subscription to pay for at renewal."
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        payment:
          oneOf:
          - $ref: '#/components/schemas/PaymentforAllocation'
          - {}
    AllocationExpirationDate:
      title: AllocationExpirationDate
      type: object
      properties:
        expires_at:
          type: string
    AllocationPreview:
      title: AllocationPreview
      type: object
      properties:
        start_date:
          type: string
        end_date:
          type: string
        subtotal_in_cents:
          type: integer
          contentEncoding: int64
        total_tax_in_cents:
          type: integer
          contentEncoding: int64
        total_discount_in_cents:
          type: integer
          contentEncoding: int64
        total_in_cents:
          type: integer
          contentEncoding: int64
        direction:
          allOf:
          - $ref: '#/components/schemas/AllocationPreviewDirection'
          - {}
        proration_scheme:
          type: string
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/AllocationPreviewLineItem'
          description: ''
        accrue_charge:
          type: boolean
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/AllocationPreviewItem'
          description: ''
        period_type:
          type: string
        existing_balance_in_cents:
          type: integer
          description: An integer representing the amount of the subscription's current balance
          contentEncoding: int64
    AllocationPreviewDirection:
      title: AllocationPreviewDirection
      enum:
      - upgrade
      - downgrade
      type: string
    AllocationPreviewItem:
      title: AllocationPreviewItem
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        previous_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        memo:
          type:
          - string
          - 'null'
        timestamp:
          type:
          - string
          - 'null'
        proration_upgrade_scheme:
          type: string
          deprecated: true
        proration_downgrade_scheme:
          type: string
          deprecated: true
        accrue_charge:
          type: boolean
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_point_id:
          type: integer
          contentEncoding: int32
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        previous_price_point_id:
          type: integer
          contentEncoding: int32
        price_point_handle:
          type: string
        price_point_name:
          type: string
        component_handle:
          type:
          - string
          - 'null'
    AllocationPreviewLineItem:
      title: AllocationPreviewLineItem
      type: object
      properties:
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/LineItemTransactionType'
          - description: A handle for the line item transaction type
        kind:
          allOf:
          - $ref: '#/components/schemas/AllocationPreviewLineItemKind'
          - description: A handle for the line item kind for allocation preview
        amount_in_cents:
          type: integer
          contentEncoding: int64
        memo:
          type: string
        discount_amount_in_cents:
          type: integer
          contentEncoding: int64
        taxable_amount_in_cents:
          type: integer
          contentEncoding: int64
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        direction:
          allOf:
          - $ref: '#/components/schemas/AllocationPreviewDirection'
          - description: Visible when using Fine-grained Component Control
    AllocationPreviewLineItemKind:
      title: AllocationPreviewLineItemKind
      enum:
      - quantity_based_component
      - on_off_component
      - coupon
      - tax
      type: string
      description: A handle for the line item kind for allocation preview
    AllocationPreviewResponse:
      title: AllocationPreviewResponse
      required:
      - allocation_preview
      type: object
      properties:
        allocation_preview:
          allOf:
          - $ref: '#/components/schemas/AllocationPreview'
          - {}
    AllocationResponse:
      title: AllocationResponse
      type: object
      properties:
        allocation:
          allOf:
          - $ref: '#/components/schemas/Allocation'
          - {}
    AllocationSettings:
      title: AllocationSettings
      type: object
      properties:
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        accrue_charge:
          type: string
          description: Either "true" or "false".
    AppliedCreditNoteData:
      title: AppliedCreditNoteData
      type: object
      properties:
        uid:
          type: string
          description: The UID of the credit note
        number:
          type: string
          description: The number of the credit note
    ApplyCreditNoteEventData:
      title: ApplyCreditNoteEventData
      required:
      - uid
      - credit_note_number
      - credit_note_uid
      - original_amount
      - applied_amount
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the credit note application. It is generated automatically by Chargify and has the prefix "cdt_" followed by alphanumeric characters.
        credit_note_number:
          type: string
          description: A unique, identifying string that appears on the credit note and in places it is referenced.
        credit_note_uid:
          type: string
          description: Unique identifier for the credit note. It is generated automatically by Chargify and has the prefix "cn_" followed by alphanumeric characters.
        original_amount:
          type: string
          description: The full, original amount of the credit note.
        applied_amount:
          type: string
          description: The amount of the credit note applied to invoice.
        transaction_time:
          type: string
          description: The time the credit note was applied, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
        memo:
          type: string
          description: The credit note memo.
        role:
          type: string
          description: The role of the credit note (e.g. 'general')
        consolidated_invoice:
          type: boolean
          description: Shows whether it was applied to consolidated invoice or not
        applied_credit_notes:
          type: array
          items:
            $ref: '#/components/schemas/AppliedCreditNoteData'
          description: List of credit notes applied to children invoices (if consolidated invoice)
      description: Example schema for an `apply_credit_note` event
    ApplyCreditNoteEventData1:
      title: ApplyCreditNoteEventData1
      required:
      - uid
      - credit_note_number
      - credit_note_uid
      - original_amount
      - applied_amount
      - transaction_time
      - memo
      - debit_note_number
      - debit_note_uid
      - payment_method
      - transaction_id
      - prepayment
      - from_collection_method
      - to_collection_method
      - consolidation_level
      - from_status
      - to_status
      - due_amount
      - total_amount
      - apply_credit
      - credit_note_attributes
      - payment_id
      - refund_amount
      - refund_id
      - is_advance_invoice
      - reason
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the credit note application. It is generated automatically by Chargify and has the prefix "cdt_" followed by alphanumeric characters.
        credit_note_number:
          type: string
          description: A unique, identifying string that appears on the credit note and in places it is referenced.
        credit_note_uid:
          type: string
          description: Unique identifier for the credit note. It is generated automatically by Chargify and has the prefix "cn_" followed by alphanumeric characters.
        original_amount:
          type: string
          description: The full, original amount of the credit note.
        applied_amount:
          type: string
          description: The amount of the credit note applied to invoice.
        transaction_time:
          type: string
          description: The time the credit note was applied, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
        memo:
          type: string
          description: The credit note memo.
        role:
          type: string
          description: The role of the credit note (e.g. 'general')
        consolidated_invoice:
          type: boolean
          description: Shows whether it was applied to consolidated invoice or not
        applied_credit_notes:
          type: array
          items:
            $ref: '#/components/schemas/AppliedCreditNoteData'
          description: List of credit notes applied to children invoices (if consolidated invoice)
        debit_note_number:
          type: string
          description: A unique, identifying string that appears on the debit note and in places it is referenced.
        debit_note_uid:
          type: string
          description: Unique identifier for the debit note. It is generated automatically by Chargify and has the prefix "db_" followed by alphanumeric characters.
        payment_method:
          anyOf:
          - $ref: '#/components/schemas/PaymentMethodApplePay'
          - $ref: '#/components/schemas/PaymentMethodBankAccount'
          - $ref: '#/components/schemas/PaymentMethodCreditCard'
          - $ref: '#/components/schemas/PaymentMethodExternal'
          - $ref: '#/components/schemas/PaymentMethodPaypal'
          description: A nested data structure detailing the method of payment
        transaction_id:
          type: integer
          description: The Chargify id of the original payment
          contentEncoding: int32
        parent_invoice_number:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        remaining_prepayment_amount:
          type:
          - string
          - 'null'
        prepayment:
          type: boolean
          description: The flag that shows whether the original payment was a prepayment or not
        external:
          type: boolean
        from_collection_method:
          type: string
          description: The previous collection method of the invoice.
        to_collection_method:
          type: string
          description: The new collection method of the invoice.
        consolidation_level:
          allOf:
          - $ref: '#/components/schemas/InvoiceConsolidationLevel'
          - description: >-
              Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


              * "none": A normal invoice with no consolidation.

              * "child": An invoice segment which has been combined into a consolidated invoice.

              * "parent": A consolidated invoice, whose contents are composed of invoice segments.


              "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


              See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
        from_status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The status of the invoice before event occurrence. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        to_status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The status of the invoice after event occurrence. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        due_amount:
          type: string
          description: Amount due on the invoice, which is `total_amount - credit_amount - paid_amount`.
        total_amount:
          type: string
          description: The invoice total, which is `subtotal_amount - discount_amount + tax_amount`.'
        apply_credit:
          type: boolean
          description: If true, credit was created and applied it to the invoice.
        credit_note_attributes:
          allOf:
          - $ref: '#/components/schemas/CreditNote1'
          - {}
        payment_id:
          type: integer
          description: The ID of the payment transaction to be refunded.
          contentEncoding: int32
        refund_amount:
          type: string
          description: The amount of the refund.
        refund_id:
          type: integer
          description: The ID of the refund transaction.
          contentEncoding: int32
        is_advance_invoice:
          type: boolean
          description: If true, the invoice is an advance invoice.
        reason:
          type: string
          description: The reason for the void.
      description: Example schema for an `apply_credit_note` event
    ApplyDebitNoteEventData:
      title: ApplyDebitNoteEventData
      required:
      - debit_note_number
      - debit_note_uid
      - original_amount
      - applied_amount
      type: object
      properties:
        debit_note_number:
          type: string
          description: A unique, identifying string that appears on the debit note and in places it is referenced.
        debit_note_uid:
          type: string
          description: Unique identifier for the debit note. It is generated automatically by Chargify and has the prefix "db_" followed by alphanumeric characters.
        original_amount:
          type: string
          description: The full, original amount of the debit note.
        applied_amount:
          type: string
          description: The amount of the debit note applied to invoice.
      description: Example schema for an `apply_debit_note` event
    ApplyPaymentEventData:
      title: ApplyPaymentEventData
      required:
      - memo
      - original_amount
      - applied_amount
      - transaction_time
      - payment_method
      type: object
      properties:
        memo:
          type: string
          description: The payment memo
        original_amount:
          type: string
          description: 'The full, original amount of the payment transaction as a string in full units. Incoming payments can be split amongst several invoices, which will result in a `applied_amount` less than the `original_amount`. Example: A $100.99 payment, of which $40.11 is applied to this invoice, will have an `original_amount` of `"100.99"`.'
        applied_amount:
          type: string
          description: 'The amount of the payment applied to this invoice. Incoming payments can be split amongst several invoices, which will result in a `applied_amount` less than the `original_amount`. Example: A $100.99 payment, of which $40.11 is applied to this invoice, will have an `applied_amount` of `"40.11"`.'
        transaction_time:
          type: string
          description: The time the payment was applied, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
        payment_method:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPayment2'
          - description: A nested data structure detailing the method of payment
        transaction_id:
          type: integer
          description: The Chargify id of the original payment
          contentEncoding: int32
        parent_invoice_number:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        remaining_prepayment_amount:
          type:
          - string
          - 'null'
        prepayment:
          type: boolean
        external:
          type: boolean
      description: Example schema for an `apply_payment` event
    AttributeError:
      title: AttributeError
      required:
      - attribute
      type: object
      properties:
        attribute:
          type: array
          items:
            type: string
          description: ''
    AutoInvite:
      title: AutoInvite
      enum:
      - 0
      - 1
      type: integer
    AutoResume:
      title: AutoResume
      type: object
      properties:
        automatically_resume_at:
          type:
          - string
          - 'null'
          contentEncoding: date-time
    BankAccountAttributes:
      title: BankAccountAttributes
      type: object
      properties:
        chargify_token:
          type: string
        bank_name:
          type: string
          description: (Required when creating a subscription with ACH or GoCardless) The name of the bank where the customer’s account resides
        bank_routing_number:
          type: string
          description: (Required when creating a subscription with ACH. Optional when creating a subscription with GoCardless). The routing number of the bank. It becomes bank_code while passing via GoCardless API
        bank_account_number:
          type: string
          description: (Required when creating a subscription with ACH. Required when creating a subscription with GoCardless and bank_iban is blank) The customerʼs bank account number
        bank_account_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountType'
          - description: Defaults to checking
        bank_branch_code:
          type: string
          description: (Optional when creating a subscription with GoCardless) Branch code. Alternatively, an IBAN can be provided
        bank_iban:
          type: string
          description: (Optional when creating a subscription with GoCardless). International Bank Account Number. Alternatively, local bank details can be provided
        bank_account_holder_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountHolderType'
          - description: Defaults to personal
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          - {}
        current_vault:
          allOf:
          - $ref: '#/components/schemas/BankAccountVault'
          - description: The vault that stores the payment profile with the provided vault_token.
        vault_token:
          type: string
        customer_vault_token:
          type: string
          description: (only for Authorize.Net CIM storage or Square) The customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token
    BankAccountHolderType:
      title: BankAccountHolderType
      enum:
      - personal
      - business
      type: string
      description: Defaults to personal
    BankAccountPaymentProfile:
      title: BankAccountPaymentProfile
      required:
      - masked_bank_routing_number
      - masked_bank_account_number
      type: object
      properties:
        id:
          type: integer
          description: The Chargify-assigned ID of the stored bank account. This value can be used as an input to payment_profile_id when creating a subscription, in order to re-use a stored payment profile for the same customer
          contentEncoding: int32
        first_name:
          type: string
          description: The first name of the bank account holder
        last_name:
          type: string
          description: The last name of the bank account holder
        customer_id:
          type: integer
          description: The Chargify-assigned id for the customer record to which the bank account belongs
          contentEncoding: int32
        current_vault:
          allOf:
          - $ref: '#/components/schemas/BankAccountVault'
          - description: The vault that stores the payment profile with the provided vault_token.
        vault_token:
          type: string
          description: The “token” provided by your vault storage for an already stored payment profile
        billing_address:
          type:
          - string
          - 'null'
          description: The current billing street address for the bank account
        billing_city:
          type:
          - string
          - 'null'
          description: The current billing address city for the bank account
        billing_state:
          type:
          - string
          - 'null'
          description: The current billing address state for the bank account
        billing_zip:
          type:
          - string
          - 'null'
          description: The current billing address zip code for the bank account
        billing_country:
          type:
          - string
          - 'null'
          description: The current billing address country for the bank account
        customer_vault_token:
          type:
          - string
          - 'null'
          description: '(only for Authorize.Net CIM storage): the customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token.'
        billing_address_2:
          type:
          - string
          - 'null'
          description: The current billing street address, second line, for the bank account
        bank_name:
          type: string
          description: The bank where the account resides
        masked_bank_routing_number:
          type: string
          description: A string representation of the stored bank routing number with all but the last 4 digits marked with X’s (i.e. ‘XXXXXXX1111’). payment_type will be bank_account
        masked_bank_account_number:
          type: string
          description: A string representation of the stored bank account number with all but the last 4 digits marked with X’s (i.e. ‘XXXXXXX1111’)
        bank_account_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountType'
          - description: Defaults to checking
        bank_account_holder_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountHolderType'
          - description: Defaults to personal
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          - {}
        verified:
          type: boolean
          description: denotes whether a bank account has been verified by providing the amounts of two small deposits made into the account
          default: false
        site_gateway_setting_id:
          type: integer
          contentEncoding: int32
        gateway_handle:
          type:
          - string
          - 'null'
    BankAccountResponse:
      title: BankAccountResponse
      required:
      - payment_profile
      type: object
      properties:
        payment_profile:
          allOf:
          - $ref: '#/components/schemas/BankAccountPaymentProfile'
          - {}
    BankAccountType:
      title: BankAccountType
      enum:
      - checking
      - savings
      type: string
      description: Defaults to checking
    BankAccountVault:
      title: BankAccountVault
      enum:
      - bogus
      - authorizenet
      - stripe_connect
      - braintree_blue
      - gocardless
      type: string
      description: The vault that stores the payment profile with the provided vault_token.
    BankAccountVerification:
      title: BankAccountVerification
      type: object
      properties:
        deposit_1_in_cents:
          type: integer
          contentEncoding: int64
        deposit_2_in_cents:
          type: integer
          contentEncoding: int64
    BankAccountVerificationRequest:
      title: BankAccountVerificationRequest
      required:
      - bank_account_verification
      type: object
      properties:
        bank_account_verification:
          allOf:
          - $ref: '#/components/schemas/BankAccountVerification'
          - {}
    BaseRefundError:
      title: BaseRefundError
      type: object
      properties:
        base:
          type: array
          items:
            type: object
          description: ''
    BaseStringError:
      title: BaseStringError
      type: object
      properties:
        base:
          type: array
          items:
            type: string
          description: ''
      description: The error is base if it is not directly associated with a single attribute.
    BasicDateField:
      title: BasicDateField
      enum:
      - updated_at
      - created_at
      type: string
      description: Allows to filter by `created_at` or `updated_at`.
      examples:
      - updated_at
    BatchJobResponse:
      title: BatchJobResponse
      required:
      - batchjob
      type: object
      properties:
        batchjob:
          allOf:
          - $ref: '#/components/schemas/Batch-Job'
          - {}
    Batch-Job:
      title: Batch-Job
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        finished_at:
          type:
          - string
          - 'null'
        row_count:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        created_at:
          type:
          - string
          - 'null'
        completed:
          type: string
    BillingManifest:
      title: BillingManifest
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/BillingManifestItem'
          description: ''
        total_in_cents:
          type: integer
          contentEncoding: int64
        total_discount_in_cents:
          type: integer
          contentEncoding: int64
        total_tax_in_cents:
          type: integer
          contentEncoding: int64
        subtotal_in_cents:
          type: integer
          contentEncoding: int64
        start_date:
          type: string
        end_date:
          type: string
        period_type:
          type: string
        existing_balance_in_cents:
          type: integer
          contentEncoding: int64
    BillingManifestItem:
      title: BillingManifestItem
      type: object
      properties:
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/LineItemTransactionType'
          - description: A handle for the line item transaction type
        kind:
          allOf:
          - $ref: '#/components/schemas/BillingManifestLineItemKind'
          - description: A handle for the billing manifest line item kind
        amount_in_cents:
          type: integer
          contentEncoding: int64
        memo:
          type: string
        discount_amount_in_cents:
          type: integer
          contentEncoding: int64
        taxable_amount_in_cents:
          type: integer
          contentEncoding: int64
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        component_name:
          type: string
        product_id:
          type: integer
          contentEncoding: int32
        product_handle:
          type: string
        product_name:
          type: string
        period_range_start:
          type: string
        period_range_end:
          type: string
    BillingManifestLineItemKind:
      title: BillingManifestLineItemKind
      enum:
      - baseline
      - initial
      - trial
      - coupon
      - component
      - tax
      type: string
      description: A handle for the billing manifest line item kind
    BillingSchedule:
      title: BillingSchedule
      type: object
      properties:
        initial_billing_at:
          type: string
          description: The initial_billing_at attribute in Maxio allows you to specify a custom starting date for billing cycles associated with components that have their own billing frequency set. Only ISO8601 format is supported.
          contentEncoding: date
          examples:
          - 2024-01-01
      description: This attribute is particularly useful when you need to align billing events for different components on distinct schedules within a subscription. Please note this only works for site with Multifrequency enabled
    BillingAddress:
      title: BillingAddress
      type: object
      properties:
        street:
          type:
          - string
          - 'null'
        line2:
          type:
          - string
          - 'null'
        city:
          type:
          - string
          - 'null'
        state:
          type:
          - string
          - 'null'
        zip:
          type:
          - string
          - 'null'
        country:
          type:
          - string
          - 'null'
    Breakouts:
      title: Breakouts
      type: object
      properties:
        plan_amount_in_cents:
          type: integer
          contentEncoding: int64
        plan_amount_formatted:
          type: string
        usage_amount_in_cents:
          type: integer
          contentEncoding: int64
        usage_amount_formatted:
          type: string
    BulkComponentsPricePointAssignment:
      title: BulkComponentsPricePointAssignment
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ComponentsPricePointAssignment'
          description: ''
    BulkCreateProductPricePointsRequest:
      title: BulkCreateProductPricePointsRequest
      required:
      - price_points
      type: object
      properties:
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductPricePoint'
          description: ''
    BulkCreateProductPricePointsResponse:
      title: BulkCreateProductPricePointsResponse
      type: object
      properties:
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ProductPricePoint'
          description: ''
    BulkCreateSegments:
      title: BulkCreateSegments
      type: object
      properties:
        segments:
          maxItems: 2000
          type: array
          items:
            $ref: '#/components/schemas/CreateSegment'
          description: ''
    BulkUpdateSegments:
      title: BulkUpdateSegments
      type: object
      properties:
        segments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/BulkUpdateSegmentsItem'
          description: ''
    BulkUpdateSegmentsItem:
      title: BulkUpdateSegmentsItem
      required:
      - id
      - pricing_scheme
      - prices
      type: object
      properties:
        id:
          type: integer
          description: The ID of the segment you want to update.
          contentEncoding: int32
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/CreateorUpdateSegmentPrice'
          description: ''
    CalendarBilling:
      title: CalendarBilling
      type: object
      properties:
        snap_day:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: A day of month that subscription will be processed on. Can be 1 up to 28 or 'end'.
        calendar_billing_first_charge:
          allOf:
          - $ref: '#/components/schemas/FirstChargeType'
          - {}
      description: (Optional). Cannot be used when also specifying next_billing_at
    CancelGroupedSubscriptionsRequest:
      title: CancelGroupedSubscriptionsRequest
      type: object
      properties:
        charge_unbilled_usage:
          type: boolean
    CancellationMethod:
      title: CancellationMethod
      enum:
      - merchant_ui
      - merchant_api
      - dunning
      - billing_portal
      - unknown
      type: string
      description: The process used to cancel the subscription, if the subscription has been canceled. It is nil if the subscription's state is not canceled.
    CancellationOptions:
      title: CancellationOptions
      type: object
      properties:
        cancellation_message:
          type: string
          description: For your internal use. An indication as to why the subscription is being canceled.
        reason_code:
          type: string
          description: The reason code associated with the cancellation. See the list of reason codes associated with your site.
    CancellationRequest:
      title: CancellationRequest
      required:
      - subscription
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/CancellationOptions'
          - {}
    CardType:
      title: CardType
      enum:
      - visa
      - master
      - elo
      - cabal
      - alelo
      - discover
      - american_express
      - naranja
      - diners_club
      - jcb
      - dankort
      - maestro
      - maestro_no_luhn
      - forbrugsforeningen
      - sodexo
      - alia
      - vr
      - unionpay
      - carnet
      - cartes_bancaires
      - olimpica
      - creditel
      - confiable
      - synchrony
      - routex
      - mada
      - bp_plus
      - passcard
      - edenred
      - anda
      - tarjeta-d
      - hipercard
      - bogus
      - switch
      - solo
      - laser
      type: string
      description: The type of card used.
    ChangeInvoiceCollectionMethodEventData:
      title: ChangeInvoiceCollectionMethodEventData
      required:
      - from_collection_method
      - to_collection_method
      type: object
      properties:
        from_collection_method:
          type: string
          description: The previous collection method of the invoice.
        to_collection_method:
          type: string
          description: The new collection method of the invoice.
      description: Example schema for an `change_invoice_collection_method` event
    ChargifyEBB:
      title: ChargifyEBB
      type: object
      properties:
        timestamp:
          type: string
          description: This timestamp determines what billing period the event will be billed in. If your request payload does not include it, Chargify will add `chargify.timestamp` to the event payload and set the value to `now`.
        id:
          type: string
          description: A unique ID set by Chargify. Please note that this field is reserved. If `chargify.id` is present in the request payload, it will be overwritten.
        created_at:
          type: string
          description: An ISO-8601 timestamp, set by Chargify at the time each event is recorded. Please note that this field is reserved. If `chargify.created_at` is present in the request payload, it will be overwritten.
        uniqueness_token:
          maxLength: 64
          type: string
          description: User-defined string scoped per-stream. Duplicate events within a stream will be silently ignored. Tokens expire after 31 days.
        subscription_id:
          type: integer
          description: "Id of Maxio Advanced Billing Subscription which is connected to this event. \nProvide `subscription_id` if you configured `chargify.subscription_id` as Subscription Identifier in your Event Stream."
          contentEncoding: int32
        subscription_reference:
          type: string
          description: "Reference of Maxio Advanced Billing Subscription which is connected to this event. \nProvide `subscription_reference` if you configured `chargify.subscription_reference` as Subscription Identifier in your Event Stream."
    Cleanupscope:
      title: Cleanupscope
      enum:
      - all
      - customers
      type: string
      description: 'all: Will clear all products, customers, and related subscriptions from the site. customers: Will clear only customers and related subscriptions (leaving the products untouched) for the site. Revenue will also be reset to 0.'
    CollectionMethod:
      title: CollectionMethod
      enum:
      - automatic
      - remittance
      - prepaid
      - invoice
      type: string
      description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
    Component:
      title: Component
      type: object
      properties:
        id:
          type: integer
          description: The unique ID assigned to the component by Chargify. This ID can be used to fetch the component from the API.
          contentEncoding: int32
        name:
          type: string
          description: The name of the Component, suitable for display on statements. i.e. Text Messages.
        handle:
          type:
          - string
          - 'null'
          description: The component API handle
        pricing_scheme:
          oneOf:
          - $ref: '#/components/schemas/PricingScheme'
          - {}
        unit_name:
          type: string
          description: The name of the unit that the component’s usage is measured in. i.e. message
        unit_price:
          type:
          - string
          - 'null'
          description: The amount the customer will be charged per unit. This field is only populated for ‘per_unit’ pricing schemes, otherwise it may be null.
        product_family_id:
          type: integer
          description: The id of the Product Family to which the Component belongs
          contentEncoding: int32
        product_family_name:
          type: string
          description: The name of the Product Family to which the Component belongs
        price_per_unit_in_cents:
          type:
          - integer
          - 'null'
          description: deprecated - use unit_price instead
          contentEncoding: int64
        kind:
          allOf:
          - $ref: '#/components/schemas/ComponentKind'
          - description: A handle for the component type
        archived:
          type: boolean
          description: Boolean flag describing whether a component is archived or not.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        description:
          type:
          - string
          - 'null'
          description: The description of the component.
        default_price_point_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        overage_prices:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/ComponentPrice'
          description: An array of price brackets. If the component uses the ‘per_unit’ pricing scheme, this array will be empty.
        prices:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/ComponentPrice'
          description: An array of price brackets. If the component uses the ‘per_unit’ pricing scheme, this array will be empty.
        price_point_count:
          type: integer
          description: Count for the number of price points associated with the component
          contentEncoding: int32
        price_points_url:
          type: string
          description: URL that points to the location to read the existing price points via GET request
        default_price_point_name:
          type: string
        tax_code:
          type:
          - string
          - 'null'
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        recurring:
          type: boolean
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        created_at:
          type: string
          description: Timestamp indicating when this component was created
          contentEncoding: date-time
        updated_at:
          type: string
          description: Timestamp indicating when this component was updated
          contentEncoding: date-time
        archived_at:
          type:
          - string
          - 'null'
          description: Timestamp indicating when this component was archived
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        allow_fractional_quantities:
          type: boolean
        item_category:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/ItemCategory'
          - description: 'One of the following: Business Software, Consumer Software, Digital Services, Physical Goods, Other'
            examples:
            - Business Software
        use_site_exchange_rate:
          type:
          - boolean
          - 'null'
        accounting_code:
          type:
          - string
          - 'null'
          description: E.g. Internal ID or SKU Number
        event_based_billing_metric_id:
          type: integer
          description: (Only for Event Based Components) This is an ID of a metric attached to the component. This metric is used to bill upon collected events.
          contentEncoding: int32
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component's default price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component's default price point, either month or day. This property is only available for sites with Multifrequency enabled.
    ComponentAllocationChange:
      title: ComponentAllocationChange
      required:
      - previous_allocation
      - new_allocation
      - component_id
      - component_handle
      - memo
      - allocation_id
      type: object
      properties:
        previous_allocation:
          type: integer
          contentEncoding: int32
        new_allocation:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        memo:
          type: string
        allocation_id:
          type: integer
          contentEncoding: int32
        allocated_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
    ComponentAllocationErrorItem:
      title: ComponentAllocationErrorItem
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        message:
          type: string
        kind:
          type: string
        on:
          type: string
    ComponentAllocationError1:
      title: ComponentAllocationError1
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ComponentAllocationErrorItem'
          description: ''
    ComponentCostData:
      title: ComponentCostData
      type: object
      properties:
        component_code_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        price_point_id:
          type: integer
          contentEncoding: int32
        product_id:
          type: integer
          contentEncoding: int32
        quantity:
          type: string
        amount:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCostDataRateTier'
          description: ''
    ComponentCostDataRateTier:
      title: ComponentCostDataRateTier
      type: object
      properties:
        starting_quantity:
          type: integer
          contentEncoding: int32
        ending_quantity:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        quantity:
          type: string
        unit_price:
          type: string
        amount:
          type: string
    ComponentCurrencyPrice:
      title: ComponentCurrencyPrice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        currency:
          type: string
        price:
          type: string
        formatted_price:
          type: string
        price_id:
          type: integer
          contentEncoding: int32
        price_point_id:
          type: integer
          contentEncoding: int32
    ComponentCurrencyPricesResponse:
      title: ComponentCurrencyPricesResponse
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCurrencyPrice'
          description: ''
    ComponentCustomPrice:
      title: ComponentCustomPrice
      type: object
      properties:
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: Omit for On/Off components
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: On/off components only need one price bracket starting at 1
      description: Create or update custom pricing unique to the subscription. Used in place of `price_point_id`.
    ComponentKind:
      title: ComponentKind
      enum:
      - metered_component
      - quantity_based_component
      - on_off_component
      - prepaid_usage_component
      - event_based_component
      type: string
      description: A handle for the component type
    ComponentPrice:
      title: ComponentPrice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        starting_quantity:
          type: integer
          contentEncoding: int32
        ending_quantity:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        unit_price:
          type: string
        price_point_id:
          type: integer
          contentEncoding: int32
        formatted_unit_price:
          type: string
        segment_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
    ComponentPricePoint:
      title: ComponentPricePoint
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        type:
          allOf:
          - $ref: '#/components/schemas/PricePointType'
          - description: >-
              Price point type. We expose the following types:

              1. **default**: a price point that is marked as a default price for a certain product.

              2. **custom**: a custom price point.

              3. **catalog**: a price point that is **not** marked as a default price for a certain product and is **not** a custom one.
        default:
          type: boolean
          description: 'Note: Refer to type attribute instead'
          deprecated: true
        name:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        component_id:
          type: integer
          contentEncoding: int32
        handle:
          type: string
        archived_at:
          type:
          - string
          - 'null'
          contentEncoding: date-time
        created_at:
          type: string
          contentEncoding: date-time
        updated_at:
          type: string
          contentEncoding: date-time
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPrice'
          description: ''
        use_site_exchange_rate:
          type: boolean
          description: Whether to use the site level exchange rate or define your own prices for each currency if you have multiple currencies defined on the site.
          default: true
        subscription_id:
          type: integer
          description: (only used for Custom Pricing - ie. when the price point's type is `custom`) The id of the subscription that the custom price point is for.
          contentEncoding: int32
        tax_included:
          type: boolean
        interval:
          type:
          - integer
          - 'null'
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          oneOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - {}
          description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCurrencyPrice'
          description: An array of currency pricing data is available when multiple currencies are defined for the site. It varies based on the use_site_exchange_rate setting for the price point. This parameter is present only in the response of read endpoints, after including the appropriate query parameter.
    ComponentPricePointItem:
      title: ComponentPricePointItem
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
    ComponentPricePointResponse:
      title: ComponentPricePointResponse
      required:
      - price_point
      type: object
      properties:
        price_point:
          allOf:
          - $ref: '#/components/schemas/ComponentPricePoint'
          - {}
    ComponentPricePointsresponse:
      title: ComponentPricePointsresponse
      type: object
      properties:
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePoint'
          description: ''
        meta:
          allOf:
          - $ref: '#/components/schemas/ListPublicKeysMeta'
          - {}
    ComponentPricePointErrorItem:
      title: ComponentPricePointErrorItem
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        message:
          type: string
        price_point:
          type: integer
          contentEncoding: int32
    ComponentPricePointError1:
      title: ComponentPricePointError1
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePointErrorItem'
          description: ''
    ComponentResponse:
      title: ComponentResponse
      required:
      - component
      type: object
      properties:
        component:
          allOf:
          - $ref: '#/components/schemas/Component'
          - {}
    ComponentCostData1:
      title: ComponentCostData1
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCostData'
          description: ''
    ComponentsPricePointAssignment:
      title: ComponentsPricePointAssignment
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        price_point:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
    CompoundingStrategy:
      title: CompoundingStrategy
      enum:
      - compound
      - full-price
      type: string
    ConsolidatedInvoice:
      title: ConsolidatedInvoice
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
          description: ''
    CountResponse:
      title: CountResponse
      type: object
      properties:
        count:
          type: integer
          contentEncoding: int32
    Coupon:
      title: Coupon
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        code:
          type: string
        description:
          type: string
        amount:
          type:
          - number
          - 'null'
        amount_in_cents:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        product_family_id:
          type: integer
          contentEncoding: int32
        product_family_name:
          type:
          - string
          - 'null'
        start_date:
          type: string
        end_date:
          type:
          - string
          - 'null'
        percentage:
          type:
          - string
          - 'null'
        recurring:
          type: boolean
        recurring_scheme:
          allOf:
          - $ref: '#/components/schemas/RecurringScheme'
          - {}
        duration_period_count:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        duration_interval:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        duration_interval_unit:
          type:
          - string
          - 'null'
        duration_interval_span:
          type:
          - string
          - 'null'
        allow_negative_balance:
          type: boolean
        archived_at:
          type:
          - string
          - 'null'
        conversion_limit:
          type:
          - string
          - 'null'
        stackable:
          type: boolean
        compounding_strategy:
          anyOf:
          - $ref: '#/components/schemas/CompoundingStrategy'
        use_site_exchange_rate:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
        discount_type:
          allOf:
          - $ref: '#/components/schemas/DiscountType'
          - {}
        exclude_mid_period_allocations:
          type: boolean
        apply_on_cancel_at_end_of_period:
          type: boolean
        coupon_restrictions:
          type: array
          items:
            $ref: '#/components/schemas/CouponRestriction'
          description: ''
    CouponCurrency:
      title: CouponCurrency
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        currency:
          type: string
        price:
          type: integer
          contentEncoding: int32
        coupon_id:
          type: integer
          contentEncoding: int32
    CouponCurrencyRequest:
      title: CouponCurrencyRequest
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCouponCurrency'
          description: ''
    CouponCurrencyResponse:
      title: CouponCurrencyResponse
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CouponCurrency'
          description: ''
    CouponResponse:
      title: CouponResponse
      type: object
      properties:
        coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          - {}
    CouponRestriction:
      title: CouponRestriction
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        item_type:
          allOf:
          - $ref: '#/components/schemas/RestrictionType'
          - {}
        item_id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        handle:
          type:
          - string
          - 'null'
    CouponSubcodes:
      title: CouponSubcodes
      type: object
      properties:
        codes:
          type: array
          items:
            type: string
          description: ''
    CouponSubcodesResponse:
      title: CouponSubcodesResponse
      type: object
      properties:
        created_codes:
          type: array
          items:
            type: string
          description: ''
        duplicate_codes:
          type: array
          items:
            type: string
          description: ''
        invalid_codes:
          type: array
          items:
            type: string
          description: ''
    CouponUsage:
      title: CouponUsage
      type: object
      properties:
        id:
          type: integer
          description: The Chargify id of the product
          contentEncoding: int32
        name:
          type: string
          description: Name of the product
        signups:
          type: integer
          description: Number of times the coupon has been applied
          contentEncoding: int32
        savings:
          type:
          - integer
          - 'null'
          description: Dollar amount of customer savings as a result of the coupon.
          contentEncoding: int32
        savings_in_cents:
          type:
          - integer
          - 'null'
          description: Dollar amount of customer savings as a result of the coupon.
          contentEncoding: int64
        revenue:
          type:
          - integer
          - 'null'
          description: Total revenue of the all subscriptions that have received a discount from this coupon.
          contentEncoding: int32
        revenue_in_cents:
          type: integer
          description: Total revenue of the all subscriptions that have received a discount from this coupon.
          contentEncoding: int64
    CreateAllocation:
      title: CreateAllocation
      required:
      - quantity
      type: object
      properties:
        quantity:
          type: number
          description: The allocated quantity to which to set the line-items allocated quantity. By default, this is an integer. If decimal allocations are enabled for the component, it will be a decimal number. For On/Off components, use 1for on and 0 for off.
        component_id:
          type: integer
          description: (required for the multiple allocations endpoint) The id associated with the component for which the allocation is being made
          contentEncoding: int32
        memo:
          type: string
          description: A memo to record along with the allocation
        proration_downgrade_scheme:
          type: string
          description: The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.
          deprecated: true
        proration_upgrade_scheme:
          type: string
          description: The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.
          deprecated: true
        accrue_charge:
          type: boolean
          description: If the change in cost is an upgrade, this determines if the charge should accrue to the next renewal or if capture should be attempted immediately. Defaults to the site setting if one is not provided.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        initiate_dunning:
          type: boolean
          description: "If set to true, if the immediate component payment fails, initiate dunning for the subscription. \nOtherwise, leave the charges on the subscription to pay for at renewal. Defaults to false."
        price_point_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - {}
          description: Price point that the allocation should be charged at. Accepts either the price point's id (integer) or handle (string). When not specified, the default price point will be used.
        billing_schedule:
          allOf:
          - $ref: '#/components/schemas/BillingSchedule'
          - description: This attribute is particularly useful when you need to align billing events for different components on distinct schedules within a subscription. Please note this only works for site with Multifrequency enabled
    CreateAllocationRequest:
      title: CreateAllocationRequest
      required:
      - allocation
      type: object
      properties:
        allocation:
          allOf:
          - $ref: '#/components/schemas/CreateAllocation'
          - {}
    CreateComponentPricePoint:
      title: CreateComponentPricePoint
      required:
      - name
      - pricing_scheme
      - prices
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
        use_site_exchange_rate:
          type: boolean
          description: Whether to use the site level exchange rate or define your own prices for each currency if you have multiple currencies defined on the site.
          default: true
        tax_included:
          type: boolean
          description: Whether or not the price point includes tax
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this price point, either month or day. This property is only available for sites with Multifrequency enabled.
    CreateComponentPricePointRequest:
      title: CreateComponentPricePointRequest
      required:
      - price_point
      type: object
      properties:
        price_point:
          anyOf:
          - $ref: '#/components/schemas/CreateComponentPricePoint'
          - $ref: '#/components/schemas/CreatePrepaidUsageComponentPricePoint'
    CreateComponentPricePointsRequest:
      title: CreateComponentPricePointsRequest
      required:
      - price_points
      type: object
      properties:
        price_points:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/CreateComponentPricePoint'
            - $ref: '#/components/schemas/CreatePrepaidUsageComponentPricePoint'
          description: ''
    CreateCurrencyPrice:
      title: CreateCurrencyPrice
      type: object
      properties:
        currency:
          type: string
          description: ISO code for a currency defined on the site level
        price:
          type: number
          description: Price for the price level in this currency
        price_id:
          type: integer
          description: ID of the price that this corresponds with
          contentEncoding: int32
    CreateCurrencyPricesRequest:
      title: CreateCurrencyPricesRequest
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CreateCurrencyPrice'
          description: ''
    CreateCustomer:
      title: CreateCustomer
      required:
      - first_name
      - last_name
      - email
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        cc_emails:
          type: string
        organization:
          type: string
        reference:
          type: string
        address:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        locale:
          type: string
          description: Set a specific language on a customer record.
        vat_number:
          type: string
        tax_exempt:
          type: boolean
        tax_exempt_reason:
          type: string
        parent_id:
          type:
          - integer
          - 'null'
          description: The parent ID in Chargify if applicable. Parent is another Customer object.
          contentEncoding: int32
    CreateCustomerRequest:
      title: CreateCustomerRequest
      required:
      - customer
      type: object
      properties:
        customer:
          allOf:
          - $ref: '#/components/schemas/CreateCustomer'
          - {}
    CreateEBBComponent:
      title: CreateEBBComponent
      required:
      - event_based_component
      type: object
      properties:
        event_based_component:
          allOf:
          - $ref: '#/components/schemas/EBBComponent'
          - {}
    CreateInvoice:
      title: CreateInvoice
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateInvoiceItem'
          description: ''
        issue_date:
          type: string
          contentEncoding: date
          examples:
          - 2024-01-01
        net_terms:
          type: integer
          description: By default, invoices will be created with a due date matching the date of invoice creation. If a different due date is desired, the net_terms parameter can be sent indicating the number of days in advance the due date should be.
          contentEncoding: int32
        payment_instructions:
          type: string
        memo:
          type: string
          description: A custom memo can be sent to override the site's default.
        seller_address:
          allOf:
          - $ref: '#/components/schemas/CreateInvoiceAddress'
          - description: Overrides the defaults for the site
        billing_address:
          allOf:
          - $ref: '#/components/schemas/CreateInvoiceAddress'
          - description: Overrides the default for the customer
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/CreateInvoiceAddress'
          - description: Overrides the default for the customer
        coupons:
          type: array
          items:
            $ref: '#/components/schemas/CreateInvoiceCoupon'
          description: ''
        status:
          allOf:
          - $ref: '#/components/schemas/CreateInvoiceStatus'
          - examples:
            - draft
    CreateInvoiceAddress:
      title: CreateInvoiceAddress
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        phone:
          type: string
        address:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
      description: Overrides the default address.
    CreateInvoiceCoupon:
      title: CreateInvoiceCoupon
      type: object
      properties:
        code:
          type: string
        percentage:
          oneOf:
          - type: string
          - maximum: 100
            type: number
          examples:
          - '50'
        amount:
          oneOf:
          - type: string
          - minimum: 0
            type: number
        description:
          maxLength: 255
          type: string
        product_family_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        compounding_strategy:
          allOf:
          - $ref: '#/components/schemas/CompoundingStrategy'
          - {}
    CreateInvoiceItem:
      title: CreateInvoiceItem
      type: object
      properties:
        title:
          type: string
        quantity:
          oneOf:
          - minimum: 0
            type: number
          - type: string
          description: The quantity can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065. If you submit a value with more than 8 decimal places, we will round it down to the 8th decimal place.
        unit_price:
          oneOf:
          - type: number
          - type: string
          description: The unit_price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065. If you submit a value with more than 8 decimal places, we will round it down to the 8th decimal place.
        taxable:
          type: boolean
          description: >-
            Set to true to automatically calculate taxes. Site must be configured to use and calculate taxes.


            If using Avalara, a tax_code parameter must also be sent.
        tax_code:
          type: string
        period_range_start:
          type: string
          description: YYYY-MM-DD
        period_range_end:
          type: string
          description: YYYY-MM-DD
        product_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Product handle or product id.
        component_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Component handle or component id.
        price_point_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Price point handle or id. For component.
        product_price_point_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        description:
          maxLength: 255
          type: string
    CreateInvoicePayment:
      title: CreateInvoicePayment
      type: object
      properties:
        amount:
          oneOf:
          - type: string
          - type: number
          description: A string of the dollar amount to be refunded (eg. "10.50" => $10.50)
        memo:
          type: string
          description: A description to be attached to the payment.
        method:
          allOf:
          - $ref: '#/components/schemas/InvoicePaymentMethodType'
          - description: The type of payment method used.
        details:
          type: string
          description: 'Additional information related to the payment method (eg. Check #)'
    CreateInvoicePaymentApplication:
      title: CreateInvoicePaymentApplication
      required:
      - invoice_uid
      - amount
      type: object
      properties:
        invoice_uid:
          type: string
          description: Unique identifier for the invoice. It has the prefix "inv_" followed by alphanumeric characters.
        amount:
          type: string
          description: Dollar amount of the invoice payment (eg. "10.50" => $10.50).
    CreateInvoicePaymentRequest:
      title: CreateInvoicePaymentRequest
      required:
      - payment
      type: object
      properties:
        payment:
          allOf:
          - $ref: '#/components/schemas/CreateInvoicePayment'
          - {}
        type:
          allOf:
          - $ref: '#/components/schemas/InvoicePaymentType'
          - description: The type of payment to be applied to an Invoice.
    CreateInvoiceRequest:
      title: CreateInvoiceRequest
      required:
      - invoice
      type: object
      properties:
        invoice:
          allOf:
          - $ref: '#/components/schemas/CreateInvoice'
          - {}
    CreateInvoiceStatus:
      title: CreateInvoiceStatus
      enum:
      - draft
      - open
      type: string
      examples:
      - draft
    CreateMetadata:
      title: CreateMetadata
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    CreateMetadataRequest:
      title: CreateMetadataRequest
      required:
      - metadata
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/CreateMetadata'
          description: ''
    CreateMetafield:
      title: CreateMetafield
      type: object
      properties:
        name:
          type: string
        scope:
          allOf:
          - $ref: '#/components/schemas/MetafieldScope'
          - description: "Warning: When updating a metafield's scope attribute, all scope attributes must be passed. Partially complete scope attributes will override the existing settings."
        input_type:
          allOf:
          - $ref: '#/components/schemas/MetafieldInput'
          - description: Indicates how data should be added to the metafield. For example, a text type is just a string, so a given metafield of this type can have any value attached. On the other hand, dropdown and radio have a set of allowed values that can be input, and appear differently on a Public Signup Page. Defaults to 'text'
        enum:
          type: array
          items:
            type: string
          description: Only applicable when input_type is radio or dropdown
      examples:
      - name: my_field
        scope:
          csv: '0'
          invoices: '0'
          statements: '0'
          portal: '0'
          public_show: '0'
          public_edit: '0'
        input_type: text
        enum:
        - string
    CreateMetafieldsRequest:
      title: CreateMetafieldsRequest
      required:
      - metafields
      type: object
      properties:
        metafields:
          oneOf:
          - allOf:
            - $ref: '#/components/schemas/CreateMetafield'
            - examples:
              - name: my_field
                scope:
                  csv: '0'
                  invoices: '0'
                  statements: '0'
                  portal: '0'
                  public_show: '0'
                  public_edit: '0'
                input_type: text
                enum:
                - string
          - type: array
            items:
              $ref: '#/components/schemas/CreateMetafield'
    CreateMeteredComponent:
      title: CreateMeteredComponent
      required:
      - metered_component
      type: object
      properties:
        metered_component:
          allOf:
          - $ref: '#/components/schemas/MeteredComponent'
          - {}
    CreateMultiInvoicePayment:
      title: CreateMultiInvoicePayment
      required:
      - amount
      - applications
      type: object
      properties:
        memo:
          type: string
          description: A description to be attached to the payment.
        details:
          type: string
          description: 'Additional information related to the payment method (eg. Check #).'
        method:
          allOf:
          - $ref: '#/components/schemas/InvoicePaymentMethodType'
          - description: The type of payment method used.
        amount:
          oneOf:
          - type: string
          - type: number
          description: Dollar amount of the sum of the invoices payment (eg. "10.50" => $10.50).
        received_on:
          type: string
          description: Date reflecting when the payment was received from a customer. Must be in the past.
        applications:
          type: array
          items:
            $ref: '#/components/schemas/CreateInvoicePaymentApplication'
          description: ''
    CreateMultiInvoicePaymentRequest:
      title: CreateMultiInvoicePaymentRequest
      required:
      - payment
      type: object
      properties:
        payment:
          allOf:
          - $ref: '#/components/schemas/CreateMultiInvoicePayment'
          - {}
    CreateOffer:
      title: CreateOffer
      required:
      - name
      - handle
      - product_id
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
        product_id:
          type: integer
          contentEncoding: int32
        product_price_point_id:
          type: integer
          contentEncoding: int32
        components:
          type: array
          items:
            $ref: '#/components/schemas/CreateOfferComponent'
          description: ''
        coupons:
          type: array
          items:
            type: string
          description: ''
    CreateOfferComponent:
      title: CreateOfferComponent
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        starting_quantity:
          type: integer
          contentEncoding: int32
    CreateOfferRequest:
      title: CreateOfferRequest
      required:
      - offer
      type: object
      properties:
        offer:
          allOf:
          - $ref: '#/components/schemas/CreateOffer'
          - {}
    CreateOnOffComponent:
      title: CreateOnOffComponent
      required:
      - on_off_component
      type: object
      properties:
        on_off_component:
          allOf:
          - $ref: '#/components/schemas/OnOffComponent'
          - {}
    CreateorUpdateCoupon:
      title: CreateorUpdateCoupon
      type: object
      properties:
        coupon:
          oneOf:
          - $ref: '#/components/schemas/CreateorUpdatePercentageCoupon'
          - $ref: '#/components/schemas/CreateorUpdateFlatAmountCoupon'
        restricted_products:
          type: object
          additionalProperties:
            type: boolean
          description: An object where the keys are product_ids and the values are booleans indicating if the coupon should be applicable to the product
        restricted_components:
          type: object
          additionalProperties:
            type: boolean
          description: An object where the keys are component_ids and the values are booleans indicating if the coupon should be applicable to the component
    CreateorUpdateFlatAmountCoupon:
      title: CreateorUpdateFlatAmountCoupon
      required:
      - name
      - code
      - amount_in_cents
      type: object
      properties:
        name:
          type: string
          description: the name of the coupon
        code:
          type: string
          description: 'may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): “%”, “@”, “+”, “-”, “_”, and “.”'
        description:
          type: string
        amount_in_cents:
          type: integer
          contentEncoding: int64
        allow_negative_balance:
          type: boolean
        recurring:
          type: boolean
        end_date:
          type: string
          contentEncoding: date-time
        product_family_id:
          type: string
        stackable:
          type: boolean
        compounding_strategy:
          allOf:
          - $ref: '#/components/schemas/CompoundingStrategy'
          - {}
        exclude_mid_period_allocations:
          type: boolean
        apply_on_cancel_at_end_of_period:
          type: boolean
    CreateorUpdatePercentageCoupon:
      title: CreateorUpdatePercentageCoupon
      required:
      - name
      - code
      - percentage
      type: object
      properties:
        name:
          type: string
          description: the name of the coupon
        code:
          type: string
          description: 'may contain uppercase alphanumeric characters and these special characters (which allow for email addresses to be used): “%”, “@”, “+”, “-”, “_”, and “.”'
        description:
          type: string
        percentage:
          oneOf:
          - type: string
          - type: number
        allow_negative_balance:
          type: boolean
        recurring:
          type: boolean
        end_date:
          type: string
          contentEncoding: date-time
        product_family_id:
          type: string
        stackable:
          type: boolean
        compounding_strategy:
          allOf:
          - $ref: '#/components/schemas/CompoundingStrategy'
          - {}
        exclude_mid_period_allocations:
          type: boolean
        apply_on_cancel_at_end_of_period:
          type: boolean
    CreateorUpdateProduct:
      title: CreateorUpdateProduct
      required:
      - name
      - description
      - price_in_cents
      - interval
      - interval_unit
      type: object
      properties:
        name:
          type: string
          description: The product name
        handle:
          type: string
          description: The product API handle
        description:
          type: string
          description: The product description
        accounting_code:
          type: string
          description: E.g. Internal ID or SKU Number
        require_credit_card:
          type: boolean
          description: Deprecated value that can be ignored unless you have legacy hosted pages. For Public Signup Page users, please read this attribute from under the signup page.
        price_in_cents:
          type: integer
          description: The product price, in integer cents
          contentEncoding: int64
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this product would renew every 30 days
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this product, either month or day
        auto_create_signup_page:
          type: boolean
        tax_code:
          maxLength: 10
          type: string
          description: A string representing the tax code related to the product type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
    CreateorUpdateProductRequest:
      title: CreateorUpdateProductRequest
      required:
      - product
      type: object
      properties:
        product:
          allOf:
          - $ref: '#/components/schemas/CreateorUpdateProduct'
          - {}
    CreateorUpdateSegmentPrice:
      title: CreateorUpdateSegmentPrice
      required:
      - unit_price
      type: object
      properties:
        starting_quantity:
          type: integer
          contentEncoding: int32
        ending_quantity:
          type: integer
          contentEncoding: int32
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
    CreatePayment:
      title: CreatePayment
      required:
      - amount
      - memo
      - payment_details
      - payment_method
      type: object
      properties:
        amount:
          type: string
        memo:
          type: string
        payment_details:
          type: string
        payment_method:
          type: string
    CreatePaymentProfile:
      title: CreatePaymentProfile
      type: object
      properties:
        chargify_token:
          type: string
          description: Token received after sending billing informations using chargify.js.
          examples:
          - tok_9g6hw85pnpt6knmskpwp4ttt
        id:
          type: integer
          contentEncoding: int32
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          - {}
        first_name:
          type: string
          description: First name on card or bank account. If omitted, the first_name from customer attributes will be used.
        last_name:
          type: string
          description: Last name on card or bank account. If omitted, the last_name from customer attributes will be used.
        masked_card_number:
          type: string
        full_number:
          type: string
          description: The full credit card number
          examples:
          - '5424000000000015'
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: The type of card used.
        expiration_month:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: (Optional when performing an Import via vault_token, required otherwise) The 1- or 2-digit credit card expiration month, as an integer or string, i.e. 5
        expiration_year:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: (Optional when performing a Import via vault_token, required otherwise) The 4-digit credit card expiration year, as an integer or string, i.e. 2012
        billing_address:
          type: string
          description: The credit card or bank account billing street address (i.e. 123 Main St.). This value is merely passed through to the payment gateway.
        billing_address_2:
          type:
          - string
          - 'null'
          description: Second line of the customer’s billing address i.e. Apt. 100
        billing_city:
          type: string
          description: The credit card or bank account billing address city (i.e. “Boston”). This value is merely passed through to the payment gateway.
        billing_state:
          type: string
          description: The credit card or bank account billing address state (i.e. MA). This value is merely passed through to the payment gateway. This must conform to the [ISO_3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.
        billing_country:
          type: string
          description: The credit card or bank account billing address country, required in [ISO_3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”). This value is merely passed through to the payment gateway. Some gateways require country codes in a specific format. Please check your gateway’s documentation. If creating an ACH subscription, only US is supported at this time.
        billing_zip:
          type: string
          description: The credit card or bank account billing address zip code (i.e. 12345). This value is merely passed through to the payment gateway.
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
        vault_token:
          type: string
          description: The “token” provided by your vault storage for an already stored payment profile
        customer_vault_token:
          type: string
          description: (only for Authorize.Net CIM storage or Square) The customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token
        customer_id:
          type: integer
          description: (Required when creating a new payment profile) The Chargify customer id.
          contentEncoding: int32
        paypal_email:
          type: string
          description: used by merchants that implemented BraintreeBlue javaScript libraries on their own. We recommend using Chargify.js instead.
          deprecated: true
        payment_method_nonce:
          type: string
          description: used by merchants that implemented BraintreeBlue javaScript libraries on their own. We recommend using Chargify.js instead.
          deprecated: true
        gateway_handle:
          type: string
          description: This attribute is only available if MultiGateway feature is enabled for your Site. This feature is in the Private Beta currently. gateway_handle is used to directly select a gateway where a payment profile will be stored in. Every connected gateway must have a unique gateway handle specified. Read [Multigateway description](https://chargify.zendesk.com/hc/en-us/articles/4407761759643#connecting-with-multiple-gateways) to learn more about new concepts that MultiGateway introduces and the default behavior when this attribute is not passed.
        cvv:
          type: string
          description: The 3- or 4-digit Card Verification Value. This value is merely passed through to the payment gateway.
        bank_name:
          type: string
          description: (Required when creating with ACH or GoCardless, optional with Stripe Direct Debit). The name of the bank where the customerʼs account resides
        bank_iban:
          type: string
          description: (Optional when creating with GoCardless, required with Stripe Direct Debit). International Bank Account Number. Alternatively, local bank details can be provided
        bank_routing_number:
          type: string
          description: (Required when creating with ACH. Optional when creating a subscription with GoCardless). The routing number of the bank. It becomes bank_code while passing via GoCardless API
        bank_account_number:
          type: string
          description: (Required when creating with ACH, GoCardless, Stripe BECS Direct Debit and bank_iban is blank) The customerʼs bank account number
        bank_branch_code:
          type: string
          description: (Optional when creating with GoCardless, required with Stripe BECS Direct Debit) Branch code. Alternatively, an IBAN can be provided
        bank_account_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountType'
          - description: Defaults to checking
        bank_account_holder_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountHolderType'
          - description: Defaults to personal
        last_four:
          type: string
          description: (Optional) Used for creating subscription with payment profile imported using vault_token, for proper display in Advanced Billing UI
    CreatePaymentProfileRequest:
      title: CreatePaymentProfileRequest
      required:
      - payment_profile
      type: object
      properties:
        payment_profile:
          allOf:
          - $ref: '#/components/schemas/CreatePaymentProfile'
          - {}
    CreatePrepaidComponent:
      title: CreatePrepaidComponent
      required:
      - prepaid_usage_component
      type: object
      properties:
        prepaid_usage_component:
          allOf:
          - $ref: '#/components/schemas/PrepaidUsageComponent'
          - {}
    CreatePrepaidUsageComponentPricePoint:
      title: CreatePrepaidUsageComponentPricePoint
      required:
      - name
      - pricing_scheme
      - prices
      - overage_pricing
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
        overage_pricing:
          allOf:
          - $ref: '#/components/schemas/OveragePricing'
          - {}
        use_site_exchange_rate:
          type: boolean
          description: Whether to use the site level exchange rate or define your own prices for each currency if you have multiple currencies defined on the site.
          default: true
        rollover_prepaid_remainder:
          type: boolean
          description: Boolean which controls whether or not remaining units should be rolled over to the next period
        renew_prepaid_allocation:
          type: boolean
          description: Boolean which controls whether or not the allocated quantity should be renewed at the beginning of each period
        expiration_interval:
          type: number
          description: (only for prepaid usage components where rollover_prepaid_remainder is true) The number of `expiration_interval_unit`s after which rollover amounts should expire
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - {}
    CreatePrepayment:
      title: CreatePrepayment
      required:
      - amount
      - details
      - memo
      - method
      type: object
      properties:
        amount:
          type: number
        details:
          type: string
        memo:
          type: string
        method:
          allOf:
          - $ref: '#/components/schemas/PrepaymentMethod'
          - description: :- When the `method` specified is `"credit_card_on_file"`, the prepayment amount will be collected using the default credit card payment profile and applied to the prepayment account balance. This is especially useful for manual replenishment of prepaid subscriptions.
        payment_profile_id:
          type: integer
          contentEncoding: int32
    CreatePrepaymentRequest:
      title: CreatePrepaymentRequest
      required:
      - prepayment
      type: object
      properties:
        prepayment:
          allOf:
          - $ref: '#/components/schemas/CreatePrepayment'
          - {}
    CreatePrepaymentResponse:
      title: CreatePrepaymentResponse
      required:
      - prepayment
      type: object
      properties:
        prepayment:
          allOf:
          - $ref: '#/components/schemas/CreatedPrepayment'
          - {}
    CreateProductCurrencyPrice:
      title: CreateProductCurrencyPrice
      required:
      - currency
      - price
      - role
      type: object
      properties:
        currency:
          type: string
          description: ISO code for one of the site level currencies.
        price:
          type: integer
          description: Price for the given role.
          contentEncoding: int32
        role:
          allOf:
          - $ref: '#/components/schemas/CurrencyPriceRole'
          - description: Role for the price.
    CreateProductCurrencyPricesRequest:
      title: CreateProductCurrencyPricesRequest
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductCurrencyPrice'
          description: ''
    CreateProductFamily:
      title: CreateProductFamily
      type: object
      properties:
        name:
          type: string
        description:
          type:
          - string
          - 'null'
    CreateProductFamilyRequest:
      title: CreateProductFamilyRequest
      required:
      - product_family
      type: object
      properties:
        product_family:
          allOf:
          - $ref: '#/components/schemas/CreateProductFamily'
          - {}
    CreateProductPricePoint:
      title: CreateProductPricePoint
      required:
      - name
      - price_in_cents
      - interval
      - interval_unit
      type: object
      properties:
        name:
          type: string
          description: The product price point name
        handle:
          type: string
          description: The product price point API handle
        price_in_cents:
          type: integer
          description: The product price point price, in integer cents
          contentEncoding: int64
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this product price point would renew every 30 days
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this product price point, either month or day
        trial_price_in_cents:
          type: integer
          description: The product price point trial price, in integer cents
          contentEncoding: int64
        trial_interval:
          type: integer
          description: The numerical trial interval. i.e. an interval of ‘30’ coupled with an trial_interval_unit of day would mean this product price point would renew every 30 days
          contentEncoding: int32
        trial_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the trial interval unit for this product price point, either month or day
        trial_type:
          type: string
        initial_charge_in_cents:
          type: integer
          description: The product price point initial charge, in integer cents
          contentEncoding: int64
        initial_charge_after_trial:
          type: boolean
        expiration_interval:
          type: integer
          description: The numerical expiration interval. i.e. an expiration_interval of ‘30’ coupled with an expiration_interval_unit of day would mean this product price point would expire every 30 days
          contentEncoding: int32
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the expiration interval unit for this product price point, either month or day
        use_site_exchange_rate:
          type: boolean
          description: Whether or not to use the site's exchange rate or define your own pricing when your site has multiple currencies defined.
          default: true
    CreateProductPricePointRequest:
      title: CreateProductPricePointRequest
      required:
      - price_point
      type: object
      properties:
        price_point:
          allOf:
          - $ref: '#/components/schemas/CreateProductPricePoint'
          - {}
    CreateQuantityBasedComponent:
      title: CreateQuantityBasedComponent
      required:
      - quantity_based_component
      type: object
      properties:
        quantity_based_component:
          allOf:
          - $ref: '#/components/schemas/QuantityBasedComponent'
          - {}
    CreateReasonCode:
      title: CreateReasonCode
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: The unique identifier for the ReasonCode
        description:
          type: string
          description: The friendly summary of what the code signifies
        position:
          type: integer
          description: The order that code appears in lists
          contentEncoding: int32
    CreateReasonCodeRequest:
      title: CreateReasonCodeRequest
      required:
      - reason_code
      type: object
      properties:
        reason_code:
          allOf:
          - $ref: '#/components/schemas/CreateReasonCode'
          - {}
    CreateSegment:
      title: CreateSegment
      required:
      - pricing_scheme
      type: object
      properties:
        segment_property_1_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
          description: A value that will occur in your events that you want to bill upon. The type of the value depends on the property type in the related event based billing metric.
        segment_property_2_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
          description: A value that will occur in your events that you want to bill upon. The type of the value depends on the property type in the related event based billing metric.
        segment_property_3_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
          description: A value that will occur in your events that you want to bill upon. The type of the value depends on the property type in the related event based billing metric.
        segment_property_4_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
          description: A value that will occur in your events that you want to bill upon. The type of the value depends on the property type in the related event based billing metric.
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/CreateorUpdateSegmentPrice'
          description: ''
    CreateSegmentRequest:
      title: CreateSegmentRequest
      required:
      - segment
      type: object
      properties:
        segment:
          allOf:
          - $ref: '#/components/schemas/CreateSegment'
          - {}
    CreateSubscription:
      title: CreateSubscription
      type: object
      properties:
        product_handle:
          type: string
          description: The API Handle of the product for which you are creating a subscription. Required, unless a `product_id` is given instead.
        product_id:
          type: integer
          description: The Product ID of the product for which you are creating a subscription. The product ID is not currently published, so we recommend using the API Handle instead.
          contentEncoding: int32
        product_price_point_handle:
          type: string
          description: The user-friendly API handle of a product's particular price point.
        product_price_point_id:
          type: integer
          description: The ID of the particular price point on the product.
          contentEncoding: int32
        custom_price:
          allOf:
          - $ref: '#/components/schemas/SubscriptionCustomPrice'
          - description: (Optional) Used in place of `product_price_point_id` to define a custom price point unique to the subscription
        coupon_code:
          type: string
          description: (deprecated) The coupon code of the single coupon currently applied to the subscription. See coupon_codes instead as subscriptions can now have more than one coupon.
        coupon_codes:
          type: array
          items:
            type: string
          description: An array for all the coupons attached to the subscription.
        payment_collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
        receives_invoice_emails:
          type: string
          description: '(Optional) Default: True - Whether or not this subscription is set to receive emails related to this subscription.'
        net_terms:
          type: string
          description: '(Optional) Default: null The number of days after renewal (on invoice billing) that a subscription is due. A value between 0 (due immediately) and 180.'
        customer_id:
          type: integer
          description: The ID of an existing customer within Chargify. Required, unless a `customer_reference` or a set of `customer_attributes` is given.
          contentEncoding: int32
        next_billing_at:
          type: string
          description: (Optional) Set this attribute to a future date/time to sync imported subscriptions to your existing renewal schedule. See the notes on “Date/Time Format” in our [subscription import documentation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404863655821#date-format). If you provide a next_billing_at timestamp that is in the future, no trial or initial charges will be applied when you create the subscription. In fact, no payment will be captured at all. The first payment will be captured, according to the prices defined by the product, near the time specified by next_billing_at. If you do not provide a value for next_billing_at, any trial and/or initial charges will be assessed and charged at the time of subscription creation. If the card cannot be successfully charged, the subscription will not be created. See further notes in the section on Importing Subscriptions.
          contentEncoding: date-time
        initial_billing_at:
          type: string
          description: (Optional) Set this attribute to a future date/time to create a subscription in the "Awaiting Signup" state, rather than "Active" or "Trialing". See the notes on “Date/Time Format” in our [subscription import documentation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404863655821#date-format). In the "Awaiting Signup" state, a subscription behaves like any other. It can be canceled, allocated to, had its billing date changed. etc. When the initial_billing_at date hits, the subscription will transition to the expected state. If the product has a trial, the subscription will enter a trial, otherwise it will go active. Setup fees will be respected either before or after the trial, as configured on the price point. If the payment is due at the initial_billing_at and it fails the subscription will be immediately canceled. See further notes in the section on Delayed Signups.
          contentEncoding: date-time
        stored_credential_transaction_id:
          type: integer
          description: For European sites subject to PSD2 and using 3D Secure, this can be used to reference a previous transaction for the customer. This will ensure the card will be charged successfully at renewal.
          contentEncoding: int32
        sales_rep_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          description: The Payment Profile ID of an existing card or bank account, which belongs to an existing customer to use for payment for this subscription. If the card, bank account, or customer does not exist already, or if you want to use a new (unstored) card or bank account for the subscription, use `payment_profile_attributes` instead to create a new payment profile along with the subscription. (This value is available on an existing subscription via the API as `credit_card` > id or `bank_account` > id)
          contentEncoding: int32
        reference:
          type: string
          description: The reference value (provided by your app) for the subscription itelf.
        customer_attributes:
          allOf:
          - $ref: '#/components/schemas/CustomerAttributes'
          - {}
        payment_profile_attributes:
          allOf:
          - $ref: '#/components/schemas/PaymentProfileAttributes'
          - description: alias to credit_card_attributes
        credit_card_attributes:
          allOf:
          - $ref: '#/components/schemas/PaymentProfileAttributes'
          - description: Credit Card data to create a new Subscription. Interchangeable with `payment_profile_attributes` property.
        bank_account_attributes:
          allOf:
          - $ref: '#/components/schemas/BankAccountAttributes'
          - {}
        components:
          type: array
          items:
            $ref: '#/components/schemas/CreateSubscriptionComponent'
          description: (Optional) An array of component ids and quantities to be added to the subscription. See [Components](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677) for more information.
        calendar_billing:
          allOf:
          - $ref: '#/components/schemas/CalendarBilling'
          - description: (Optional). Cannot be used when also specifying next_billing_at
        metafields:
          type: object
          additionalProperties:
            type: string
          description: (Optional) A set of key/value pairs representing custom fields and their values. Metafields will be created “on-the-fly” in your site for a given key, if they have not been created yet.
          examples:
          - custom_field_name_1: custom_field_value_1
            custom_field_name_2: custom_field_value_2
        customer_reference:
          type: string
          description: The reference value (provided by your app) of an existing customer within Chargify. Required, unless a `customer_id` or a set of `customer_attributes` is given.
        group:
          allOf:
          - $ref: '#/components/schemas/GroupSettings'
          - {}
        ref:
          type: string
          description: A valid referral code. (optional, see [Referrals](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405420204045-Referrals-Reference#how-to-obtain-referral-codes) for more details). If supplied, must be valid, or else subscription creation will fail.
        cancellation_message:
          type: string
          description: (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about the reason for cancellation.
        cancellation_method:
          type: string
          description: (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to make a note about how the subscription was canceled.
        currency:
          type: string
          description: (Optional) If Multi-Currency is enabled and the currency is configured in Chargify, pass it at signup to create a subscription on a non-default currency. Note that you cannot update the currency of an existing subscription.
        expires_at:
          type: string
          description: Timestamp giving the expiration date of this subscription (if any). You may manually change the expiration date at any point during a subscription period.
          contentEncoding: date-time
        expiration_tracks_next_billing_change:
          type: string
          description: (Optional, default false) When set to true, and when next_billing_at is present, if the subscription expires, the expires_at will be shifted by the same amount of time as the difference between the old and new “next billing” dates.
        agreement_terms:
          type: string
          description: (Optional) The ACH authorization agreement terms. If enabled, an email will be sent to the customer with a copy of the terms.
        authorizer_first_name:
          type: string
          description: (Optional) The first name of the person authorizing the ACH agreement.
        authorizer_last_name:
          type: string
          description: (Optional) The last name of the person authorizing the ACH agreement.
        calendar_billing_first_charge:
          type: string
          description: (Optional) One of “prorated” (the default – the prorated product price will be charged immediately), “immediate” (the full product price will be charged immediately), or “delayed” (the full product price will be charged with the first scheduled renewal).
        reason_code:
          type: string
          description: (Optional) Can be used when canceling a subscription (via the HTTP DELETE method) to indicate why a subscription was canceled.
        product_change_delayed:
          type: boolean
          description: (Optional, used only for Delayed Product Change When set to true, indicates that a changed value for product_handle should schedule the product change to the next subscription renewal.
        offer_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Use in place of passing product and component information to set up the subscription with an existing offer. May be either the Chargify id of the offer or its handle prefixed with `handle:`.er
        prepaid_configuration:
          allOf:
          - $ref: '#/components/schemas/UpsertPrepaidConfiguration'
          - {}
        previous_billing_at:
          type: string
          description: Providing a previous_billing_at that is in the past will set the current_period_starts_at when the subscription is created. It will also set activated_at if not explicitly passed during the subscription import. Can only be used if next_billing_at is also passed. Using this option will allow you to set the period start for the subscription so mid period component allocations have the correct prorated amount.
          contentEncoding: date-time
        import_mrr:
          type: boolean
          description: Setting this attribute to true will cause the subscription's MRR to be added to your MRR analytics immediately. For this value to be honored, a next_billing_at must be present and set to a future date. This key/value will not be returned in the subscription response body.
        canceled_at:
          type: string
        activated_at:
          type: string
          contentEncoding: date-time
        agreement_acceptance:
          allOf:
          - $ref: '#/components/schemas/AgreementAcceptance'
          - description: Required when creating a subscription with Maxio Payments.
        ach_agreement:
          allOf:
          - $ref: '#/components/schemas/ACHAgreement'
          - description: (Optional) If passed, the proof of the authorized ACH agreement terms will be persisted.
        dunning_communication_delay_enabled:
          type:
          - boolean
          - 'null'
          description: Enable Communication Delay feature, making sure no communication (email or SMS) is sent to the Customer between 9PM and 8AM in time zone set by the `dunning_communication_delay_time_zone` attribute.
          default: false
        dunning_communication_delay_time_zone:
          type:
          - string
          - 'null'
          description: Time zone for the Dunning Communication Delay feature.
          examples:
          - '"Eastern Time (US & Canada)"'
        skip_billing_manifest_taxes:
          type: boolean
          description: Valid only for the Subscription Preview endpoint. When set to `true` it skips calculating taxes for the current and next billing manifests.
          default: false
    CreateSubscriptionComponent:
      title: CreateSubscriptionComponent
      type: object
      properties:
        component_id:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        enabled:
          type: boolean
          description: Used for on/off components only.
        unit_balance:
          type: integer
          description: Used for metered and events based components.
          contentEncoding: int32
        allocated_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: Used for quantity based components.
        quantity:
          type: integer
          description: Deprecated. Use `allocated_quantity` instead.
          contentEncoding: int32
          deprecated: true
        price_point_id:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        custom_price:
          allOf:
          - $ref: '#/components/schemas/ComponentCustomPrice'
          - description: Create or update custom pricing unique to the subscription. Used in place of `price_point_id`.
    CreateSubscriptionGroup:
      title: CreateSubscriptionGroup
      required:
      - subscription_id
      type: object
      properties:
        subscription_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        member_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
    CreateSubscriptionGroupRequest:
      title: CreateSubscriptionGroupRequest
      required:
      - subscription_group
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/CreateSubscriptionGroup'
          - {}
    CreateSubscriptionRequest:
      title: CreateSubscriptionRequest
      required:
      - subscription
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/CreateSubscription'
          - {}
    CreateUsage:
      title: CreateUsage
      type: object
      properties:
        quantity:
          type: number
          description: integer by default or decimal number if fractional quantities are enabled for the component
        price_point_id:
          type: string
        memo:
          type: string
        billing_schedule:
          allOf:
          - $ref: '#/components/schemas/BillingSchedule'
          - description: This attribute is particularly useful when you need to align billing events for different components on distinct schedules within a subscription. Please note this only works for site with Multifrequency enabled
    CreateUsageRequest:
      title: CreateUsageRequest
      required:
      - usage
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/CreateUsage'
          - {}
    CreatedPrepayment:
      title: CreatedPrepayment
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        amount_in_cents:
          type: integer
          contentEncoding: int64
        memo:
          type: string
        created_at:
          type: string
        starting_balance_in_cents:
          type: integer
          contentEncoding: int64
        ending_balance_in_cents:
          type: integer
          contentEncoding: int64
    CreditAccountBalanceChanged:
      title: CreditAccountBalanceChanged
      required:
      - reason
      - service_credit_account_balance_in_cents
      - service_credit_balance_change_in_cents
      - currency_code
      - at_time
      type: object
      properties:
        reason:
          type: string
        service_credit_account_balance_in_cents:
          type: integer
          contentEncoding: int64
        service_credit_balance_change_in_cents:
          type: integer
          contentEncoding: int64
        currency_code:
          type: string
        at_time:
          type: string
    CreditCardAttributes:
      title: CreditCardAttributes
      type: object
      properties:
        full_number:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: string
    CreditCardPaymentProfile:
      title: CreditCardPaymentProfile
      required:
      - masked_card_number
      type: object
      properties:
        id:
          type: integer
          description: The Chargify-assigned ID of the stored card. This value can be used as an input to payment_profile_id when creating a subscription, in order to re-use a stored payment profile for the same customer.
          contentEncoding: int32
        first_name:
          type: string
          description: The first name of the card holder.
        last_name:
          type: string
          description: The last name of the card holder.
        masked_card_number:
          type: string
          description: A string representation of the credit card number with all but the last 4 digits masked with X’s (i.e. ‘XXXX-XXXX-XXXX-1234’).
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: The type of card used.
        expiration_month:
          type: integer
          description: An integer representing the expiration month of the card(1 – 12).
          contentEncoding: int32
        expiration_year:
          type: integer
          description: An integer representing the 4-digit expiration year of the card(i.e. ‘2012’).
          contentEncoding: int32
        customer_id:
          type: integer
          description: The Chargify-assigned id for the customer record to which the card belongs.
          contentEncoding: int32
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
        vault_token:
          type:
          - string
          - 'null'
          description: The “token” provided by your vault storage for an already stored payment profile.
        billing_address:
          type:
          - string
          - 'null'
          description: The current billing street address for the card.
        billing_city:
          type:
          - string
          - 'null'
          description: The current billing address city for the card.
        billing_state:
          type:
          - string
          - 'null'
          description: The current billing address state for the card.
        billing_zip:
          type:
          - string
          - 'null'
          description: The current billing address zip code for the card.
        billing_country:
          type:
          - string
          - 'null'
          description: The current billing address country for the card.
        customer_vault_token:
          type:
          - string
          - 'null'
          description: '(only for Authorize.Net CIM storage): the customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token.'
        billing_address_2:
          type:
          - string
          - 'null'
          description: The current billing street address, second line, for the card.
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          - {}
        disabled:
          type: boolean
        chargify_token:
          type: string
          description: Token received after sending billing information using chargify.js. This token will only be received if passed as a sole attribute of credit_card_attributes (i.e. tok_9g6hw85pnpt6knmskpwp4ttt)
        site_gateway_setting_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        gateway_handle:
          type:
          - string
          - 'null'
          description: An identifier of connected gateway.
      examples:
      - id: 10088716
        first_name: Test
        last_name: Subscription
        masked_card_number: XXXX-XXXX-XXXX-1
        card_type: bogus
        expiration_month: 1
        expiration_year: 2022
        customer_id: 14543792
        current_vault: bogus
        vault_token: '1'
        billing_address: 123 Montana Way
        billing_city: Billings
        billing_state: MT
        billing_zip: '59101'
        billing_country: US
        customer_vault_token: null
        billing_address_2: ''
        payment_type: credit_card
        site_gateway_setting_id: 1
        gateway_handle: null
    CreditNote:
      title: CreditNote
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the credit note. It is generated automatically by Chargify and has the prefix "cn_" followed by alphanumeric characters.
        site_id:
          type: integer
          description: ID of the site to which the credit note belongs.
          contentEncoding: int32
        customer_id:
          type: integer
          description: ID of the customer to which the credit note belongs.
          contentEncoding: int32
        subscription_id:
          type: integer
          description: ID of the subscription that generated the credit note.
          contentEncoding: int32
        number:
          type: string
          description: >-
            A unique, identifying string that appears on the credit note and in places it is referenced.


            While the UID is long and not appropriate to show to customers, the number is usually shorter and consumable by the customer and the merchant alike.
        sequence_number:
          type: integer
          description: A monotonically increasing number assigned to credit notes as they are created.  This number is unique within a site and can be used to sort and order credit notes.
          contentEncoding: int32
        issue_date:
          type: string
          description: >-
            Date the credit note was issued to the customer.  This is the date that the credit was made available for application, and may come before it is fully applied.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
        applied_date:
          type: string
          description: >-
            Credit notes are applied to invoices to offset invoiced amounts - they reduce the amount due. This field is the date the credit note became fully applied to invoices.


            If the credit note has been partially applied, this field will not have a value until it has been fully applied.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
        status:
          allOf:
          - $ref: '#/components/schemas/CreditNoteStatus'
          - description: Current status of the credit note.
        currency:
          type: string
          description: The ISO 4217 currency code (3 character string) representing the currency of the credit note amount fields.
        memo:
          type: string
          description: The memo printed on credit note, which is a description of the reason for the credit.
        seller:
          allOf:
          - $ref: '#/components/schemas/InvoiceSeller'
          - description: Information about the seller (merchant) listed on the masthead of the credit note.
        customer:
          allOf:
          - $ref: '#/components/schemas/InvoiceCustomer'
          - description: Information about the customer who is owner or recipient the credited subscription.
        billing_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - description: The billing address of the credit subscription.
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - description: The shipping address of the credited subscription.
        subtotal_amount:
          type: string
          description: Subtotal of the credit note, which is the sum of all line items before discounts or taxes. Note that this is a positive amount representing the credit back to the customer.
        discount_amount:
          type: string
          description: Total discount applied to the credit note. Note that this is a positive amount representing the discount amount being credited back to the customer (i.e. a credit on an earlier discount). For example, if the original purchase was $1.00 and the original discount was $0.10, a credit of $0.50 of the original purchase (half) would have a discount credit of $0.05 (also half).
        tax_amount:
          type: string
          description: Total tax of the credit note. Note that this is a positive amount representing a previously taxex amount being credited back to the customer (i.e. a credit of an earlier tax). For example, if the original purchase was $1.00 and the original tax was $0.10, a credit of $0.50 of the original purchase (half) would also have a tax credit of $0.05 (also half).
        total_amount:
          type: string
          description: The credit note total, which is `subtotal_amount - discount_amount + tax_amount`.'
        applied_amount:
          type: string
          description: The amount of the credit note that has already been applied to invoices.
        remaining_amount:
          type: string
          description: The amount of the credit note remaining to be applied to invoices, which is `total_amount - applied_amount`.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteLineItem'
          description: Line items on the credit note.
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDiscount'
          description: ''
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTax'
          description: ''
        applications:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteApplication'
          description: ''
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceRefund'
          description: ''
        origin_invoices:
          type: array
          items:
            $ref: '#/components/schemas/OriginInvoice'
          description: An array of origin invoices for the credit note. Learn more about [Origin Invoice from our docs](https://chargify.zendesk.com/hc/en-us/articles/4407753036699#origin-invoices)
    CreditNoteApplication:
      title: CreditNoteApplication
      type: object
      properties:
        uid:
          type: string
        transaction_time:
          type: string
        invoice_uid:
          type: string
        memo:
          type: string
        applied_amount:
          type: string
    CreditNoteLineItem:
      title: CreditNoteLineItem
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the line item.  Useful when cross-referencing the line against individual discounts in the `discounts` or `taxes` lists.
        title:
          type: string
          description: A short descriptor for the credit given by this line.
        description:
          type: string
          description: >-
            Detailed description for the credit given by this line.  May include proration details in plain text.


            Note: this string may contain line breaks that are hints for the best display format on the credit note.
        quantity:
          type: string
          description: >-
            The quantity or count of units credited by the line item.


            This is a decimal number represented as a string. (See "About Decimal Numbers".)
        unit_price:
          type: string
          description: >-
            The price per unit for the line item.


            When tiered pricing was used (i.e. not every unit was actually priced at the same price) this will be the blended average cost per unit and the `tiered_unit_price` field will be set to `true`.
        subtotal_amount:
          type: string
          description: The line subtotal, generally calculated as `quantity * unit_price`. This is the canonical amount of record for the line - when rounding differences are in play, `subtotal_amount` takes precedence over the value derived from `quantity * unit_price` (which may not have the proper precision to exactly equal this amount).
        discount_amount:
          type: string
          description: >-
            The approximate discount of just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total discount among many lines. Several lines may have been summed prior to applying the discount to arrive at `discount_amount` for the invoice - backing that out to the discount on a single line may introduce rounding or precision errors.
        tax_amount:
          type: string
          description: >-
            The approximate tax of just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total tax among many lines. Several lines may have been summed prior to applying the tax rate to arrive at `tax_amount` for the invoice - backing that out to the tax on a single line may introduce rounding or precision errors.
        total_amount:
          type: string
          description: >-
            The non-canonical total amount for the line.


            `subtotal_amount` is the canonical amount for a line. The invoice `total_amount` is derived from the sum of the line `subtotal_amount`s and discounts or taxes applied thereafter.  Therefore, due to rounding or precision errors, the sum of line `total_amount`s may not equal the invoice `total_amount`.
        tiered_unit_price:
          type: boolean
          description: When `true`, indicates that the actual pricing scheme for the line was tiered, so the `unit_price` shown is the blended average for all units.
        period_range_start:
          type: string
          description: Start date for the period credited by this line. The format is `"YYYY-MM-DD"`.
        period_range_end:
          type: string
          description: End date for the period credited by this line. The format is `"YYYY-MM-DD"`.
        product_id:
          type: integer
          description: >-
            The ID of the product being credited.


            This may be set even for component credits, so true product-only (non-component) credits will also have a nil `component_id`.
          contentEncoding: int32
        product_version:
          type: integer
          description: The version of the product being credited.
          contentEncoding: int32
        component_id:
          type:
          - integer
          - 'null'
          description: The ID of the component being credited. Will be `nil` for non-component credits.
          contentEncoding: int32
        price_point_id:
          type:
          - integer
          - 'null'
          description: The price point ID of the component being credited. Will be `nil` for non-component credits.
          contentEncoding: int32
    CreditNoteStatus:
      title: CreditNoteStatus
      enum:
      - open
      - applied
      type: string
      description: Current status of the credit note.
    CreditNote1:
      title: CreditNote1
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the credit note. It is generated automatically by Chargify and has the prefix "cn_" followed by alphanumeric characters.
        site_id:
          type: integer
          description: ID of the site to which the credit note belongs.
          contentEncoding: int32
        customer_id:
          type: integer
          description: ID of the customer to which the credit note belongs.
          contentEncoding: int32
        subscription_id:
          type: integer
          description: ID of the subscription that generated the credit note.
          contentEncoding: int32
        number:
          type: string
          description: >-
            A unique, identifying string that appears on the credit note and in places it is referenced.


            While the UID is long and not appropriate to show to customers, the number is usually shorter and consumable by the customer and the merchant alike.
        sequence_number:
          type: integer
          description: A monotonically increasing number assigned to credit notes as they are created.  This number is unique within a site and can be used to sort and order credit notes.
          contentEncoding: int32
        issue_date:
          type: string
          description: >-
            Date the credit note was issued to the customer.  This is the date that the credit was made available for application, and may come before it is fully applied.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
        applied_date:
          type: string
          description: >-
            Credit notes are applied to invoices to offset invoiced amounts - they reduce the amount due. This field is the date the credit note became fully applied to invoices.


            If the credit note has been partially applied, this field will not have a value until it has been fully applied.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
        status:
          allOf:
          - $ref: '#/components/schemas/CreditNoteStatus'
          - description: Current status of the credit note.
        currency:
          type: string
          description: The ISO 4217 currency code (3 character string) representing the currency of the credit note amount fields.
        memo:
          type: string
          description: The memo printed on credit note, which is a description of the reason for the credit.
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          - {}
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          - {}
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          - {}
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          - {}
        subtotal_amount:
          type: string
          description: Subtotal of the credit note, which is the sum of all line items before discounts or taxes. Note that this is a positive amount representing the credit back to the customer.
        discount_amount:
          type: string
          description: Total discount applied to the credit note. Note that this is a positive amount representing the discount amount being credited back to the customer (i.e. a credit on an earlier discount). For example, if the original purchase was $1.00 and the original discount was $0.10, a credit of $0.50 of the original purchase (half) would have a discount credit of $0.05 (also half).
        tax_amount:
          type: string
          description: Total tax of the credit note. Note that this is a positive amount representing a previously taxex amount being credited back to the customer (i.e. a credit of an earlier tax). For example, if the original purchase was $1.00 and the original tax was $0.10, a credit of $0.50 of the original purchase (half) would also have a tax credit of $0.05 (also half).
        total_amount:
          type: string
          description: The credit note total, which is `subtotal_amount - discount_amount + tax_amount`.'
        applied_amount:
          type: string
          description: The amount of the credit note that has already been applied to invoices.
        remaining_amount:
          type: string
          description: The amount of the credit note remaining to be applied to invoices, which is `total_amount - applied_amount`.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteLineItem'
          description: Line items on the credit note.
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDiscount'
          description: ''
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTax'
          description: ''
        applications:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteApplication'
          description: ''
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceRefund'
          description: ''
        origin_invoices:
          type: array
          items:
            $ref: '#/components/schemas/OriginInvoice'
          description: An array of origin invoices for the credit note. Learn more about [Origin Invoice from our docs](https://chargify.zendesk.com/hc/en-us/articles/4407753036699#origin-invoices)
    CreditScheme:
      title: CreditScheme
      enum:
      - none
      - credit
      - refund
      type: string
    CreditSchemeRequest:
      title: CreditSchemeRequest
      required:
      - credit_scheme
      type: object
      properties:
        credit_scheme:
          allOf:
          - $ref: '#/components/schemas/CreditScheme'
          - {}
    CreditType:
      title: CreditType
      enum:
      - full
      - prorated
      - none
      type: string
      description: >-
        The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

        Available values: `full`, `prorated`, `none`.
    CurrencyPrice:
      title: CurrencyPrice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        currency:
          type: string
        price:
          type: number
        formatted_price:
          type: string
        product_price_point_id:
          type: integer
          contentEncoding: int32
        role:
          allOf:
          - $ref: '#/components/schemas/CurrencyPriceRole'
          - description: Role for the price.
    CurrencyPriceRole:
      title: CurrencyPriceRole
      enum:
      - baseline
      - trial
      - initial
      type: string
      description: Role for the price.
    CurrencyPricesResponse:
      title: CurrencyPricesResponse
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyPrice'
          description: ''
    CurrentVault:
      title: CurrentVault
      enum:
      - adyen
      - authorizenet
      - avalara
      - beanstream
      - blue_snap
      - bogus
      - braintree_blue
      - checkout
      - cybersource
      - elavon
      - eway
      - eway_rapid_std
      - firstdata
      - forte
      - gocardless
      - litle
      - maxio_payments
      - moduslink
      - moneris
      - nmi
      - orbital
      - payment_express
      - pin
      - square
      - stripe_connect
      - trust_commerce
      - unipaas
      type: string
      description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
    CustomFieldOwner:
      title: CustomFieldOwner
      enum:
      - Customer
      - Subscription
      type: string
    CustomFieldValueChange:
      title: CustomFieldValueChange
      required:
      - event_type
      - metafield_name
      - metafield_id
      - old_value
      - new_value
      - resource_type
      - resource_id
      type: object
      properties:
        event_type:
          type: string
        metafield_name:
          type: string
        metafield_id:
          type: integer
          contentEncoding: int32
        old_value:
          type:
          - string
          - 'null'
        new_value:
          type:
          - string
          - 'null'
        resource_type:
          type: string
        resource_id:
          type: integer
          contentEncoding: int32
    Customer:
      title: Customer
      type: object
      properties:
        chargify_id:
          type: integer
          contentEncoding: int32
        first_name:
          type: string
        last_name:
          type: string
        organization:
          type:
          - string
          - 'null'
        email:
          type: string
        vat_number:
          type:
          - string
          - 'null'
        reference:
          type:
          - string
          - 'null'
    CustomerAttributes:
      title: CustomerAttributes
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the customer. Required when creating a customer via attributes.
        last_name:
          type: string
          description: The last name of the customer. Required when creating a customer via attributes.
        email:
          type: string
          description: The email address of the customer. Required when creating a customer via attributes.
        cc_emails:
          type: string
          description: A list of emails that should be cc’d on all customer communications. Optional.
        organization:
          type: string
          description: The organization/company of the customer. Optional.
        reference:
          type: string
          description: A customer “reference”, or unique identifier from your app, stored in Chargify. Can be used so that you may reference your customer’s within Chargify using the same unique value you use in your application. Optional.
        address:
          type: string
          description: (Optional) The customer’s shipping street address (i.e. “123 Main St.”).
        address_2:
          type:
          - string
          - 'null'
          description: (Optional) Second line of the customer’s shipping address i.e. “Apt. 100”
        city:
          type: string
          description: (Optional) The customer’s shipping address city (i.e. “Boston”).
        state:
          type: string
          description: (Optional) The customer’s shipping address state (i.e. “MA”). This must conform to the [ISO_3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.
        zip:
          type: string
          description: (Optional) The customer’s shipping address zip code (i.e. “12345”).
        country:
          type: string
          description: (Optional) The customer shipping address country, required in [ISO_3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”).
        phone:
          type: string
          description: (Optional) The phone number of the customer.
        verified:
          type: boolean
        tax_exempt:
          type: boolean
          description: (Optional) The tax_exempt status of the customer. Acceptable values are true or 1 for true and false or 0 for false.
        vat_number:
          type: string
          description: (Optional) Supplying the VAT number allows EU customer’s to opt-out of the Value Added Tax assuming the merchant address and customer billing address are not within the same EU country. It’s important to omit the country code from the VAT number upon entry. Otherwise, taxes will be assessed upon the purchase.
        metafields:
          type: object
          additionalProperties:
            type: string
          description: (Optional) A set of key/value pairs representing custom fields and their values. Metafields will be created “on-the-fly” in your site for a given key, if they have not been created yet.
          examples:
          - custom_field_name_1: custom_field_value_1
            custom_field_name_2: custom_field_value_2
        parent_id:
          type:
          - integer
          - 'null'
          description: The parent ID in Chargify if applicable. Parent is another Customer object.
          contentEncoding: int32
    CustomerChange:
      title: CustomerChange
      type: object
      properties:
        payer:
          oneOf:
          - $ref: '#/components/schemas/CustomerPayerChange'
          - {}
        shipping_address:
          oneOf:
          - $ref: '#/components/schemas/AddressChange'
          - {}
        billing_address:
          oneOf:
          - $ref: '#/components/schemas/AddressChange'
          - {}
        custom_fields:
          oneOf:
          - $ref: '#/components/schemas/CustomerCustomFieldsChange'
          - {}
    CustomerChangesPreviewResponse:
      title: CustomerChangesPreviewResponse
      required:
      - changes
      type: object
      properties:
        changes:
          allOf:
          - $ref: '#/components/schemas/CustomerChange'
          - {}
    CustomerCustomFieldsChange:
      title: CustomerCustomFieldsChange
      required:
      - before
      - after
      type: object
      properties:
        before:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
        after:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
    CustomerError:
      title: CustomerError
      type: object
      properties:
        customer:
          type: string
    CustomerErrorResponse1:
      title: CustomerErrorResponse1
      type: object
      properties:
        errors:
          oneOf:
          - $ref: '#/components/schemas/CustomerError'
          - type: array
            items:
              type: string
    CustomerPayerChange:
      title: CustomerPayerChange
      required:
      - before
      - after
      type: object
      properties:
        before:
          allOf:
          - $ref: '#/components/schemas/InvoicePayerChange'
          - {}
        after:
          allOf:
          - $ref: '#/components/schemas/InvoicePayerChange'
          - {}
    CustomerResponse:
      title: CustomerResponse
      required:
      - customer
      type: object
      properties:
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer1'
          - {}
    Customer1:
      title: Customer1
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the customer
        last_name:
          type: string
          description: The last name of the customer
        email:
          type: string
          description: The email address of the customer
        cc_emails:
          type:
          - string
          - 'null'
          description: A comma-separated list of emails that should be cc’d on all customer communications (i.e. “joe@example.com, sue@example.com”)
        organization:
          type:
          - string
          - 'null'
          description: The organization of the customer
        reference:
          type:
          - string
          - 'null'
          description: The unique identifier used within your own application for this customer
        id:
          type: integer
          description: The customer ID in Chargify
          contentEncoding: int32
        created_at:
          type: string
          description: The timestamp in which the customer object was created in Chargify
        updated_at:
          type: string
          description: The timestamp in which the customer object was last edited
        address:
          type:
          - string
          - 'null'
          description: The customer’s shipping street address (i.e. “123 Main St.”)
        address_2:
          type:
          - string
          - 'null'
          description: Second line of the customer’s shipping address i.e. “Apt. 100”
        city:
          type:
          - string
          - 'null'
          description: The customer’s shipping address city (i.e. “Boston”)
        state:
          type:
          - string
          - 'null'
          description: The customer’s shipping address state (i.e. “MA”)
        state_name:
          type:
          - string
          - 'null'
          description: The customer's full name of state
        zip:
          type:
          - string
          - 'null'
          description: The customer’s shipping address zip code (i.e. “12345”)
        country:
          type:
          - string
          - 'null'
          description: The customer shipping address country
        country_name:
          type:
          - string
          - 'null'
          description: The customer's full name of country
        phone:
          type:
          - string
          - 'null'
          description: The phone number of the customer
        verified:
          type:
          - boolean
          - 'null'
          description: Is the customer verified to use ACH as a payment method. Available only on Authorize.Net gateway
        portal_customer_created_at:
          type:
          - string
          - 'null'
          description: The timestamp of when the Billing Portal entry was created at for the customer
        portal_invite_last_sent_at:
          type:
          - string
          - 'null'
          description: The timestamp of when the Billing Portal invite was last sent at
        portal_invite_last_accepted_at:
          type:
          - string
          - 'null'
          description: The timestamp of when the Billing Portal invite was last accepted
        tax_exempt:
          type: boolean
          description: The tax exempt status for the customer. Acceptable values are true or 1 for true and false or 0 for false.
        vat_number:
          type:
          - string
          - 'null'
          description: The VAT business identification number for the customer. This number is used to determine VAT tax opt out rules. It is not validated when added or updated on a customer record. Instead, it is validated via VIES before calculating taxes. Only valid business identification numbers will allow for VAT opt out.
        parent_id:
          type:
          - integer
          - 'null'
          description: The parent ID in Chargify if applicable. Parent is another Customer object.
          contentEncoding: int32
        locale:
          type:
          - string
          - 'null'
          description: The locale for the customer to identify language-region
        default_subscription_group_uid:
          type:
          - string
          - 'null'
    DeductServiceCredit:
      title: DeductServiceCredit
      required:
      - amount
      - memo
      type: object
      properties:
        amount:
          oneOf:
          - type: string
          - type: number
        memo:
          type: string
    DeductServiceCreditRequest:
      title: DeductServiceCreditRequest
      required:
      - deduction
      type: object
      properties:
        deduction:
          allOf:
          - $ref: '#/components/schemas/DeductServiceCredit'
          - {}
    DelayedCancellationResponse:
      title: DelayedCancellationResponse
      type: object
      properties:
        message:
          type: string
    DeleteSubscriptionGroupResponse:
      title: DeleteSubscriptionGroupResponse
      type: object
      properties:
        uid:
          type: string
        deleted:
          type: boolean
    direction:
      title: direction
      enum:
      - asc
      - desc
      type: string
    DiscountType:
      title: DiscountType
      enum:
      - amount
      - percent
      type: string
    DunnerData:
      title: DunnerData
      required:
      - state
      - subscription_id
      - revenue_at_risk_in_cents
      - created_at
      - attempts
      - last_attempted_at
      type: object
      properties:
        state:
          type: string
        subscription_id:
          type: integer
          contentEncoding: int32
        revenue_at_risk_in_cents:
          type: integer
          contentEncoding: int64
        created_at:
          type: string
        attempts:
          type: integer
          contentEncoding: int32
        last_attempted_at:
          type: string
    DunningStepData:
      title: DunningStepData
      required:
      - day_threshold
      - action
      - send_email
      - send_bcc_email
      - send_sms
      type: object
      properties:
        day_threshold:
          type: integer
          contentEncoding: int32
        action:
          type: string
        email_body:
          type:
          - string
          - 'null'
        email_subject:
          type:
          - string
          - 'null'
        send_email:
          type: boolean
        send_bcc_email:
          type: boolean
        send_sms:
          type: boolean
        sms_body:
          type:
          - string
          - 'null'
    DunningStepReached:
      title: DunningStepReached
      required:
      - dunner
      - current_step
      - next_step
      type: object
      properties:
        dunner:
          allOf:
          - $ref: '#/components/schemas/DunnerData'
          - {}
        current_step:
          allOf:
          - $ref: '#/components/schemas/DunningStepData'
          - {}
        next_step:
          allOf:
          - $ref: '#/components/schemas/DunningStepData'
          - {}
    EBBComponent:
      title: EBBComponent
      required:
      - name
      - unit_name
      - pricing_scheme
      - event_based_billing_metric_id
      type: object
      properties:
        name:
          type: string
          description: A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".
        unit_name:
          type: string
          description: The name of the unit of measurement for the component. It should be singular since it will be automatically pluralized when necessary. i.e. “message”, which may then be shown as “5 messages” on a subscription’s component line-item
        description:
          type: string
          description: A description for the component that will be displayed to the user on the hosted signup page.
        handle:
          pattern: ^[a-z0-9][a-z0-9\-_:.]*$
          type: string
          description: A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters '.', ':', '-', or '_'.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: (Not required for ‘per_unit’ pricing schemes) One or more price brackets. See [Price Bracket Rules](https://help.chargify.com/products/product-components.html#general-price-bracket-rules) for an overview of how price brackets work for different pricing schemes.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePointItem'
          description: ''
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The amount the customer will be charged per unit when the pricing scheme is “per_unit”. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        tax_code:
          type: string
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        price_in_cents:
          type: string
          description: deprecated May 2011 - use unit_price instead
        event_based_billing_metric_id:
          type: integer
          description: The ID of an event based billing metric that will be attached to this component.
          contentEncoding: int32
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component's default price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component's default price point, either month or day. This property is only available for sites with Multifrequency enabled.
    EBBEvent:
      title: EBBEvent
      type: object
      properties:
        chargify:
          allOf:
          - $ref: '#/components/schemas/ChargifyEBB'
          - {}
      examples:
      - chargify:
          subscription_id: 1
          timestamp: 2020-02-27T17:45:50-05:00
        messages: 150
        country: US
        customer:
          name: John
          lastName: Doe
          address:
            street: Maple Street
            zip: 4888
            state: MA
    EnableWebhooksRequest:
      title: EnableWebhooksRequest
      required:
      - webhooks_enabled
      type: object
      properties:
        webhooks_enabled:
          type: boolean
    EnableWebhooksResponse:
      title: EnableWebhooksResponse
      type: object
      properties:
        webhooks_enabled:
          type: boolean
    Endpoint:
      title: Endpoint
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        url:
          type: string
        site_id:
          type: integer
          contentEncoding: int32
        status:
          type: string
        webhook_subscriptions:
          type: array
          items:
            type: string
          description: ''
    EndpointResponse:
      title: EndpointResponse
      type: object
      properties:
        endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          - {}
    ErrorArrayMapResponse1:
      title: ErrorArrayMapResponse1
      type: object
      properties:
        errors:
          type: object
          additionalProperties: {}
    ErrorListResponse1:
      title: ErrorListResponse1
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
          description: ''
      description: Error which contains list of messages.
    ErrorStringMapResponse1:
      title: ErrorStringMapResponse1
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
    Errors:
      title: Errors
      type: object
      properties:
        per_page:
          type: array
          items:
            type: string
          description: ''
        price_point:
          type: array
          items:
            type: string
          description: ''
    Event:
      title: Event
      required:
      - id
      - key
      - message
      - subscription_id
      - customer_id
      - created_at
      - event_specific_data
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        key:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
        subscription_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        created_at:
          minLength: 1
          type: string
        event_specific_data:
          oneOf:
          - $ref: '#/components/schemas/SubscriptionProductChange'
          - $ref: '#/components/schemas/SubscriptionStateChange'
          - $ref: '#/components/schemas/PaymentRelatedEvents'
          - $ref: '#/components/schemas/RefundSuccess'
          - $ref: '#/components/schemas/ComponentAllocationChange'
          - $ref: '#/components/schemas/MeteredUsage'
          - $ref: '#/components/schemas/PrepaidUsage'
          - $ref: '#/components/schemas/DunningStepReached'
          - $ref: '#/components/schemas/InvoiceIssued'
          - $ref: '#/components/schemas/PendingCancellationChange'
          - $ref: '#/components/schemas/PrepaidSubscriptionBalanceChanged'
          - $ref: '#/components/schemas/ProformaInvoiceIssued'
          - $ref: '#/components/schemas/SubscriptionGroupSignupSuccess'
          - $ref: '#/components/schemas/SubscriptionGroupSignupFailure'
          - $ref: '#/components/schemas/CreditAccountBalanceChanged'
          - $ref: '#/components/schemas/PrepaymentAccountBalanceChanged'
          - $ref: '#/components/schemas/PaymentCollectionMethodChanged'
          - $ref: '#/components/schemas/ItemPricePointChanged'
          - $ref: '#/components/schemas/CustomFieldValueChange'
          - {}
    EventBasedBillingListSegmentsErrors1:
      title: EventBasedBillingListSegmentsErrors1
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/Errors'
          - {}
    EventBasedBillingSegmentError:
      title: EventBasedBillingSegmentError
      required:
      - segments
      type: object
      properties:
        segments:
          type: object
          additionalProperties: {}
          description: The key of the object would be a number (an index in the request array) where the error occurred. In the value object, the key represents the field and the value is an array with error messages. In most cases, this object would contain just one key.
    EventBasedBillingSegmentErrors1:
      title: EventBasedBillingSegmentErrors1
      type: object
      properties:
        errors:
          type: object
          additionalProperties: {}
          description: The key of the object would be a number (an index in the request array) where the error occurred. In the value object, the key represents the field and the value is an array with error messages. In most cases, this object would contain just one key.
    EventBasedBillingSegment1:
      title: EventBasedBillingSegment1
      required:
      - errors
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/EventBasedBillingSegmentError'
          - {}
    EventResponse:
      title: EventResponse
      required:
      - event
      type: object
      properties:
        event:
          allOf:
          - $ref: '#/components/schemas/Event'
          - {}
    EventType:
      title: EventType
      enum:
      - account_transaction_changed
      - billing_date_change
      - component_allocation_change
      - customer_update
      - customer_create
      - dunning_step_reached
      - expiration_date_change
      - expiring_card
      - metered_usage
      - payment_success
      - payment_success_recreated
      - payment_failure
      - payment_failure_recreated
      - refund_failure
      - refund_success
      - renewal_success
      - renewal_success_recreated
      - renewal_failure
      - signup_success
      - signup_failure
      - statement_closed
      - statement_settled
      - subscription_bank_account_update
      - subscription_deletion
      - subscription_paypal_account_update
      - subscription_product_change
      - subscription_state_change
      - trial_end_notice
      - upgrade_downgrade_success
      - upgrade_downgrade_failure
      - upcoming_renewal_notice
      - custom_field_value_change
      - subscription_prepayment_account_balance_changed
      - subscription_service_credit_account_balance_changed
      type: string
    ExtendedIntervalUnit:
      title: ExtendedIntervalUnit
      enum:
      - day
      - month
      - never
      type: string
    FailedPaymentAction:
      title: FailedPaymentAction
      enum:
      - leave_open_invoice
      - rollback_to_pending
      - initiate_dunning
      type: string
      description: >-
        Action taken when payment for an invoice fails:

        - `leave_open_invoice` - prepayments and credits applied to invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history. This is the default option.

        - `rollback_to_pending` - prepayments and credits not applied; invoice remains in "pending" status; no email sent to the customer; payment failure recorded in the invoice history.

        - `initiate_dunning` - prepayments and credits applied to the invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history; subscription will  most likely go into "past_due" or "canceled" state (depending upon net terms and dunning settings).
    FirstChargeType:
      title: FirstChargeType
      enum:
      - prorated
      - immediate
      - delayed
      type: string
    FullSubscriptionGroupResponse:
      title: FullSubscriptionGroupResponse
      type: object
      properties:
        uid:
          type: string
        scheme:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          contentEncoding: int32
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        primary_subscription_id:
          type: integer
          contentEncoding: int32
        next_assessment_at:
          type: string
        state:
          type: string
        cancel_at_end_of_period:
          type: boolean
        current_billing_amount_in_cents:
          type: integer
          contentEncoding: int64
        customer:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupCustomer'
          - {}
        account_balances:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupBalances'
          - {}
    GetOneTimeTokenPaymentProfile:
      title: GetOneTimeTokenPaymentProfile
      required:
      - first_name
      - last_name
      - masked_card_number
      - card_type
      - expiration_month
      - expiration_year
      - current_vault
      - vault_token
      - billing_address
      - billing_city
      - billing_country
      - billing_state
      - billing_zip
      - payment_type
      - disabled
      - site_gateway_setting_id
      type: object
      properties:
        id:
          type:
          - string
          - 'null'
        first_name:
          minLength: 1
          type: string
        last_name:
          minLength: 1
          type: string
        masked_card_number:
          minLength: 1
          type: string
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: The type of card used.
        expiration_month:
          type: number
        expiration_year:
          type: number
        customer_id:
          type:
          - string
          - 'null'
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
        vault_token:
          minLength: 1
          type: string
        billing_address:
          minLength: 1
          type: string
        billing_address_2:
          type: string
        billing_city:
          minLength: 1
          type: string
        billing_country:
          minLength: 1
          type: string
        billing_state:
          minLength: 1
          type: string
        billing_zip:
          minLength: 1
          type: string
        payment_type:
          minLength: 1
          type: string
        disabled:
          type: boolean
        site_gateway_setting_id:
          type: integer
          contentEncoding: int32
        customer_vault_token:
          type:
          - string
          - 'null'
        gateway_handle:
          type:
          - string
          - 'null'
    GetOneTimeTokenRequest:
      title: GetOneTimeTokenRequest
      required:
      - payment_profile
      type: object
      properties:
        payment_profile:
          allOf:
          - $ref: '#/components/schemas/GetOneTimeTokenPaymentProfile'
          - {}
    GroupBilling:
      title: GroupBilling
      type: object
      properties:
        accrue:
          type: boolean
          description: A flag indicating whether or not to accrue charges on the new subscription.
          default: false
        align_date:
          type: boolean
          description: A flag indicating whether or not to align the billing date of the new subscription with the billing date of the primary subscription of the hierarchy's default subscription group. Required to be true if prorate is also true.
          default: false
        prorate:
          type: boolean
          description: A flag indicating whether or not to prorate billing of the new subscription for the current period. A value of true is ignored unless align_date is also true.
          default: false
      description: 'Optional attributes related to billing date and accrual. Note: Only applicable for new subscriptions.'
    GroupSettings:
      title: GroupSettings
      required:
      - target
      type: object
      properties:
        target:
          allOf:
          - $ref: '#/components/schemas/GroupTarget'
          - description: Attributes of the target customer who will be the responsible payer of the created subscription. Required.
        billing:
          allOf:
          - $ref: '#/components/schemas/GroupBilling'
          - description: 'Optional attributes related to billing date and accrual. Note: Only applicable for new subscriptions.'
    GroupTarget:
      title: GroupTarget
      required:
      - type
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GroupTargetType'
          - description: The type of object indicated by the id attribute.
        id:
          type: integer
          description: The id of the target customer or subscription to group the existing subscription with. Ignored and should not be included if type is "self" , "parent", or "eldest"
          contentEncoding: int32
      description: Attributes of the target customer who will be the responsible payer of the created subscription. Required.
    GroupTargetType:
      title: GroupTargetType
      enum:
      - customer
      - subscription
      - self
      - parent
      - eldest
      type: string
      description: The type of object indicated by the id attribute.
    IncludeNotNull:
      title: IncludeNotNull
      const: not_null
      type: string
      description: Passed as a parameter to list methods to return only non null values.
      examples:
      - not_null
    IncludeOption:
      title: IncludeOption
      enum:
      - '0'
      - '1'
      type: string
    IntervalUnit:
      title: IntervalUnit
      enum:
      - day
      - month
      type: string
    Invoice:
      title: Invoice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int64
        uid:
          type: string
          description: Unique identifier for the invoice. It is generated automatically by Chargify and has the prefix "inv_" followed by alphanumeric characters.
        site_id:
          type: integer
          description: ID of the site to which the invoice belongs.
          contentEncoding: int32
        customer_id:
          type: integer
          description: ID of the customer to which the invoice belongs.
          contentEncoding: int32
        subscription_id:
          type: integer
          description: ID of the subscription that generated the invoice.
          contentEncoding: int32
        number:
          type: string
          description: >-
            A unique, identifying string that appears on the invoice and in places the invoice is referenced.


            While the UID is long and not appropriate to show to customers, the number is usually shorter and consumable by the customer and the merchant alike.
        sequence_number:
          type: integer
          description: A monotonically increasing number assigned to invoices as they are created.  This number is unique within a site and can be used to sort and order invoices.
          contentEncoding: int32
        transaction_time:
          type: string
          contentEncoding: date-time
        created_at:
          type: string
          contentEncoding: date-time
        updated_at:
          type: string
          contentEncoding: date-time
        issue_date:
          type: string
          description: >-
            Date the invoice was issued to the customer.  This is the date that the invoice was made available for payment.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        due_date:
          type: string
          description: >-
            Date the invoice is due.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        paid_date:
          type:
          - string
          - 'null'
          description: >-
            Date the invoice became fully paid.


            If partial payments are applied to the invoice, this date will not be present until payment has been made in full.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The current status of the invoice. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        role:
          allOf:
          - $ref: '#/components/schemas/InvoiceRole'
          - {}
        parent_invoice_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
        payment_instructions:
          type: string
          description: A message that is printed on the invoice when it is marked for remittance collection. It is intended to describe to the customer how they may make payment, and is configured by the merchant.
        currency:
          type: string
          description: The ISO 4217 currency code (3 character string) representing the currency of invoice transaction.
        consolidation_level:
          allOf:
          - $ref: '#/components/schemas/InvoiceConsolidationLevel'
          - description: >-
              Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


              * "none": A normal invoice with no consolidation.

              * "child": An invoice segment which has been combined into a consolidated invoice.

              * "parent": A consolidated invoice, whose contents are composed of invoice segments.


              "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


              See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
        parent_invoice_uid:
          type:
          - string
          - 'null'
          description: For invoices with `consolidation_level` of `child`, this specifies the UID of the parent (consolidated) invoice.
        subscription_group_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        parent_invoice_number:
          type:
          - integer
          - 'null'
          description: For invoices with `consolidation_level` of `child`, this specifies the number of the parent (consolidated) invoice.
          contentEncoding: int32
        group_primary_subscription_id:
          type:
          - integer
          - 'null'
          description: For invoices with `consolidation_level` of `parent`, this specifies the ID of the subscription which was the primary subscription of the subscription group that generated the invoice.
          contentEncoding: int32
        product_name:
          type: string
          description: The name of the product subscribed when the invoice was generated.
        product_family_name:
          type: string
          description: The name of the product family subscribed when the invoice was generated.
        seller:
          allOf:
          - $ref: '#/components/schemas/InvoiceSeller'
          - description: Information about the seller (merchant) listed on the masthead of the invoice.
        customer:
          allOf:
          - $ref: '#/components/schemas/InvoiceCustomer'
          - description: Information about the customer who is owner or recipient the invoiced subscription.
        payer:
          allOf:
          - $ref: '#/components/schemas/InvoicePayer'
          - {}
        recipient_emails:
          maxItems: 5
          type: array
          items:
            type: string
          description: ''
        net_terms:
          type: integer
          contentEncoding: int32
        memo:
          type: string
          description: The memo printed on invoices of any collection type.  This message is in control of the merchant.
        billing_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - description: The invoice billing address.
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - description: The invoice shipping address.
        subtotal_amount:
          type: string
          description: Subtotal of the invoice, which is the sum of all line items before discounts or taxes.
        discount_amount:
          type: string
          description: Total discount applied to the invoice.
        tax_amount:
          type: string
          description: Total tax on the invoice.
        total_amount:
          type: string
          description: The invoice total, which is `subtotal_amount - discount_amount + tax_amount`.'
        credit_amount:
          type: string
          description: >-
            The amount of credit (from credit notes) applied to this invoice.


            Credits offset the amount due from the customer.
        refund_amount:
          type: string
        paid_amount:
          type: string
          description: The amount paid on the invoice by the customer.
        due_amount:
          type: string
          description: Amount due on the invoice, which is `total_amount - credit_amount - paid_amount`.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          description: Line items on the invoice.
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDiscount'
          description: ''
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTax'
          description: ''
        credits:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCredit'
          description: ''
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceRefund'
          description: ''
        payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePayment'
          description: ''
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
        display_settings:
          allOf:
          - $ref: '#/components/schemas/InvoiceDisplaySettings'
          - {}
        public_url:
          type: string
          description: The public URL of the invoice
        previous_balance_data:
          allOf:
          - $ref: '#/components/schemas/InvoicePreviousBalance'
          - {}
    InvoiceAddress:
      title: InvoiceAddress
      type: object
      properties:
        street:
          type:
          - string
          - 'null'
        line2:
          type:
          - string
          - 'null'
        city:
          type:
          - string
          - 'null'
        state:
          type:
          - string
          - 'null'
        zip:
          type:
          - string
          - 'null'
        country:
          type:
          - string
          - 'null'
    InvoiceBalanceItem:
      title: InvoiceBalanceItem
      type: object
      properties:
        uid:
          type: string
        number:
          type: string
        outstanding_amount:
          type: string
    InvoiceConsolidationLevel:
      title: InvoiceConsolidationLevel
      enum:
      - none
      - child
      - parent
      type: string
      description: >-
        Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


        * "none": A normal invoice with no consolidation.

        * "child": An invoice segment which has been combined into a consolidated invoice.

        * "parent": A consolidated invoice, whose contents are composed of invoice segments.


        "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


        See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
    InvoiceCredit:
      title: InvoiceCredit
      type: object
      properties:
        uid:
          type: string
        credit_note_number:
          type: string
        credit_note_uid:
          type: string
        transaction_time:
          type: string
          contentEncoding: date-time
        memo:
          type: string
        original_amount:
          type: string
        applied_amount:
          type: string
    InvoiceCustomField:
      title: InvoiceCustomField
      type: object
      properties:
        owner_id:
          type: integer
          contentEncoding: int32
        owner_type:
          allOf:
          - $ref: '#/components/schemas/CustomFieldOwner'
          - {}
        name:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        metadatum_id:
          type: integer
          contentEncoding: int32
    InvoiceCustomer:
      title: InvoiceCustomer
      type: object
      properties:
        chargify_id:
          type: integer
          contentEncoding: int32
        first_name:
          type: string
        last_name:
          type: string
        organization:
          type:
          - string
          - 'null'
        email:
          type: string
        vat_number:
          type:
          - string
          - 'null'
        reference:
          type:
          - string
          - 'null'
      description: Information about the customer who is owner or recipient the invoiced subscription.
    InvoiceDateField:
      title: InvoiceDateField
      enum:
      - created_at
      - due_date
      - issue_date
      - updated_at
      - paid_date
      type: string
      examples:
      - issue_date
    InvoiceDiscount:
      title: InvoiceDiscount
      type: object
      properties:
        uid:
          type: string
        title:
          type: string
        description:
          type:
          - string
          - 'null'
        code:
          type: string
        source_type:
          type: string
        source_id:
          type: integer
          contentEncoding: int32
        discount_type:
          type: string
        percentage:
          type: string
        eligible_amount:
          type: string
        discount_amount:
          type: string
        transaction_id:
          type: integer
          contentEncoding: int32
        line_item_breakouts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDiscountBreakout'
          description: ''
    InvoiceDiscountBreakout:
      title: InvoiceDiscountBreakout
      type: object
      properties:
        uid:
          type: string
        eligible_amount:
          type: string
        discount_amount:
          type: string
    InvoiceDisplaySettings:
      title: InvoiceDisplaySettings
      type: object
      properties:
        hide_zero_subtotal_lines:
          type: boolean
        include_discounts_on_lines:
          type: boolean
    InvoiceEventPaymentMethod:
      title: InvoiceEventPaymentMethod
      enum:
      - apple_pay
      - bank_account
      - credit_card
      - external
      - paypal_account
      type: string
    InvoiceEventPayment1:
      title: InvoiceEventPayment1
      required:
      - masked_account_number
      - masked_routing_number
      - card_brand
      - masked_card_number
      - details
      - kind
      - memo
      - email
      - type
      type: object
      properties:
        type:
          type: string
        masked_account_number:
          type: string
        masked_routing_number:
          type: string
        card_brand:
          type: string
        card_expiration:
          type: string
        last_four:
          type:
          - string
          - 'null'
        masked_card_number:
          type: string
        details:
          type:
          - string
          - 'null'
        kind:
          type: string
        memo:
          type:
          - string
          - 'null'
        email:
          type: string
      description: A nested data structure detailing the method of payment
      discriminator:
        propertyName: type
    InvoiceEventType:
      title: InvoiceEventType
      enum:
      - apply_credit_note
      - apply_debit_note
      - apply_payment
      - backport_invoice
      - change_chargeback_status
      - change_invoice_collection_method
      - change_invoice_status
      - create_credit_note
      - failed_payment
      - issue_invoice
      - refund_invoice
      - remove_payment
      - void_invoice
      - void_remainder
      type: string
      description: Invoice Event Type
    InvoiceIssued:
      title: InvoiceIssued
      required:
      - uid
      - number
      - role
      - due_date
      - issue_date
      - paid_date
      - due_amount
      - paid_amount
      - tax_amount
      - refund_amount
      - total_amount
      - status_amount
      - product_name
      - consolidation_level
      - line_items
      type: object
      properties:
        uid:
          type: string
        number:
          type: string
        role:
          type: string
        due_date:
          type: string
        issue_date:
          type: string
        paid_date:
          type: string
        due_amount:
          type: string
        paid_amount:
          type: string
        tax_amount:
          type: string
        refund_amount:
          type: string
        total_amount:
          type: string
        status_amount:
          type: string
        product_name:
          type: string
        consolidation_level:
          type: string
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemEventData'
          description: ''
    InvoiceLineItem:
      title: InvoiceLineItem
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the line item.  Useful when cross-referencing the line against individual discounts in the `discounts` or `taxes` lists.
        title:
          type: string
          description: A short descriptor for the charge or item represented by this line.
        description:
          type: string
          description: >-
            Detailed description for the charge or item represented by this line.  May include proration details in plain text.


            Note: this string may contain line breaks that are hints for the best display format on the invoice.
        quantity:
          type: string
          description: >-
            The quantity or count of units billed by the line item.


            This is a decimal number represented as a string. (See "About Decimal Numbers".)
        unit_price:
          type: string
          description: >-
            The price per unit for the line item.


            When tiered pricing was used (i.e. not every unit was actually priced at the same price) this will be the blended average cost per unit and the `tiered_unit_price` field will be set to `true`.
        subtotal_amount:
          type: string
          description: The line subtotal, generally calculated as `quantity * unit_price`. This is the canonical amount of record for the line - when rounding differences are in play, `subtotal_amount` takes precedence over the value derived from `quantity * unit_price` (which may not have the proper precision to exactly equal this amount).
        discount_amount:
          type: string
          description: >-
            The approximate discount applied to just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total discount among many lines. Several lines may have been summed prior to applying the discount to arrive at `discount_amount` for the invoice - backing that out to the discount on a single line may introduce rounding or precision errors.
        tax_amount:
          type: string
          description: >-
            The approximate tax applied to just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total tax among many lines. Several lines may have been summed prior to applying the tax rate to arrive at `tax_amount` for the invoice - backing that out to the tax on a single line may introduce rounding or precision errors.
        total_amount:
          type: string
          description: >-
            The non-canonical total amount for the line.


            `subtotal_amount` is the canonical amount for a line. The invoice `total_amount` is derived from the sum of the line `subtotal_amount`s and discounts or taxes applied thereafter.  Therefore, due to rounding or precision errors, the sum of line `total_amount`s may not equal the invoice `total_amount`.
        tiered_unit_price:
          type: boolean
          description: When `true`, indicates that the actual pricing scheme for the line was tiered, so the `unit_price` shown is the blended average for all units.
        period_range_start:
          type: string
          description: >-
            Start date for the period covered by this line. The format is `"YYYY-MM-DD"`.


            * For periodic charges paid in advance, this date will match the billing date, and the end date will be in the future.

            * For periodic charges paid in arrears (e.g. metered charges), this date will be the date of the previous billing, and the end date will be the current billing date.

            * For non-periodic charges, this date and the end date will match.
          contentEncoding: date
        period_range_end:
          type: string
          description: >-
            End date for the period covered by this line. The format is `"YYYY-MM-DD"`.


            * For periodic charges paid in advance, this date will match the next (future) billing date.

            * For periodic charges paid in arrears (e.g. metered charges), this date will be the date of the current billing date.

            * For non-periodic charges, this date and the start date will match.
          contentEncoding: date
        transaction_id:
          type: integer
          contentEncoding: int32
        product_id:
          type:
          - integer
          - 'null'
          description: >-
            The ID of the product subscribed when the charge was made.


            This may be set even for component charges, so true product-only (non-component) charges will also have a nil `component_id`.
          contentEncoding: int32
        product_version:
          type:
          - integer
          - 'null'
          description: The version of the product subscribed when the charge was made.
          contentEncoding: int32
        component_id:
          type:
          - integer
          - 'null'
          description: The ID of the component being billed. Will be `nil` for non-component charges.
          contentEncoding: int32
        price_point_id:
          type:
          - integer
          - 'null'
          description: The price point ID of the component being billed. Will be `nil` for non-component charges.
          contentEncoding: int32
        hide:
          type: boolean
        component_cost_data:
          oneOf:
          - $ref: '#/components/schemas/InvoiceLineItemComponentCostData'
          - {}
        product_price_point_id:
          type:
          - integer
          - 'null'
          description: The price point ID of the line item's product
          contentEncoding: int32
        custom_item:
          type: boolean
    InvoiceLineItemComponentCostData:
      title: InvoiceLineItemComponentCostData
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCostData'
          description: ''
    InvoiceLineItemEventData:
      title: InvoiceLineItemEventData
      type: object
      properties:
        uid:
          type: string
        title:
          type: string
        description:
          type: string
        quantity:
          type: integer
          contentEncoding: int32
        quantity_delta:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        unit_price:
          type: string
        period_range_start:
          type: string
        period_range_end:
          type: string
        amount:
          type: string
        line_references:
          type: string
        pricing_details_index:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        pricing_details:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemPricingDetail'
          description: ''
        tax_code:
          type:
          - string
          - 'null'
        tax_amount:
          type: string
        product_id:
          type: integer
          contentEncoding: int32
        product_price_point_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        price_point_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        component_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        billing_schedule_item_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        custom_item:
          type:
          - boolean
          - 'null'
    InvoiceLineItemPricingDetail:
      title: InvoiceLineItemPricingDetail
      type: object
      properties:
        label:
          type: string
        amount:
          type: string
    InvoiceLineItem1:
      title: InvoiceLineItem1
      type: object
      properties:
        uid:
          type: string
          description: Unique identifier for the line item.  Useful when cross-referencing the line against individual discounts in the `discounts` or `taxes` lists.
        title:
          type: string
          description: A short descriptor for the charge or item represented by this line.
        description:
          type: string
          description: >-
            Detailed description for the charge or item represented by this line.  May include proration details in plain text.


            Note: this string may contain line breaks that are hints for the best display format on the invoice.
        quantity:
          type: string
          description: >-
            The quantity or count of units billed by the line item.


            This is a decimal number represented as a string. (See "About Decimal Numbers".)
        unit_price:
          type: string
          description: >-
            The price per unit for the line item.


            When tiered pricing was used (i.e. not every unit was actually priced at the same price) this will be the blended average cost per unit and the `tiered_unit_price` field will be set to `true`.
        subtotal_amount:
          type: string
          description: The line subtotal, generally calculated as `quantity * unit_price`. This is the canonical amount of record for the line - when rounding differences are in play, `subtotal_amount` takes precedence over the value derived from `quantity * unit_price` (which may not have the proper precision to exactly equal this amount).
        discount_amount:
          type: string
          description: >-
            The approximate discount applied to just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total discount among many lines. Several lines may have been summed prior to applying the discount to arrive at `discount_amount` for the invoice - backing that out to the discount on a single line may introduce rounding or precision errors.
        tax_amount:
          type: string
          description: >-
            The approximate tax applied to just this line.


            The value is approximated in cases where rounding errors make it difficult to apportion exactly a total tax among many lines. Several lines may have been summed prior to applying the tax rate to arrive at `tax_amount` for the invoice - backing that out to the tax on a single line may introduce rounding or precision errors.
        total_amount:
          type: string
          description: >-
            The non-canonical total amount for the line.


            `subtotal_amount` is the canonical amount for a line. The invoice `total_amount` is derived from the sum of the line `subtotal_amount`s and discounts or taxes applied thereafter.  Therefore, due to rounding or precision errors, the sum of line `total_amount`s may not equal the invoice `total_amount`.
        tiered_unit_price:
          type: boolean
          description: When `true`, indicates that the actual pricing scheme for the line was tiered, so the `unit_price` shown is the blended average for all units.
        period_range_start:
          type: string
          description: >-
            Start date for the period covered by this line. The format is `"YYYY-MM-DD"`.


            * For periodic charges paid in advance, this date will match the billing date, and the end date will be in the future.

            * For periodic charges paid in arrears (e.g. metered charges), this date will be the date of the previous billing, and the end date will be the current billing date.

            * For non-periodic charges, this date and the end date will match.
          contentEncoding: date
        period_range_end:
          type: string
          description: >-
            End date for the period covered by this line. The format is `"YYYY-MM-DD"`.


            * For periodic charges paid in advance, this date will match the next (future) billing date.

            * For periodic charges paid in arrears (e.g. metered charges), this date will be the date of the current billing date.

            * For non-periodic charges, this date and the start date will match.
          contentEncoding: date
        transaction_id:
          type: integer
          contentEncoding: int32
        product_id:
          type:
          - integer
          - 'null'
          description: >-
            The ID of the product subscribed when the charge was made.


            This may be set even for component charges, so true product-only (non-component) charges will also have a nil `component_id`.
          contentEncoding: int32
        product_version:
          type:
          - integer
          - 'null'
          description: The version of the product subscribed when the charge was made.
          contentEncoding: int32
        component_id:
          type:
          - integer
          - 'null'
          description: The ID of the component being billed. Will be `nil` for non-component charges.
          contentEncoding: int32
        price_point_id:
          type:
          - integer
          - 'null'
          description: The price point ID of the component being billed. Will be `nil` for non-component charges.
          contentEncoding: int32
        hide:
          type: boolean
        component_cost_data:
          oneOf:
          - $ref: '#/components/schemas/InvoiceLineItemComponentCostData'
        product_price_point_id:
          type:
          - integer
          - 'null'
          description: The price point ID of the line item's product
          contentEncoding: int32
        custom_item:
          type: boolean
    InvoicePayer:
      title: InvoicePayer
      type: object
      properties:
        chargify_id:
          type: integer
          contentEncoding: int32
        first_name:
          type: string
        last_name:
          type: string
        organization:
          type:
          - string
          - 'null'
        email:
          type: string
        vat_number:
          type:
          - string
          - 'null'
    InvoicePayerChange:
      title: InvoicePayerChange
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        organization:
          type: string
        email:
          type: string
    InvoicePayment:
      title: InvoicePayment
      type: object
      properties:
        transaction_time:
          type: string
          contentEncoding: date-time
        memo:
          type: string
        original_amount:
          type: string
        applied_amount:
          type: string
        payment_method:
          allOf:
          - $ref: '#/components/schemas/InvoicePaymentMethod'
          - {}
        transaction_id:
          type: integer
          contentEncoding: int32
        prepayment:
          type: boolean
        gateway_handle:
          type:
          - string
          - 'null'
        gateway_used:
          type: string
        gateway_transaction_id:
          type:
          - string
          - 'null'
          description: The transaction ID for the payment as returned from the payment gateway
    InvoicePaymentApplication:
      title: InvoicePaymentApplication
      type: object
      properties:
        invoice_uid:
          type: string
          description: Unique identifier for the paid invoice. It has the prefix "inv_" followed by alphanumeric characters.
        application_uid:
          type: string
          description: Unique identifier for the payment. It has the prefix "pmt_" followed by alphanumeric characters.
        applied_amount:
          type: string
          description: Dollar amount of the paid invoice.
    InvoicePaymentMethod:
      title: InvoicePaymentMethod
      type: object
      properties:
        details:
          type: string
        kind:
          type: string
        memo:
          type: string
        type:
          type: string
        card_brand:
          type: string
        card_expiration:
          type: string
        last_four:
          type:
          - string
          - 'null'
        masked_card_number:
          type: string
    InvoicePaymentMethodType:
      title: InvoicePaymentMethodType
      enum:
      - credit_card
      - check
      - cash
      - money_order
      - ach
      - other
      type: string
      description: The type of payment method used.
    InvoicePaymentType:
      title: InvoicePaymentType
      enum:
      - external
      - prepayment
      - service_credit
      - payment
      type: string
      description: The type of payment to be applied to an Invoice.
    InvoicePrePayment:
      title: InvoicePrePayment
      type: object
      properties:
        subscription_id:
          type: string
          description: The subscription id for the prepayment account
        amount_in_cents:
          type: string
          description: The amount in cents of the prepayment that was created as a result of this payment.
        ending_balance_in_cents:
          type: string
          description: The total balance of the prepayment account for this subscription including any prior prepayments
    InvoicePreviousBalance:
      title: InvoicePreviousBalance
      type: object
      properties:
        captured_at:
          type: string
          contentEncoding: date-time
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBalanceItem'
          description: ''
    InvoiceRefund:
      title: InvoiceRefund
      type: object
      properties:
        transaction_id:
          type: integer
          contentEncoding: int32
        payment_id:
          type: integer
          contentEncoding: int32
        memo:
          type: string
        original_amount:
          type: string
        applied_amount:
          type: string
        gateway_transaction_id:
          type:
          - string
          - 'null'
          description: The transaction ID for the refund as returned from the payment gateway
    InvoiceResponse:
      title: InvoiceResponse
      required:
      - invoice
      type: object
      properties:
        invoice:
          allOf:
          - $ref: '#/components/schemas/Invoice'
          - {}
    InvoiceRole:
      title: InvoiceRole
      enum:
      - unset
      - signup
      - renewal
      - usage
      - reactivation
      - proration
      - migration
      - adhoc
      - backport
      - backport-balance-reconciliation
      type: string
    InvoiceSeller:
      title: InvoiceSeller
      type: object
      properties:
        name:
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        phone:
          type: string
        logo_url:
          type:
          - string
          - 'null'
      description: Information about the seller (merchant) listed on the masthead of the invoice.
    InvoiceSortField:
      title: InvoiceSortField
      enum:
      - status
      - total_amount
      - due_amount
      - created_at
      - updated_at
      - issue_date
      - due_date
      - number
      type: string
      examples:
      - total_amount
    InvoiceStatus:
      title: InvoiceStatus
      enum:
      - draft
      - open
      - paid
      - pending
      - voided
      - canceled
      type: string
      description: The current status of the invoice. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
    InvoiceTax:
      title: InvoiceTax
      type: object
      properties:
        uid:
          type: string
        title:
          type: string
        description:
          type:
          - string
          - 'null'
        source_type:
          type: string
        source_id:
          type: integer
          contentEncoding: int32
        percentage:
          type: string
        taxable_amount:
          type: string
        tax_amount:
          type: string
        transaction_id:
          type: integer
          contentEncoding: int32
        line_item_breakouts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTaxBreakout'
          description: ''
        tax_component_breakouts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTaxComponentBreakout'
          description: ''
    InvoiceTaxBreakout:
      title: InvoiceTaxBreakout
      type: object
      properties:
        uid:
          type: string
        taxable_amount:
          type: string
        tax_amount:
          type: string
    InvoiceTaxComponentBreakout:
      title: InvoiceTaxComponentBreakout
      type: object
      properties:
        tax_rule_id:
          type: integer
          contentEncoding: int32
        percentage:
          type: string
        country_code:
          type: string
        subdivision_code:
          type: string
    Invoice1:
      title: Invoice1
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int64
        uid:
          type: string
          description: Unique identifier for the invoice. It is generated automatically by Chargify and has the prefix "inv_" followed by alphanumeric characters.
        site_id:
          type: integer
          description: ID of the site to which the invoice belongs.
          contentEncoding: int32
        customer_id:
          type: integer
          description: ID of the customer to which the invoice belongs.
          contentEncoding: int32
        subscription_id:
          type: integer
          description: ID of the subscription that generated the invoice.
          contentEncoding: int32
        number:
          type: string
          description: >-
            A unique, identifying string that appears on the invoice and in places the invoice is referenced.


            While the UID is long and not appropriate to show to customers, the number is usually shorter and consumable by the customer and the merchant alike.
        sequence_number:
          type: integer
          description: A monotonically increasing number assigned to invoices as they are created.  This number is unique within a site and can be used to sort and order invoices.
          contentEncoding: int32
        transaction_time:
          type: string
          contentEncoding: date-time
        created_at:
          type: string
          contentEncoding: date-time
        updated_at:
          type: string
          contentEncoding: date-time
        issue_date:
          type: string
          description: >-
            Date the invoice was issued to the customer.  This is the date that the invoice was made available for payment.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        due_date:
          type: string
          description: >-
            Date the invoice is due.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        paid_date:
          type:
          - string
          - 'null'
          description: >-
            Date the invoice became fully paid.


            If partial payments are applied to the invoice, this date will not be present until payment has been made in full.


            The format is `"YYYY-MM-DD"`.
          contentEncoding: date
          examples:
          - 2024-01-01
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The current status of the invoice. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        role:
          allOf:
          - $ref: '#/components/schemas/InvoiceRole'
          - {}
        parent_invoice_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
        payment_instructions:
          type: string
          description: A message that is printed on the invoice when it is marked for remittance collection. It is intended to describe to the customer how they may make payment, and is configured by the merchant.
        currency:
          type: string
          description: The ISO 4217 currency code (3 character string) representing the currency of invoice transaction.
        consolidation_level:
          allOf:
          - $ref: '#/components/schemas/InvoiceConsolidationLevel'
          - description: >-
              Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


              * "none": A normal invoice with no consolidation.

              * "child": An invoice segment which has been combined into a consolidated invoice.

              * "parent": A consolidated invoice, whose contents are composed of invoice segments.


              "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


              See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
        parent_invoice_uid:
          type:
          - string
          - 'null'
          description: For invoices with `consolidation_level` of `child`, this specifies the UID of the parent (consolidated) invoice.
        subscription_group_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        parent_invoice_number:
          type:
          - integer
          - 'null'
          description: For invoices with `consolidation_level` of `child`, this specifies the number of the parent (consolidated) invoice.
          contentEncoding: int32
        group_primary_subscription_id:
          type:
          - integer
          - 'null'
          description: For invoices with `consolidation_level` of `parent`, this specifies the ID of the subscription which was the primary subscription of the subscription group that generated the invoice.
          contentEncoding: int32
        product_name:
          type: string
          description: The name of the product subscribed when the invoice was generated.
        product_family_name:
          type: string
          description: The name of the product family subscribed when the invoice was generated.
        seller:
          allOf:
          - $ref: '#/components/schemas/InvoiceSeller'
          - description: Information about the seller (merchant) listed on the masthead of the invoice.
        customer:
          allOf:
          - $ref: '#/components/schemas/InvoiceCustomer'
          - description: Information about the customer who is owner or recipient the invoiced subscription.
        payer:
          allOf:
          - $ref: '#/components/schemas/InvoicePayer'
          - {}
        recipient_emails:
          maxItems: 5
          type: array
          items:
            type: string
          description: ''
        net_terms:
          type: integer
          contentEncoding: int32
        memo:
          type: string
          description: The memo printed on invoices of any collection type.  This message is in control of the merchant.
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          - {}
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          - {}
        subtotal_amount:
          type: string
          description: Subtotal of the invoice, which is the sum of all line items before discounts or taxes.
        discount_amount:
          type: string
          description: Total discount applied to the invoice.
        tax_amount:
          type: string
          description: Total tax on the invoice.
        total_amount:
          type: string
          description: The invoice total, which is `subtotal_amount - discount_amount + tax_amount`.'
        credit_amount:
          type: string
          description: >-
            The amount of credit (from credit notes) applied to this invoice.


            Credits offset the amount due from the customer.
        refund_amount:
          type: string
        paid_amount:
          type: string
          description: The amount paid on the invoice by the customer.
        due_amount:
          type: string
          description: Amount due on the invoice, which is `total_amount - credit_amount - paid_amount`.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem1'
          description: Line items on the invoice.
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDiscount'
          description: ''
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTax'
          description: ''
        credits:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCredit'
          description: ''
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceRefund'
          description: ''
        payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePayment'
          description: ''
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
        display_settings:
          allOf:
          - $ref: '#/components/schemas/InvoiceDisplaySettings'
          - {}
        public_url:
          type: string
          description: The public URL of the invoice
        previous_balance_data:
          allOf:
          - $ref: '#/components/schemas/InvoicePreviousBalance'
          - {}
    IssueAdvanceInvoiceRequest:
      title: IssueAdvanceInvoiceRequest
      type: object
      properties:
        force:
          type: boolean
    IssueInvoiceEventData:
      title: IssueInvoiceEventData
      required:
      - consolidation_level
      - from_status
      - to_status
      - due_amount
      - total_amount
      type: object
      properties:
        consolidation_level:
          allOf:
          - $ref: '#/components/schemas/InvoiceConsolidationLevel'
          - description: >-
              Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


              * "none": A normal invoice with no consolidation.

              * "child": An invoice segment which has been combined into a consolidated invoice.

              * "parent": A consolidated invoice, whose contents are composed of invoice segments.


              "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


              See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
        from_status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The status of the invoice before event occurrence. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        to_status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The status of the invoice after event occurrence. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        due_amount:
          type: string
          description: Amount due on the invoice, which is `total_amount - credit_amount - paid_amount`.
        total_amount:
          type: string
          description: The invoice total, which is `subtotal_amount - discount_amount + tax_amount`.'
      description: Example schema for an `issue_invoice` event
    IssueInvoiceRequest:
      title: IssueInvoiceRequest
      type: object
      properties:
        on_failed_payment:
          allOf:
          - $ref: '#/components/schemas/FailedPaymentAction'
          - description: >-
              Action taken when payment for an invoice fails:

              - `leave_open_invoice` - prepayments and credits applied to invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history. This is the default option.

              - `rollback_to_pending` - prepayments and credits not applied; invoice remains in "pending" status; no email sent to the customer; payment failure recorded in the invoice history.

              - `initiate_dunning` - prepayments and credits applied to the invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history; subscription will  most likely go into "past_due" or "canceled" state (depending upon net terms and dunning settings).
    IssueServiceCredit:
      title: IssueServiceCredit
      required:
      - amount
      - memo
      type: object
      properties:
        amount:
          oneOf:
          - minimum: 0
            type: number
          - type: string
        memo:
          type: string
    IssueServiceCreditRequest:
      title: IssueServiceCreditRequest
      required:
      - service_credit
      type: object
      properties:
        service_credit:
          allOf:
          - $ref: '#/components/schemas/IssueServiceCredit'
          - {}
    ItemCategory:
      title: ItemCategory
      enum:
      - Business Software
      - Consumer Software
      - Digital Services
      - Physical Goods
      - Other
      type: string
      description: 'One of the following: Business Software, Consumer Software, Digital Services, Physical Goods, Other'
      examples:
      - Business Software
    ItemPricePointChanged:
      title: ItemPricePointChanged
      required:
      - item_id
      - item_type
      - item_handle
      - item_name
      - previous_price_point
      - current_price_point
      type: object
      properties:
        item_id:
          type: integer
          contentEncoding: int32
        item_type:
          type: string
        item_handle:
          type: string
        item_name:
          type: string
        previous_price_point:
          allOf:
          - $ref: '#/components/schemas/ItemPricePointData'
          - {}
        current_price_point:
          allOf:
          - $ref: '#/components/schemas/ItemPricePointData'
          - {}
    ItemPricePointData:
      title: ItemPricePointData
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        handle:
          type: string
        name:
          type: string
    LineItemKind:
      title: LineItemKind
      enum:
      - baseline
      - initial
      - trial
      - quantity_based_component
      - prepaid_usage_component
      - on_off_component
      - metered_component
      - event_based_component
      - coupon
      - tax
      type: string
      description: A handle for the line item kind
    LineItemTransactionType:
      title: LineItemTransactionType
      enum:
      - charge
      - credit
      - adjustment
      - payment
      - refund
      - info_transaction
      - payment_authorization
      type: string
      description: A handle for the line item transaction type
    ListComponentsPricePointsInclude:
      title: ListComponentsPricePointsInclude
      const: currency_prices
      type: string
      examples:
      - currency_prices
    ListComponentsPricePointsResponse:
      title: ListComponentsPricePointsResponse
      required:
      - price_points
      type: object
      properties:
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePoint'
          description: ''
    ListCreditNotesResponse:
      title: ListCreditNotesResponse
      required:
      - credit_notes
      type: object
      properties:
        credit_notes:
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
          description: ''
    ListEventsDateField:
      title: ListEventsDateField
      const: created_at
      type: string
      examples:
      - created_at
    ListInvoiceEventsResponse:
      title: ListInvoiceEventsResponse
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Invoice-Event1'
          description: ''
        page:
          type: integer
          contentEncoding: int32
        per_page:
          type: integer
          contentEncoding: int32
        total_pages:
          type: integer
          contentEncoding: int32
    ListInvoicesResponse:
      title: ListInvoicesResponse
      required:
      - invoices
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
          description: ''
    ListMetafieldsResponse:
      title: ListMetafieldsResponse
      type: object
      properties:
        total_count:
          type: integer
          contentEncoding: int32
        current_page:
          type: integer
          contentEncoding: int32
        total_pages:
          type: integer
          contentEncoding: int32
        per_page:
          type: integer
          contentEncoding: int32
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: ''
    ListMRRResponse:
      title: ListMRRResponse
      required:
      - mrr
      type: object
      properties:
        mrr:
          allOf:
          - $ref: '#/components/schemas/ListMRRResponseResult'
          - {}
    ListMRRResponseResult:
      title: ListMRRResponseResult
      type: object
      properties:
        page:
          type: integer
          contentEncoding: int32
        per_page:
          type: integer
          contentEncoding: int32
        total_pages:
          type: integer
          contentEncoding: int32
        total_entries:
          type: integer
          contentEncoding: int32
        currency:
          type: string
        currency_symbol:
          type: string
        movements:
          type: array
          items:
            $ref: '#/components/schemas/Movement'
          description: ''
    ListOffersResponse:
      title: ListOffersResponse
      type: object
      properties:
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
          description: ''
    ListProductPricePointsResponse:
      title: ListProductPricePointsResponse
      required:
      - price_points
      type: object
      properties:
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ProductPricePoint'
          description: ''
    ListProductsInclude:
      title: ListProductsInclude
      const: prepaid_product_price_point
      type: string
      examples:
      - prepaid_product_price_point
    ListProductsPricePointsInclude:
      title: ListProductsPricePointsInclude
      const: currency_prices
      type: string
      examples:
      - currency_prices
    ListPublicKeysMeta:
      title: ListPublicKeysMeta
      type: object
      properties:
        total_count:
          type: integer
          contentEncoding: int32
        current_page:
          type: integer
          contentEncoding: int32
        total_pages:
          type: integer
          contentEncoding: int32
        per_page:
          type: integer
          contentEncoding: int32
    ListPublicKeysResponse:
      title: ListPublicKeysResponse
      type: object
      properties:
        chargify_js_keys:
          type: array
          items:
            $ref: '#/components/schemas/PublicKey'
          description: ''
        meta:
          allOf:
          - $ref: '#/components/schemas/ListPublicKeysMeta'
          - {}
    ListSaleRepItem:
      title: ListSaleRepItem
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        full_name:
          type: string
        subscriptions_count:
          type: integer
          contentEncoding: int32
        mrr_data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SaleRepItemMrr'
          examples:
          - november_2019:
              mrr: $0.00
              usage: $0.00
              recurring: $0.00
            december_2019:
              mrr: $0.00
              usage: $0.00
              recurring: $0.00
            january_2020:
              mrr: $400.00
              usage: $0.00
              recurring: $400.00
        test_mode:
          type: boolean
    ListSegmentsResponse:
      title: ListSegmentsResponse
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
          description: ''
    ListSubcriptionGroupPrepaymentItem:
      title: ListSubcriptionGroupPrepaymentItem
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        subscription_group_uid:
          type: string
        amount_in_cents:
          type: integer
          contentEncoding: int64
        remaining_amount_in_cents:
          type: integer
          contentEncoding: int64
        details:
          type: string
        external:
          type: boolean
        memo:
          type: string
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PrepaymentMethod'
          - description: :- When the `method` specified is `"credit_card_on_file"`, the prepayment amount will be collected using the default credit card payment profile and applied to the prepayment account balance. This is especially useful for manual replenishment of prepaid subscriptions.
        created_at:
          type: string
    ListSubscriptionComponentsInclude:
      title: ListSubscriptionComponentsInclude
      const: subscription
      type: string
      examples:
      - subscription
    ListSubscriptionComponentsResponse:
      title: ListSubscriptionComponentsResponse
      required:
      - subscriptions_components
      type: object
      properties:
        subscriptions_components:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionComponent'
          description: ''
    ListSubscriptionComponentsSort:
      title: ListSubscriptionComponentsSort
      enum:
      - id
      - updated_at
      type: string
      examples:
      - updated_at
    ListSubscriptionGroupPrepayment:
      title: ListSubscriptionGroupPrepayment
      required:
      - prepayment
      type: object
      properties:
        prepayment:
          allOf:
          - $ref: '#/components/schemas/ListSubcriptionGroupPrepaymentItem'
          - {}
    ListSubscriptionGroupPrepaymentDateField:
      title: ListSubscriptionGroupPrepaymentDateField
      enum:
      - created_at
      - application_at
      type: string
      examples:
      - created_at
    ListSubscriptionGroupPrepaymentResponse:
      title: ListSubscriptionGroupPrepaymentResponse
      required:
      - prepayments
      type: object
      properties:
        prepayments:
          type: array
          items:
            $ref: '#/components/schemas/ListSubscriptionGroupPrepayment'
          description: ''
    ListSubscriptionGroupsItem:
      title: ListSubscriptionGroupsItem
      type: object
      properties:
        uid:
          type: string
        scheme:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          contentEncoding: int32
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        primary_subscription_id:
          type: integer
          contentEncoding: int32
        next_assessment_at:
          type: string
        state:
          type: string
        cancel_at_end_of_period:
          type: boolean
        account_balances:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupBalances'
          - {}
    ListSubscriptionGroupsMeta:
      title: ListSubscriptionGroupsMeta
      type: object
      properties:
        current_page:
          type: integer
          contentEncoding: int32
        total_count:
          type: integer
          contentEncoding: int32
    ListSubscriptionGroupsResponse:
      title: ListSubscriptionGroupsResponse
      type: object
      properties:
        subscription_groups:
          type: array
          items:
            $ref: '#/components/schemas/ListSubscriptionGroupsItem'
          description: ''
        meta:
          allOf:
          - $ref: '#/components/schemas/ListSubscriptionGroupsMeta'
          - {}
    Metadata:
      title: Metadata
      type: object
      properties:
        id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        value:
          type:
          - string
          - 'null'
        resource_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        name:
          type: string
        deleted_at:
          type:
          - string
          - 'null'
        metafield_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
    Metafield:
      title: Metafield
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        scope:
          allOf:
          - $ref: '#/components/schemas/MetafieldScope'
          - description: "Warning: When updating a metafield's scope attribute, all scope attributes must be passed. Partially complete scope attributes will override the existing settings."
        data_count:
          type: integer
          description: the amount of subscriptions this metafield has been applied to in Chargify
          contentEncoding: int32
        input_type:
          allOf:
          - $ref: '#/components/schemas/MetafieldInput'
          - description: Indicates how data should be added to the metafield. For example, a text type is just a string, so a given metafield of this type can have any value attached. On the other hand, dropdown and radio have a set of allowed values that can be input, and appear differently on a Public Signup Page. Defaults to 'text'
        enum:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
          - {}
    MetafieldInput:
      title: MetafieldInput
      enum:
      - balance_tracker
      - text
      - radio
      - dropdown
      type: string
      description: Indicates how data should be added to the metafield. For example, a text type is just a string, so a given metafield of this type can have any value attached. On the other hand, dropdown and radio have a set of allowed values that can be input, and appear differently on a Public Signup Page. Defaults to 'text'
    MetafieldScope:
      title: MetafieldScope
      type: object
      properties:
        csv:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from the csv export.
        invoices:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from invoices.
        statements:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from statements.
        portal:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from the portal.
        public_show:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from being viewable by your ecosystem.
        public_edit:
          allOf:
          - $ref: '#/components/schemas/IncludeOption'
          - description: Include (1) or exclude (0) metafields from being edited by your ecosystem.
        hosted:
          type: array
          items:
            type: string
          description: ''
      description: "Warning: When updating a metafield's scope attribute, all scope attributes must be passed. Partially complete scope attributes will override the existing settings."
    MeteredComponent:
      title: MeteredComponent
      required:
      - name
      - unit_name
      - pricing_scheme
      type: object
      properties:
        name:
          type: string
          description: A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".
        unit_name:
          type: string
          description: The name of the unit of measurement for the component. It should be singular since it will be automatically pluralized when necessary. i.e. “message”, which may then be shown as “5 messages” on a subscription’s component line-item
        description:
          type: string
          description: A description for the component that will be displayed to the user on the hosted signup page.
        handle:
          pattern: ^[a-z0-9][a-z0-9\-_:.]*$
          type: string
          description: A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters '.', ':', '-', or '_'.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: (Not required for ‘per_unit’ pricing schemes) One or more price brackets. See [Price Bracket Rules](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405020625677#price-bracket-rules) for an overview of how price brackets work for different pricing schemes.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePointItem'
          description: ''
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The amount the customer will be charged per unit when the pricing scheme is “per_unit”. For On/Off Components, this is the amount that the customer will be charged when they turn the component on for the subscription. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        tax_code:
          type: string
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        price_in_cents:
          type: string
          description: deprecated May 2011 - use unit_price instead
        display_on_hosted_page:
          type: boolean
        allow_fractional_quantities:
          type: boolean
        public_signup_page_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component's default price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component's default price point, either month or day. This property is only available for sites with Multifrequency enabled.
    MeteredUsage:
      title: MeteredUsage
      required:
      - previous_unit_balance
      - new_unit_balance
      - usage_quantity
      - component_id
      - component_handle
      - memo
      type: object
      properties:
        previous_unit_balance:
          minLength: 1
          type: string
        new_unit_balance:
          type: integer
          contentEncoding: int32
        usage_quantity:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        memo:
          type: string
    Movement:
      title: Movement
      type: object
      properties:
        timestamp:
          type: string
        amount_in_cents:
          type: integer
          contentEncoding: int64
        amount_formatted:
          type: string
        description:
          type: string
        category:
          type: string
        breakouts:
          allOf:
          - $ref: '#/components/schemas/Breakouts'
          - {}
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/MovementLineItem'
          description: ''
        subscription_id:
          type: integer
          contentEncoding: int32
        subscriber_name:
          type: string
    MovementLineItem:
      title: MovementLineItem
      type: object
      properties:
        product_id:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          description: For Product (or "baseline") line items, this field will have a value of `0`.
          contentEncoding: int32
        price_point_id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        mrr:
          type: integer
          contentEncoding: int32
        mrr_movements:
          type: array
          items:
            $ref: '#/components/schemas/MRRMovement'
          description: ''
        quantity:
          type: integer
          contentEncoding: int32
        prev_quantity:
          type: integer
          contentEncoding: int32
        recurring:
          type: boolean
          description: When `true`, the line item's MRR value will contribute to the `plan` breakout. When `false`, the line item contributes to the `usage` breakout.
    MRR:
      title: MRR
      type: object
      properties:
        amount_in_cents:
          type: integer
          contentEncoding: int64
        amount_formatted:
          type: string
        currency:
          type: string
        currency_symbol:
          type: string
        breakouts:
          allOf:
          - $ref: '#/components/schemas/Breakouts'
          - {}
        at_time:
          type: string
          description: ISO8601 timestamp
    MRRMovement:
      title: MRRMovement
      type: object
      properties:
        amount:
          type: integer
          contentEncoding: int32
        category:
          type: string
        subscriber_delta:
          type: integer
          contentEncoding: int32
        lead_delta:
          type: integer
          contentEncoding: int32
    MRRresponse:
      title: MRRresponse
      required:
      - mrr
      type: object
      properties:
        mrr:
          allOf:
          - $ref: '#/components/schemas/MRR'
          - {}
    MultiInvoicePayment:
      title: MultiInvoicePayment
      type: object
      properties:
        transaction_id:
          type: integer
          description: The numeric ID of the transaction.
          contentEncoding: int32
        total_amount:
          type: string
          description: Dollar amount of the sum of the paid invoices.
        currency_code:
          type: string
          description: The ISO 4217 currency code (3 character string) representing the currency of invoice transaction.
        applications:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentApplication'
          description: ''
    MultiInvoicePaymentResponse:
      title: MultiInvoicePaymentResponse
      required:
      - payment
      type: object
      properties:
        payment:
          allOf:
          - $ref: '#/components/schemas/MultiInvoicePayment'
          - {}
    NestedSubscriptionGroup:
      title: NestedSubscriptionGroup
      type: object
      properties:
        uid:
          type: string
          description: The UID for the group
        scheme:
          type: integer
          description: Whether the group is configured to rely on a primary subscription for billing. At this time, it will always be 1.
          contentEncoding: int32
        primary_subscription_id:
          type: integer
          description: The subscription ID of the primary within the group. Applicable to scheme 1.
          contentEncoding: int32
        primary:
          type: boolean
          description: A boolean indicating whether the subscription is the primary in the group. Applicable to scheme 1.
    NetTerms:
      title: NetTerms
      type: object
      properties:
        default_net_terms:
          type: integer
          contentEncoding: int32
          default: 0
        automatic_net_terms:
          type: integer
          contentEncoding: int32
          default: 0
        remittance_net_terms:
          type: integer
          contentEncoding: int32
          default: 0
        net_terms_on_remittance_signups_enabled:
          type: boolean
          default: false
        custom_net_terms_enabled:
          type: boolean
          default: false
    Offer:
      title: Offer
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        site_id:
          type: integer
          contentEncoding: int32
        product_family_id:
          type: integer
          contentEncoding: int32
        product_id:
          type: integer
          contentEncoding: int32
        product_price_point_id:
          type: integer
          contentEncoding: int32
        product_revisable_number:
          type: integer
          contentEncoding: int32
        name:
          type: string
        handle:
          type: string
        description:
          type:
          - string
          - 'null'
        created_at:
          type: string
        updated_at:
          type: string
        archived_at:
          type:
          - string
          - 'null'
        offer_items:
          type: array
          items:
            $ref: '#/components/schemas/OfferItem'
          description: ''
        offer_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OfferDiscount'
          description: ''
        product_family_name:
          type: string
        product_name:
          type: string
        product_price_point_name:
          type: string
        product_price_in_cents:
          type: integer
          contentEncoding: int64
        offer_signup_pages:
          type: array
          items:
            $ref: '#/components/schemas/OfferSignupPage'
          description: ''
    OfferDiscount:
      title: OfferDiscount
      type: object
      properties:
        coupon_code:
          type: string
        coupon_id:
          type: integer
          contentEncoding: int32
        coupon_name:
          type: string
    OfferItem:
      title: OfferItem
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        price_point_id:
          type: integer
          contentEncoding: int32
        starting_quantity:
          type: string
        editable:
          type: boolean
        component_unit_price:
          type: string
        component_name:
          type: string
        price_point_name:
          type: string
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyPrice'
          description: ''
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of '30' coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
    OfferResponse:
      title: OfferResponse
      type: object
      properties:
        offer:
          allOf:
          - $ref: '#/components/schemas/Offer'
          - {}
    OfferSignupPage:
      title: OfferSignupPage
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        nickname:
          type: string
        enabled:
          type: boolean
        return_url:
          type: string
        return_params:
          type: string
        url:
          type: string
    OnOffComponent:
      title: OnOffComponent
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".
        description:
          type: string
          description: A description for the component that will be displayed to the user on the hosted signup page.
        handle:
          pattern: ^[a-z0-9][a-z0-9\-_:.]*$
          type: string
          description: A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters '.', ':', '-', or '_'.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: (Not required for ‘per_unit’ pricing schemes) One or more price brackets. See [Price Bracket Rules](https://chargify.zendesk.com/hc/en-us/articles/4407755865883#price-bracket-rules) for an overview of how price brackets work for different pricing schemes.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePointItem'
          description: ''
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The amount the customer will be charged per unit when the pricing scheme is “per_unit”. For On/Off Components, this is the amount that the customer will be charged when they turn the component on for the subscription. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        tax_code:
          type: string
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        price_in_cents:
          type: string
          description: deprecated May 2011 - use unit_price instead
        display_on_hosted_page:
          type: boolean
        allow_fractional_quantities:
          type: boolean
        public_signup_page_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component's default price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component's default price point, either month or day. This property is only available for sites with Multifrequency enabled.
    OrganizationAddress:
      title: OrganizationAddress
      type: object
      properties:
        street:
          type:
          - string
          - 'null'
        line2:
          type:
          - string
          - 'null'
        city:
          type:
          - string
          - 'null'
        state:
          type:
          - string
          - 'null'
        zip:
          type:
          - string
          - 'null'
        country:
          type:
          - string
          - 'null'
        name:
          type:
          - string
          - 'null'
        phone:
          type:
          - string
          - 'null'
    OriginInvoice:
      title: OriginInvoice
      type: object
      properties:
        uid:
          type: string
          description: The UID of the invoice serving as an origin invoice.
        number:
          type: string
          description: The number of the invoice serving as an origin invoice.
    OveragePricing:
      title: OveragePricing
      required:
      - pricing_scheme
      type: object
      properties:
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
    OverrideSubscription:
      title: OverrideSubscription
      type: object
      properties:
        activated_at:
          type: string
          description: Can be used to record an external signup date. Chargify uses this field to record when a subscription first goes active (either at signup or at trial end). Only ISO8601 format is supported.
          contentEncoding: date-time
        canceled_at:
          type: string
          description: Can be used to record an external cancellation date. Chargify sets this field automatically when a subscription is canceled, whether by request or via dunning. Only ISO8601 format is supported.
          contentEncoding: date-time
        cancellation_message:
          type: string
          description: Can be used to record a reason for the original cancellation.
        expires_at:
          type: string
          description: Can be used to record an external expiration date. Chargify sets this field automatically when a subscription expires (ceases billing) after a prescribed amount of time. Only ISO8601 format is supported.
          contentEncoding: date-time
        current_period_starts_at:
          type: string
          description: Can only be used when a subscription is unbilled, which happens when a future initial billing date is passed at subscription creation. The value passed must be before the current date and time. Allows you to set when the period started so mid period component allocations have the correct proration. Only ISO8601 format is supported.
          contentEncoding: date-time
    OverrideSubscriptionRequest:
      title: OverrideSubscriptionRequest
      required:
      - subscription
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/OverrideSubscription'
          - {}
    PaginatedMetadata:
      title: PaginatedMetadata
      type: object
      properties:
        total_count:
          type: integer
          contentEncoding: int32
        current_page:
          type: integer
          contentEncoding: int32
        total_pages:
          type: integer
          contentEncoding: int32
        per_page:
          type: integer
          contentEncoding: int32
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
          description: ''
    PauseRequest:
      title: PauseRequest
      type: object
      properties:
        hold:
          allOf:
          - $ref: '#/components/schemas/AutoResume'
          - {}
      description: Allows to pause a Subscription
    PayerAttributes:
      title: PayerAttributes
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        cc_emails:
          type: string
        organization:
          type: string
        reference:
          type: string
        address:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        locale:
          type: string
        vat_number:
          type: string
        tax_exempt:
          type: string
        tax_exempt_reason:
          type: string
        metafields:
          type: object
          additionalProperties:
            type: string
          description: (Optional) A set of key/value pairs representing custom fields and their values. Metafields will be created “on-the-fly” in your site for a given key, if they have not been created yet.
          examples:
          - custom_field_name_1: custom_field_value_1
            custom_field_name_2: custom_field_value_2
    PayerError:
      title: PayerError
      type: object
      properties:
        last_name:
          type: array
          items:
            type: string
          description: ''
        first_name:
          type: array
          items:
            type: string
          description: ''
        email:
          type: array
          items:
            type: string
          description: ''
    Payment:
      title: Payment
      type: object
      properties:
        invoice_uid:
          type: string
          description: The uid of the paid invoice
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatus'
          - description: The current status of the invoice. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
        due_amount:
          type: string
          description: The remaining due amount on the invoice
        paid_amount:
          type: string
          description: The total amount paid on this invoice (including any prior payments)
    PaymentCollectionMethodChanged:
      title: PaymentCollectionMethodChanged
      required:
      - previous_value
      - current_value
      type: object
      properties:
        previous_value:
          type: string
        current_value:
          type: string
    PaymentforAllocation:
      title: PaymentforAllocation
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        amount_in_cents:
          type: integer
          contentEncoding: int64
        success:
          type: boolean
        memo:
          type: string
      description: Information for captured payment, if applicable
    PaymentProfileAttributes:
      title: PaymentProfileAttributes
      type: object
      properties:
        chargify_token:
          type: string
          description: (Optional) Token received after sending billing informations using chargify.js. This token must be passed as a sole attribute of `payment_profile_attributes` (i.e. tok_9g6hw85pnpt6knmskpwp4ttt)
        id:
          type: integer
          contentEncoding: int32
        payment_type:
          type: string
        first_name:
          type: string
          description: (Optional) First name on card or bank account. If omitted, the first_name from customer attributes will be used.
        last_name:
          type: string
          description: (Optional) Last name on card or bank account. If omitted, the last_name from customer attributes will be used.
        masked_card_number:
          type: string
        full_number:
          type: string
          description: The full credit card number (string representation, i.e. 5424000000000015)
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: (Optional, used only for Subscription Import) If you know the card type (i.e. Visa, MC, etc) you may supply it here so that we may display the card type in the UI.
        expiration_month:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: (Optional when performing a Subscription Import via vault_token, required otherwise) The 1- or 2-digit credit card expiration month, as an integer or string, i.e. 5
        expiration_year:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: (Optional when performing a Subscription Import via vault_token, required otherwise) The 4-digit credit card expiration year, as an integer or string, i.e. 2012
        billing_address:
          type: string
          description: (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing street address (i.e. 123 Main St.). This value is merely passed through to the payment gateway.
        billing_address_2:
          type:
          - string
          - 'null'
          description: (Optional) Second line of the customer’s billing address i.e. Apt. 100
        billing_city:
          type: string
          description: (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address city (i.e. “Boston”). This value is merely passed through to the payment gateway.
        billing_state:
          type: string
          description: (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address state (i.e. MA). This value is merely passed through to the payment gateway. This must conform to the [ISO_3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.
        billing_country:
          type: string
          description: (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address country, required in [ISO_3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”). This value is merely passed through to the payment gateway. Some gateways require country codes in a specific format. Please check your gateway’s documentation. If creating an ACH subscription, only US is supported at this time.
        billing_zip:
          type: string
          description: (Optional, may be required by your product configuration or gateway settings) The credit card or bank account billing address zip code (i.e. 12345). This value is merely passed through to the payment gateway.
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: (Optional, used only for Subscription Import) The vault that stores the payment profile with the provided vault_token.
        vault_token:
          type: string
          description: (Optional, used only for Subscription Import) The “token” provided by your vault storage for an already stored payment profile
        customer_vault_token:
          type: string
          description: (Optional, used only for Subscription Import) (only for Authorize.Net CIM storage or Square) The customerProfileId for the owner of the customerPaymentProfileId provided as the vault_token
        customer_id:
          type: integer
          contentEncoding: int32
        paypal_email:
          type: string
        payment_method_nonce:
          type: string
          description: (Required for Square unless importing with vault_token and customer_vault_token) The nonce generated by the Square Javascript library (SqPaymentForm)
        gateway_handle:
          type: string
          description: (Optional) This attribute is only available if MultiGateway feature is enabled for your Site. This feature is in the Private Beta currently. gateway_handle is used to directly select a gateway where a payment profile will be stored in. Every connected gateway must have a unique gateway handle specified. Read [Multigateway description](https://chargify.zendesk.com/hc/en-us/articles/4407761759643#connecting-with-multiple-gateways) to learn more about new concepts that MultiGateway introduces and the default behavior when this attribute is not passed.
        cvv:
          type: string
          description: (Optional, may be required by your gateway settings) The 3- or 4-digit Card Verification Value. This value is merely passed through to the payment gateway.
        last_four:
          type: string
          description: (Optional, used only for Subscription Import) If you have the last 4 digits of the credit card number, you may supply them here so that we may create a masked card number (i.e. XXXX-XXXX-XXXX-1234) for display in the UI. Last 4 digits are required for refunds in Auth.Net.
      description: alias to credit_card_attributes
    PaymentProfileResponse:
      title: PaymentProfileResponse
      required:
      - payment_profile
      type: object
      properties:
        payment_profile:
          oneOf:
          - $ref: '#/components/schemas/BankAccountPaymentProfile'
          - allOf:
            - $ref: '#/components/schemas/CreditCardPaymentProfile'
            - examples:
              - id: 10088716
                first_name: Test
                last_name: Subscription
                masked_card_number: XXXX-XXXX-XXXX-1
                card_type: bogus
                expiration_month: 1
                expiration_year: 2022
                customer_id: 14543792
                current_vault: bogus
                vault_token: '1'
                billing_address: 123 Montana Way
                billing_city: Billings
                billing_state: MT
                billing_zip: '59101'
                billing_country: US
                customer_vault_token: null
                billing_address_2: ''
                payment_type: credit_card
                site_gateway_setting_id: 1
                gateway_handle: null
    PaymentRelatedEvents:
      title: PaymentRelatedEvents
      required:
      - product_id
      - account_transaction_id
      type: object
      properties:
        product_id:
          type: integer
          contentEncoding: int32
        account_transaction_id:
          type: integer
          contentEncoding: int32
    PaymentResponse:
      title: PaymentResponse
      type: object
      properties:
        paid_invoices:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
          description: ''
        prepayment:
          allOf:
          - $ref: '#/components/schemas/InvoicePrePayment'
          - {}
    PaymentType:
      title: PaymentType
      enum:
      - credit_card
      - bank_account
      - paypal_account
      type: string
    PendingCancellationChange:
      title: PendingCancellationChange
      required:
      - cancellation_state
      - cancels_at
      type: object
      properties:
        cancellation_state:
          type: string
        cancels_at:
          type: string
    PortalManagementLink:
      title: PortalManagementLink
      type: object
      properties:
        url:
          type: string
        fetch_count:
          type: integer
          contentEncoding: int32
        created_at:
          type: string
        new_link_available_at:
          type: string
        expires_at:
          type: string
        last_invite_sent_at:
          type:
          - string
          - 'null'
    PrepaidComponentPricePoint:
      title: PrepaidComponentPricePoint
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
        overage_pricing:
          allOf:
          - $ref: '#/components/schemas/OveragePricing'
          - {}
    PrepaidConfiguration:
      title: PrepaidConfiguration
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        initial_funding_amount_in_cents:
          type: integer
          contentEncoding: int64
        replenish_to_amount_in_cents:
          type: integer
          contentEncoding: int64
        auto_replenish:
          type: boolean
        replenish_threshold_amount_in_cents:
          type: integer
          contentEncoding: int64
    PrepaidConfigurationResponse:
      title: PrepaidConfigurationResponse
      required:
      - prepaid_configuration
      type: object
      properties:
        prepaid_configuration:
          allOf:
          - $ref: '#/components/schemas/PrepaidConfiguration'
          - {}
    PrepaidSubscriptionBalanceChanged:
      title: PrepaidSubscriptionBalanceChanged
      required:
      - reason
      - current_account_balance_in_cents
      - prepayment_account_balance_in_cents
      - current_usage_amount_in_cents
      type: object
      properties:
        reason:
          type: string
        current_account_balance_in_cents:
          type: integer
          contentEncoding: int64
        prepayment_account_balance_in_cents:
          type: integer
          contentEncoding: int64
        current_usage_amount_in_cents:
          type: integer
          contentEncoding: int64
    PrepaidUsage:
      title: PrepaidUsage
      required:
      - previous_unit_balance
      - previous_overage_unit_balance
      - new_unit_balance
      - new_overage_unit_balance
      - usage_quantity
      - overage_usage_quantity
      - component_id
      - component_handle
      - memo
      - allocation_details
      type: object
      properties:
        previous_unit_balance:
          minLength: 1
          type: string
        previous_overage_unit_balance:
          minLength: 1
          type: string
        new_unit_balance:
          type: integer
          contentEncoding: int32
        new_overage_unit_balance:
          type: integer
          contentEncoding: int32
        usage_quantity:
          type: integer
          contentEncoding: int32
        overage_usage_quantity:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        memo:
          type: string
        allocation_details:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidUsageAllocationDetail'
          description: ''
    PrepaidUsageAllocationDetail:
      title: PrepaidUsageAllocationDetail
      type: object
      properties:
        allocation_id:
          type: integer
          contentEncoding: int32
        charge_id:
          type: integer
          contentEncoding: int32
        usage_quantity:
          type: integer
          contentEncoding: int32
    PrepaidUsageComponent:
      title: PrepaidUsageComponent
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".
        unit_name:
          type: string
          description: The name of the unit of measurement for the component. It should be singular since it will be automatically pluralized when necessary. i.e. “message”, which may then be shown as “5 messages” on a subscription’s component line-item
        description:
          type: string
          description: A description for the component that will be displayed to the user on the hosted signup page.
        handle:
          pattern: ^[a-z0-9][a-z0-9\-_:.]*$
          type: string
          description: A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters '.', ':', '-', or '_'.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: (Not required for ‘per_unit’ pricing schemes) One or more price brackets. See [Price Bracket Rules](https://chargify.zendesk.com/hc/en-us/articles/4407755865883#general-price-bracket-rules) for an overview of how price brackets work for different pricing schemes.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidComponentPricePoint'
          description: ''
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The amount the customer will be charged per unit when the pricing scheme is “per_unit”. For On/Off Components, this is the amount that the customer will be charged when they turn the component on for the subscription. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        tax_code:
          type: string
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        price_in_cents:
          type: string
          description: deprecated May 2011 - use unit_price instead
        overage_pricing:
          allOf:
          - $ref: '#/components/schemas/OveragePricing'
          - {}
        rollover_prepaid_remainder:
          type: boolean
          description: Boolean which controls whether or not remaining units should be rolled over to the next period
        renew_prepaid_allocation:
          type: boolean
          description: Boolean which controls whether or not the allocated quantity should be renewed at the beginning of each period
        expiration_interval:
          type: number
          description: (only for prepaid usage components where rollover_prepaid_remainder is true) The number of `expiration_interval_unit`s after which rollover amounts should expire
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - {}
        display_on_hosted_page:
          type: boolean
        allow_fractional_quantities:
          type: boolean
        public_signup_page_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
    Prepayment:
      title: Prepayment
      required:
      - id
      - subscription_id
      - amount_in_cents
      - remaining_amount_in_cents
      - external
      - memo
      - created_at
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        amount_in_cents:
          type: integer
          contentEncoding: int64
        remaining_amount_in_cents:
          type: integer
          contentEncoding: int64
        refunded_amount_in_cents:
          type: integer
          contentEncoding: int64
        details:
          minLength: 1
          type: string
        external:
          type: boolean
        memo:
          minLength: 1
          type: string
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PrepaymentMethod'
          - description: The payment type of the prepayment.
        created_at:
          minLength: 1
          type: string
    PrepaymentAccountBalanceChanged:
      title: PrepaymentAccountBalanceChanged
      required:
      - reason
      - prepayment_account_balance_in_cents
      - prepayment_balance_change_in_cents
      - currency_code
      type: object
      properties:
        reason:
          type: string
        prepayment_account_balance_in_cents:
          type: integer
          contentEncoding: int64
        prepayment_balance_change_in_cents:
          type: integer
          contentEncoding: int64
        currency_code:
          type: string
    PrepaymentAggregatedError:
      title: PrepaymentAggregatedError
      type: object
      properties:
        amount_in_cents:
          type: array
          items:
            type: string
          description: ''
        base:
          type: array
          items:
            type: string
          description: ''
        external:
          type: array
          items:
            type: string
          description: ''
    PrepaymentMethod:
      title: PrepaymentMethod
      enum:
      - check
      - cash
      - money_order
      - ach
      - paypal_account
      - credit_card_on_file
      - other
      type: string
      description: :- When the `method` specified is `"credit_card_on_file"`, the prepayment amount will be collected using the default credit card payment profile and applied to the prepayment account balance. This is especially useful for manual replenishment of prepaid subscriptions.
    PrepaymentResponse:
      title: PrepaymentResponse
      required:
      - prepayment
      type: object
      properties:
        prepayment:
          allOf:
          - $ref: '#/components/schemas/Prepayment'
          - {}
    PrepaymentsResponse:
      title: PrepaymentsResponse
      type: object
      properties:
        prepayments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Prepayment'
          description: ''
    PreviewAllocationsRequest:
      title: PreviewAllocationsRequest
      required:
      - allocations
      type: object
      properties:
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/CreateAllocation'
          description: ''
        effective_proration_date:
          type: string
          description: To calculate proration amounts for a future time. Only within a current subscription period. Only ISO8601 format is supported.
          contentEncoding: date
          examples:
          - 2023-12-01
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
    Price:
      title: Price
      required:
      - starting_quantity
      - unit_price
      type: object
      properties:
        starting_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        ending_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          - {}
        unit_price:
          oneOf:
          - type: number
          - type: string
          description: The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
    PricePointType:
      title: PricePointType
      enum:
      - catalog
      - default
      - custom
      type: string
      description: >-
        Price point type. We expose the following types:

        1. **default**: a price point that is marked as a default price for a certain product.

        2. **custom**: a custom price point.

        3. **catalog**: a price point that is **not** marked as a default price for a certain product and is **not** a custom one.
    PricePoint:
      title: PricePoint
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
        use_site_exchange_rate:
          type: boolean
          description: Whether to use the site level exchange rate or define your own prices for each currency if you have multiple currencies defined on the site.
          default: true
        tax_included:
          type: boolean
          description: Whether or not the price point includes tax
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this price point, either month or day. This property is only available for sites with Multifrequency enabled.
        overage_pricing:
          allOf:
          - $ref: '#/components/schemas/OveragePricing'
          - {}
        rollover_prepaid_remainder:
          type: boolean
          description: Boolean which controls whether or not remaining units should be rolled over to the next period
        renew_prepaid_allocation:
          type: boolean
          description: Boolean which controls whether or not the allocated quantity should be renewed at the beginning of each period
        expiration_interval:
          type: number
          description: (only for prepaid usage components where rollover_prepaid_remainder is true) The number of `expiration_interval_unit`s after which rollover amounts should expire
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - {}
    PricingScheme:
      title: PricingScheme
      enum:
      - stairstep
      - volume
      - per_unit
      - tiered
      type: string
      description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
    Product:
      title: Product
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
          description: The product name
        handle:
          type:
          - string
          - 'null'
          description: The product API handle
        description:
          type:
          - string
          - 'null'
          description: The product description
        accounting_code:
          type:
          - string
          - 'null'
          description: E.g. Internal ID or SKU Number
        request_credit_card:
          type: boolean
          description: Deprecated value that can be ignored unless you have legacy hosted pages. For Public Signup Page users, please read this attribute from under the signup page.
        expiration_interval:
          type:
          - integer
          - 'null'
          description: A numerical interval for the length a subscription to this product will run before it expires. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval
          contentEncoding: int32
        expiration_interval_unit:
          oneOf:
          - $ref: '#/components/schemas/ExtendedIntervalUnit'
          - {}
          description: A string representing the trial interval unit for this product, either month or day
        created_at:
          type: string
          description: Timestamp indicating when this product was created
          contentEncoding: date-time
        updated_at:
          type: string
          description: Timestamp indicating when this product was last updated
          contentEncoding: date-time
        price_in_cents:
          type: integer
          description: The product price, in integer cents
          contentEncoding: int64
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this product would renew every 30 days
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this product, either month or day
        initial_charge_in_cents:
          type:
          - integer
          - 'null'
          description: The up front charge you have specified.
          contentEncoding: int64
        trial_price_in_cents:
          type:
          - integer
          - 'null'
          description: The price of the trial period for a subscription to this product, in integer cents.
          contentEncoding: int64
        trial_interval:
          type:
          - integer
          - 'null'
          description: A numerical interval for the length of the trial period of a subscription to this product. See the description of interval for a description of how this value is coupled with an interval unit to calculate the full interval
          contentEncoding: int32
        trial_interval_unit:
          oneOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - {}
          description: A string representing the trial interval unit for this product, either month or day
        archived_at:
          type:
          - string
          - 'null'
          description: Timestamp indicating when this product was archived
          contentEncoding: date-time
        require_credit_card:
          type: boolean
          description: Boolean that controls whether a payment profile is required to be entered for customers wishing to sign up on this product.
        return_params:
          type:
          - string
          - 'null'
        taxable:
          type: boolean
        update_return_url:
          type:
          - string
          - 'null'
          description: The url to which a customer will be returned after a successful account update
        initial_charge_after_trial:
          type: boolean
        version_number:
          type: integer
          description: The version of the product
          contentEncoding: int32
        update_return_params:
          type:
          - string
          - 'null'
          description: The parameters will append to the url after a successful account update. See [help documentation](https://help.chargify.com/products/product-editing.html#return-parameters-after-account-update)
        product_family:
          allOf:
          - $ref: '#/components/schemas/ProductFamily'
          - {}
        public_signup_pages:
          type: array
          items:
            $ref: '#/components/schemas/PublicSignupPage'
          description: ''
        product_price_point_name:
          type: string
        request_billing_address:
          type: boolean
          description: A boolean indicating whether to request a billing address on any Self-Service Pages that are used by subscribers of this product.
        require_billing_address:
          type: boolean
          description: A boolean indicating whether a billing address is required to add a payment profile, especially at signup.
        require_shipping_address:
          type: boolean
          description: A boolean indicating whether a shipping address is required for the customer, especially at signup.
        tax_code:
          type:
          - string
          - 'null'
          description: A string representing the tax code related to the product type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        default_product_price_point_id:
          type: integer
          contentEncoding: int32
        use_site_exchange_rate:
          type:
          - boolean
          - 'null'
        item_category:
          type:
          - string
          - 'null'
          description: 'One of the following: Business Software, Consumer Software, Digital Services, Physical Goods, Other'
        product_price_point_id:
          type: integer
          contentEncoding: int32
        product_price_point_handle:
          type:
          - string
          - 'null'
    ProductFamily:
      title: ProductFamily
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        handle:
          type: string
        accounting_code:
          type:
          - string
          - 'null'
        description:
          type:
          - string
          - 'null'
        created_at:
          type: string
        updated_at:
          type: string
    ProductFamilyResponse:
      title: ProductFamilyResponse
      type: object
      properties:
        product_family:
          allOf:
          - $ref: '#/components/schemas/ProductFamily'
          - {}
    ProductPricePoint:
      title: ProductPricePoint
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
          description: The product price point name
        handle:
          type: string
          description: The product price point API handle
        price_in_cents:
          type: integer
          description: The product price point price, in integer cents
          contentEncoding: int64
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this product price point would renew every 30 days
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this product price point, either month or day
        trial_price_in_cents:
          type: integer
          description: The product price point trial price, in integer cents
          contentEncoding: int64
        trial_interval:
          type: integer
          description: The numerical trial interval. i.e. an interval of ‘30’ coupled with an trial_interval_unit of day would mean this product price point would renew every 30 days
          contentEncoding: int32
        trial_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the trial interval unit for this product price point, either month or day
        trial_type:
          type: string
        introductory_offer:
          type: boolean
          description: reserved for future use
        initial_charge_in_cents:
          type: integer
          description: The product price point initial charge, in integer cents
          contentEncoding: int64
        initial_charge_after_trial:
          type: boolean
        expiration_interval:
          type: integer
          description: The numerical expiration interval. i.e. an expiration_interval of ‘30’ coupled with an expiration_interval_unit of day would mean this product price point would expire every 30 days
          contentEncoding: int32
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the expiration interval unit for this product price point, either month or day
        product_id:
          type: integer
          description: The product id this price point belongs to
          contentEncoding: int32
        archived_at:
          type:
          - string
          - 'null'
          description: Timestamp indicating when this price point was archived
          contentEncoding: date-time
        created_at:
          type: string
          description: Timestamp indicating when this price point was created
          contentEncoding: date-time
        updated_at:
          type: string
          description: Timestamp indicating when this price point was last updated
          contentEncoding: date-time
        use_site_exchange_rate:
          type: boolean
          description: Whether or not to use the site's exchange rate or define your own pricing when your site has multiple currencies defined.
        type:
          allOf:
          - $ref: '#/components/schemas/PricePointType'
          - description: The type of price point
        tax_included:
          type: boolean
          description: Whether or not the price point includes tax
        subscription_id:
          type:
          - integer
          - 'null'
          description: The subscription id this price point belongs to
          contentEncoding: int32
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyPrice'
          description: An array of currency pricing data is available when multiple currencies are defined for the site. It varies based on the use_site_exchange_rate setting for the price point. This parameter is present only in the response of read endpoints, after including the appropriate query parameter.
    ProductPricePointErrorResponse1:
      title: ProductPricePointErrorResponse1
      required:
      - errors
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/ProductPricePointErrors'
          - {}
    ProductPricePointErrors:
      title: ProductPricePointErrors
      type: object
      properties:
        price_point:
          type: string
          examples:
          - can't be blank
        interval:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 'Recurring Interval: cannot be blank.'
            - 'Recurring Interval: must be greater than or equal to 1.'
        interval_unit:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 'Interval unit: cannot be blank.'
            - "Interval unit: must be 'month' or 'day'."
        name:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 'Name: cannot be blank.'
        price:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 'Price: is not a number.'
            - 'Price: must be greater than or equal to 0.'
        price_in_cents:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 'Price in cents: cannot be blank.'
    ProductPricePointResponse:
      title: ProductPricePointResponse
      required:
      - price_point
      type: object
      properties:
        price_point:
          allOf:
          - $ref: '#/components/schemas/ProductPricePoint'
          - {}
    ProductResponse:
      title: ProductResponse
      required:
      - product
      type: object
      properties:
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          - {}
    ProformaBadRequestErrorResponse1:
      title: ProformaBadRequestErrorResponse1
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/ProformaError'
          - {}
    ProformaError:
      title: ProformaError
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/BaseStringError'
          - description: The error is base if it is not directly associated with a single attribute.
    ProformaInvoice:
      title: ProformaInvoice
      type: object
      properties:
        uid:
          type: string
        site_id:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        number:
          type: integer
          contentEncoding: int32
        sequence_number:
          type: integer
          contentEncoding: int32
        created_at:
          type: string
        delivery_date:
          type: string
        status:
          type: string
        collection_method:
          type: string
        payment_instructions:
          type: string
        currency:
          type: string
        consolidation_level:
          type: string
        product_name:
          type: string
        product_family_name:
          type: string
        role:
          type: string
        seller:
          allOf:
          - $ref: '#/components/schemas/InvoiceSeller'
          - description: Information about the seller (merchant) listed on the masthead of the invoice.
        customer:
          allOf:
          - $ref: '#/components/schemas/InvoiceCustomer'
          - description: Information about the customer who is owner or recipient the invoiced subscription.
        memo:
          type: string
        billing_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        subtotal_amount:
          type: string
        discount_amount:
          type: string
        tax_amount:
          type: string
        total_amount:
          type: string
        credit_amount:
          type: string
        paid_amount:
          type: string
        refund_amount:
          type: string
        due_amount:
          type: string
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          description: ''
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceDiscount'
          description: ''
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceTax'
          description: ''
        credits:
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceCredit'
          description: ''
        payments:
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoicePayment'
          description: ''
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
        public_url:
          type: string
    ProformaInvoiceCredit:
      title: ProformaInvoiceCredit
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        memo:
          minLength: 1
          type: string
        original_amount:
          minLength: 1
          type: string
        applied_amount:
          minLength: 1
          type: string
    ProformaInvoiceDiscount:
      title: ProformaInvoiceDiscount
      type: object
      properties:
        title:
          minLength: 1
          type: string
        source_type:
          minLength: 1
          type: string
        discount_type:
          minLength: 1
          type: string
        eligible_amount:
          minLength: 1
          type: string
        discount_amount:
          minLength: 1
          type: string
        line_item_breakouts:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceDiscountBreakout'
          description: ''
    ProformaInvoiceDiscountBreakout:
      title: ProformaInvoiceDiscountBreakout
      type: object
      properties:
        eligible_amount:
          minLength: 1
          type: string
        discount_amount:
          minLength: 1
          type: string
    ProformaInvoiceIssued:
      title: ProformaInvoiceIssued
      required:
      - uid
      - number
      - role
      - delivery_date
      - created_at
      - due_amount
      - paid_amount
      - tax_amount
      - total_amount
      - product_name
      - line_items
      type: object
      properties:
        uid:
          type: string
        number:
          type: string
        role:
          type: string
        delivery_date:
          type: string
        created_at:
          type: string
        due_amount:
          type: string
        paid_amount:
          type: string
        tax_amount:
          type: string
        total_amount:
          type: string
        product_name:
          type: string
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemEventData'
          description: ''
    ProformaInvoicePayment:
      title: ProformaInvoicePayment
      type: object
      properties:
        memo:
          minLength: 1
          type: string
        original_amount:
          minLength: 1
          type: string
        applied_amount:
          minLength: 1
          type: string
        prepayment:
          type: boolean
    ProformaInvoicePreview:
      title: ProformaInvoicePreview
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        site_id:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        number:
          type: string
        sequence_number:
          type: integer
          contentEncoding: int32
        created_at:
          minLength: 1
          type: string
        delivery_date:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        collection_method:
          minLength: 1
          type: string
        payment_instructions:
          minLength: 1
          type: string
        currency:
          minLength: 1
          type: string
        consolidation_level:
          minLength: 1
          type: string
        product_name:
          minLength: 1
          type: string
        product_family_name:
          minLength: 1
          type: string
        role:
          minLength: 1
          type: string
        seller:
          allOf:
          - $ref: '#/components/schemas/InvoiceSeller'
          - description: Information about the seller (merchant) listed on the masthead of the invoice.
        customer:
          allOf:
          - $ref: '#/components/schemas/InvoiceCustomer'
          - description: Information about the customer who is owner or recipient the invoiced subscription.
        memo:
          minLength: 1
          type: string
        billing_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        subtotal_amount:
          minLength: 1
          type: string
        discount_amount:
          minLength: 1
          type: string
        tax_amount:
          minLength: 1
          type: string
        total_amount:
          minLength: 1
          type: string
        credit_amount:
          minLength: 1
          type: string
        paid_amount:
          minLength: 1
          type: string
        refund_amount:
          minLength: 1
          type: string
        due_amount:
          minLength: 1
          type: string
        line_items:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          description: ''
        discounts:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceDiscount'
          description: ''
        taxes:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceTax'
          description: ''
        credits:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceCredit'
          description: ''
        payments:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoicePayment'
          description: ''
        custom_fields:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCustomField'
          description: ''
        public_url:
          type: string
    ProformaInvoiceTax:
      title: ProformaInvoiceTax
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        source_type:
          minLength: 1
          type: string
        percentage:
          minLength: 1
          type: string
        taxable_amount:
          minLength: 1
          type: string
        tax_amount:
          minLength: 1
          type: string
        line_item_breakouts:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProformaInvoiceTaxBreakout'
          description: ''
    ProformaInvoiceTaxBreakout:
      title: ProformaInvoiceTaxBreakout
      type: object
      properties:
        taxable_amount:
          minLength: 1
          type: string
        tax_amount:
          minLength: 1
          type: string
    Proration:
      title: Proration
      type: object
      properties:
        preserve_period:
          type: boolean
          description: The alternative to sending preserve_period as a direct attribute to migration
    PublicKey:
      title: PublicKey
      type: object
      properties:
        public_key:
          type: string
        requires_security_token:
          type: boolean
        created_at:
          type: string
    PublicSignupPage:
      title: PublicSignupPage
      type: object
      properties:
        id:
          type: integer
          description: The id of the signup page (public_signup_pages only)
          contentEncoding: int32
        return_url:
          type:
          - string
          - 'null'
          description: The url to which a customer will be returned after a successful signup (public_signup_pages only)
        return_params:
          type:
          - string
          - 'null'
          description: The params to be appended to the return_url (public_signup_pages only)
        url:
          type: string
          description: The url where the signup page can be viewed (public_signup_pages only)
    QuantityBasedComponent:
      title: QuantityBasedComponent
      required:
      - name
      - unit_name
      - pricing_scheme
      type: object
      properties:
        name:
          type: string
          description: A name for this component that is suitable for showing customers and displaying on billing statements, ie. "Minutes".
        unit_name:
          type: string
          description: The name of the unit of measurement for the component. It should be singular since it will be automatically pluralized when necessary. i.e. “message”, which may then be shown as “5 messages” on a subscription’s component line-item
        description:
          type: string
          description: A description for the component that will be displayed to the user on the hosted signup page.
        handle:
          pattern: ^[a-z0-9][a-z0-9\-_:.]*$
          type: string
          description: A unique identifier for your use that can be used to retrieve this component is subsequent requests.  Must start with a letter or number and may only contain lowercase letters, numbers, or the characters '.', ':', '-', or '_'.
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: (Not required for ‘per_unit’ pricing schemes) One or more price brackets. See [Price Bracket Rules](https://chargify.zendesk.com/hc/en-us/articles/4407755865883#price-bracket-rules) for an overview of how price brackets work for different pricing schemes.
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        price_points:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPricePointItem'
          description: ''
        unit_price:
          oneOf:
          - type: string
          - type: number
          description: The amount the customer will be charged per unit when the pricing scheme is “per_unit”. For On/Off Components, this is the amount that the customer will be charged when they turn the component on for the subscription. The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        tax_code:
          type: string
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        hide_date_range_on_invoice:
          type: boolean
          description: (Only available on Relationship Invoicing sites) Boolean flag describing if the service date range should show for the component on generated invoices.
        price_in_cents:
          type: string
          description: deprecated May 2011 - use unit_price instead
        recurring:
          type: boolean
        display_on_hosted_page:
          type: boolean
        allow_fractional_quantities:
          type: boolean
        public_signup_page_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component's default price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component's default price point, either month or day. This property is only available for sites with Multifrequency enabled.
    ReactivateSubscriptionGroupRequest:
      title: ReactivateSubscriptionGroupRequest
      type: object
      properties:
        resume:
          type: boolean
        resume_members:
          type: boolean
    ReactivateSubscriptionGroupResponse:
      title: ReactivateSubscriptionGroupResponse
      type: object
      properties:
        uid:
          type: string
        scheme:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          contentEncoding: int32
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        primary_subscription_id:
          type: integer
          contentEncoding: int32
        next_assessment_at:
          type: string
        state:
          type: string
        cancel_at_end_of_period:
          type: boolean
    ReactivateSubscriptionRequest:
      title: ReactivateSubscriptionRequest
      type: object
      properties:
        calendar_billing:
          allOf:
          - $ref: '#/components/schemas/ReactivationBilling'
          - description: These values are only applicable to subscriptions using calendar billing
        include_trial:
          type: boolean
          description: If `true` is sent, the reactivated Subscription will include a trial if one is available. If `false` is sent, the trial period will be ignored.
        preserve_balance:
          type: boolean
          description: If `true` is passed, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.
        coupon_code:
          type: string
          description: The coupon code to be applied during reactivation.
        use_credits_and_prepayments:
          type: boolean
          description: If true is sent, Chargify will use service credits and prepayments upon reactivation. If false is sent, the service credits and prepayments will be ignored.
        resume:
          oneOf:
          - type: boolean
          - $ref: '#/components/schemas/ResumeOptions'
          description: "If `true`, Chargify will attempt to resume the subscription's billing period. if not resumable, the subscription will be reactivated with a new billing period. If `false`: Chargify will only attempt to reactivate the subscription."
    ReactivationBilling:
      title: ReactivationBilling
      type: object
      properties:
        reactivation_charge:
          allOf:
          - $ref: '#/components/schemas/ReactivationCharge'
          - description: 'You may choose how to handle the reactivation charge for that subscription: 1) `prorated` A prorated charge for the product price will be attempted for to complete the period 2) `immediate` A full-price charge for the product price will be attempted immediately 3) `delayed` A full-price charge for the product price will be attempted at the next renewal'
      description: These values are only applicable to subscriptions using calendar billing
    ReactivationCharge:
      title: ReactivationCharge
      enum:
      - prorated
      - immediate
      - delayed
      type: string
      description: 'You may choose how to handle the reactivation charge for that subscription: 1) `prorated` A prorated charge for the product price will be attempted for to complete the period 2) `immediate` A full-price charge for the product price will be attempted immediately 3) `delayed` A full-price charge for the product price will be attempted at the next renewal'
    ReasonCode:
      title: ReasonCode
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        site_id:
          type: integer
          contentEncoding: int32
        code:
          type: string
        description:
          type: string
        position:
          type: integer
          contentEncoding: int32
        created_at:
          type: string
        updated_at:
          type: string
    ReasonCodeResponse:
      title: ReasonCodeResponse
      required:
      - reason_code
      type: object
      properties:
        reason_code:
          allOf:
          - $ref: '#/components/schemas/ReasonCode'
          - {}
    ReasonCodesJsonResponse:
      title: ReasonCodesJsonResponse
      type: object
      properties:
        ok:
          type: string
    RecordPaymentRequest:
      title: RecordPaymentRequest
      required:
      - payment
      type: object
      properties:
        payment:
          allOf:
          - $ref: '#/components/schemas/CreatePayment'
          - {}
    RecurringScheme:
      title: RecurringScheme
      enum:
      - do_not_recur
      - recur_indefinitely
      - recur_with_duration
      type: string
    ReferralCode:
      title: ReferralCode
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        site_id:
          type: integer
          contentEncoding: int32
        subscription_id:
          type: integer
          contentEncoding: int32
        code:
          type: string
    ReferralValidationResponse:
      title: ReferralValidationResponse
      type: object
      properties:
        referral_code:
          allOf:
          - $ref: '#/components/schemas/ReferralCode'
          - {}
    Refund:
      title: Refund
      type: object
      properties:
        amount:
          type: string
          description: 'The amount to be refunded in decimal format as a string. Example: "10.50". Must not exceed the remaining refundable balance of the payment.'
        memo:
          type: string
          description: A description that will be attached to the refund
        payment_id:
          type: integer
          description: The ID of the payment to be refunded
          contentEncoding: int32
        external:
          type: boolean
          description: Flag that marks refund as external (no money is returned to the customer). Defaults to `false`.
        apply_credit:
          type: boolean
          description: If set to true, creates credit and applies it to an invoice. Defaults to `false`.
        void_invoice:
          type: boolean
          description: If `apply_credit` set to false and refunding full amount, if `void_invoice` set to true, invoice will be voided after refund. Defaults to `false`.
        segment_uids:
          oneOf:
          - type: array
            items:
              type: string
          - type: string
          description: An array of segment uids to refund or the string 'all' to indicate that all segments should be refunded
    RefundConsolidatedInvoice:
      title: RefundConsolidatedInvoice
      required:
      - memo
      - payment_id
      - segment_uids
      type: object
      properties:
        memo:
          type: string
          description: A description for the refund
        payment_id:
          type: integer
          description: The ID of the payment to be refunded
          contentEncoding: int32
        segment_uids:
          oneOf:
          - type: array
            items:
              type: string
          - type: string
          description: An array of segment uids to refund or the string 'all' to indicate that all segments should be refunded
        external:
          type: boolean
          description: Flag that marks refund as external (no money is returned to the customer). Defaults to `false`.
        apply_credit:
          type: boolean
          description: If set to true, creates credit and applies it to an invoice. Defaults to `false`.
        amount:
          type: string
          description: 'The amount of payment to be refunded in decimal format. Example: "10.50". This will default to the full amount of the payment if not provided.'
      description: Refund consolidated invoice
    RefundInvoice:
      title: RefundInvoice
      required:
      - amount
      - memo
      - payment_id
      type: object
      properties:
        amount:
          type: string
          description: 'The amount to be refunded in decimal format as a string. Example: "10.50". Must not exceed the remaining refundable balance of the payment.'
        memo:
          type: string
          description: A description that will be attached to the refund
        payment_id:
          type: integer
          description: The ID of the payment to be refunded
          contentEncoding: int32
        external:
          type: boolean
          description: Flag that marks refund as external (no money is returned to the customer). Defaults to `false`.
        apply_credit:
          type: boolean
          description: If set to true, creates credit and applies it to an invoice. Defaults to `false`.
        void_invoice:
          type: boolean
          description: If `apply_credit` set to false and refunding full amount, if `void_invoice` set to true, invoice will be voided after refund. Defaults to `false`.
      description: Refund an invoice or a segment of a consolidated invoice.
    RefundInvoiceEventData:
      title: RefundInvoiceEventData
      required:
      - apply_credit
      - credit_note_attributes
      - payment_id
      - refund_amount
      - refund_id
      - transaction_time
      type: object
      properties:
        apply_credit:
          type: boolean
          description: If true, credit was created and applied it to the invoice.
        consolidation_level:
          allOf:
          - $ref: '#/components/schemas/InvoiceConsolidationLevel'
          - description: >-
              Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:


              * "none": A normal invoice with no consolidation.

              * "child": An invoice segment which has been combined into a consolidated invoice.

              * "parent": A consolidated invoice, whose contents are composed of invoice segments.


              "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.


              See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
        credit_note_attributes:
          allOf:
          - $ref: '#/components/schemas/CreditNote'
          - {}
        memo:
          type: string
          description: The refund memo.
        original_amount:
          type: string
          description: The full, original amount of the refund.
        payment_id:
          type: integer
          description: The ID of the payment transaction to be refunded.
          contentEncoding: int32
        refund_amount:
          type: string
          description: The amount of the refund.
        refund_id:
          type: integer
          description: The ID of the refund transaction.
          contentEncoding: int32
        transaction_time:
          type: string
          description: The time the refund was applied, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
      description: Example schema for an `refund_invoice` event
    RefundInvoiceRequest:
      title: RefundInvoiceRequest
      required:
      - refund
      type: object
      properties:
        refund:
          anyOf:
          - $ref: '#/components/schemas/RefundInvoice'
          - $ref: '#/components/schemas/RefundConsolidatedInvoice'
    RefundPrepayment:
      title: RefundPrepayment
      required:
      - amount_in_cents
      - amount
      - memo
      type: object
      properties:
        amount_in_cents:
          type: integer
          description: '`amount` is not required if you pass `amount_in_cents`.'
          contentEncoding: int64
        amount:
          oneOf:
          - type: string
          - type: number
          description: '`amount_in_cents` is not required if you pass `amount`.'
        memo:
          minLength: 1
          type: string
        external:
          type: boolean
          description: Specify the type of refund you wish to initiate. When the prepayment is external, the `external` flag is optional. But if the prepayment was made through a payment profile, the `external` flag is required.
    RefundPrepaymentAggregatedError:
      title: RefundPrepaymentAggregatedError
      type: object
      properties:
        refund:
          allOf:
          - $ref: '#/components/schemas/PrepaymentAggregatedError'
          - {}
    RefundPrepaymentAggregatedErrorsResponse1:
      title: RefundPrepaymentAggregatedErrorsResponse1
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/RefundPrepaymentAggregatedError'
          - {}
      description: Errors returned on creating a refund prepayment, grouped by field, as arrays of strings.
    RefundPrepaymentBaseErrorsResponse1:
      title: RefundPrepaymentBaseErrorsResponse1
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/RefundPrepaymentBaseRefundError'
          - {}
      description: Errors returned on creating a refund prepayment when bad request
    RefundPrepaymentBaseRefundError:
      title: RefundPrepaymentBaseRefundError
      type: object
      properties:
        refund:
          allOf:
          - $ref: '#/components/schemas/BaseRefundError'
          - {}
    RefundPrepaymentRequest:
      title: RefundPrepaymentRequest
      required:
      - refund
      type: object
      properties:
        refund:
          allOf:
          - $ref: '#/components/schemas/RefundPrepayment'
          - {}
    RefundSuccess:
      title: RefundSuccess
      required:
      - refund_id
      - gateway_transaction_id
      - product_id
      type: object
      properties:
        refund_id:
          type: integer
          contentEncoding: int32
        gateway_transaction_id:
          type: integer
          contentEncoding: int32
        product_id:
          type: integer
          contentEncoding: int32
    RemovePaymentEventData:
      title: RemovePaymentEventData
      required:
      - transaction_id
      - memo
      - applied_amount
      - transaction_time
      - payment_method
      - prepayment
      type: object
      properties:
        transaction_id:
          type: integer
          description: Transaction ID of the original payment that was removed
          contentEncoding: int32
        memo:
          type: string
          description: Memo of the original payment
        original_amount:
          type: string
          description: Full amount of the original payment
        applied_amount:
          type: string
          description: Applied amount of the original payment
        transaction_time:
          type: string
          description: Transaction time of the original payment, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
        payment_method:
          allOf:
          - $ref: '#/components/schemas/InvoiceEventPayment2'
          - description: A nested data structure detailing the method of payment
        prepayment:
          type: boolean
          description: The flag that shows whether the original payment was a prepayment or not
      description: Example schema for an `remove_payment` event
    RenewalPreview:
      title: RenewalPreview
      type: object
      properties:
        next_assessment_at:
          type: string
          description: The timestamp for the subscription’s next renewal
        subtotal_in_cents:
          type: integer
          description: An integer representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal
          contentEncoding: int64
        total_tax_in_cents:
          type: integer
          description: An integer representing the total tax charges that will be assessed at the next renewal
          contentEncoding: int64
        total_discount_in_cents:
          type: integer
          description: An integer representing the amount of the coupon discounts that will be applied to the next renewal
          contentEncoding: int64
        total_in_cents:
          type: integer
          description: An integer representing the total amount owed, less any discounts, that will be assessed at the next renewal
          contentEncoding: int64
        existing_balance_in_cents:
          type: integer
          description: An integer representing the amount of the subscription’s current balance
          contentEncoding: int64
        total_amount_due_in_cents:
          type: integer
          description: An integer representing the existing_balance_in_cents plus the total_in_cents
          contentEncoding: int64
        uncalculated_taxes:
          type: boolean
          description: A boolean indicating whether or not additional taxes will be calculated at the time of renewal. This will be true if you are using Avalara and the address of the subscription is in one of your defined taxable regions.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/RenewalPreviewLineItem'
          description: An array of objects representing the individual transactions that will be created at the next renewal
    RenewalPreviewComponent:
      title: RenewalPreviewComponent
      type: object
      properties:
        component_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Either the component's Chargify id or its handle prefixed with `handle:`
        quantity:
          type: integer
          description: >-
            The quantity for which you wish to preview billing. This is useful if you want to preview a predicted, higher usage value than is currently present on the subscription.


            This quantity represents:


            - Whether or not an on/off component is enabled - use 0 for disabled or 1 for enabled

            - The desired allocated_quantity for a quantity-based component

            - The desired unit_balance for a metered component

            - The desired metric quantity for an events-based component
          contentEncoding: int32
        price_point_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Either the component price point's Chargify id or its handle prefixed with `handle:`
    RenewalPreviewLineItem:
      title: RenewalPreviewLineItem
      type: object
      properties:
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/LineItemTransactionType'
          - description: A handle for the line item transaction type
        kind:
          allOf:
          - $ref: '#/components/schemas/LineItemKind'
          - description: A handle for the line item kind
        amount_in_cents:
          type: integer
          contentEncoding: int64
        memo:
          type: string
        discount_amount_in_cents:
          type: integer
          contentEncoding: int64
        taxable_amount_in_cents:
          type: integer
          contentEncoding: int64
        product_id:
          type: integer
          contentEncoding: int32
        product_name:
          type: string
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        component_name:
          type: string
        product_handle:
          type: string
        period_range_start:
          type: string
        period_range_end:
          type: string
    RenewalPreviewRequest:
      title: RenewalPreviewRequest
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/RenewalPreviewComponent'
          description: An optional array of component definitions to preview. Providing any component definitions here will override the actual components on the subscription (and their quantities), and the billing preview will contain only these components (in addition to any product base fees).
    RenewalPreviewResponse:
      title: RenewalPreviewResponse
      required:
      - renewal_preview
      type: object
      properties:
        renewal_preview:
          allOf:
          - $ref: '#/components/schemas/RenewalPreview'
          - {}
    ReplayWebhooksRequest:
      title: ReplayWebhooksRequest
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
    ReplayWebhooksResponse:
      title: ReplayWebhooksResponse
      type: object
      properties:
        status:
          type: string
    ResentInvitation:
      title: ResentInvitation
      type: object
      properties:
        last_sent_at:
          type: string
        last_accepted_at:
          type: string
        send_invite_link_text:
          type: string
        uninvited_count:
          type: integer
          contentEncoding: int32
    ResourceType:
      title: ResourceType
      enum:
      - subscriptions
      - customers
      type: string
    RestrictionType:
      title: RestrictionType
      enum:
      - Component
      - Product
      type: string
    ResumeOptions:
      title: ResumeOptions
      type: object
      properties:
        require_resume:
          type: boolean
          description: Chargify will only attempt to resume the subscription's billing period. If not resumable, the subscription will be left in it's current state.
        forgive_balance:
          type: boolean
          description: Indicates whether or not Chargify should clear the subscription's existing balance before attempting to resume the subscription. If subscription cannot be resumed, the balance will remain as it was before the attempt to resume was made.
    ResumptionCharge:
      title: ResumptionCharge
      enum:
      - prorated
      - immediate
      - delayed
      type: string
      description: (For calendar billing subscriptions only) The way that the resumed subscription's charge should be handled
    RevokedInvitation:
      title: RevokedInvitation
      type: object
      properties:
        last_sent_at:
          type: string
        last_accepted_at:
          type: string
        uninvited_count:
          type: integer
          contentEncoding: int32
    SaleRep:
      title: SaleRep
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        full_name:
          type: string
        subscriptions_count:
          type: integer
          contentEncoding: int32
        test_mode:
          type: boolean
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SaleRepSubscription'
          description: ''
    SaleRepItemMrr:
      title: SaleRepItemMrr
      type: object
      properties:
        mrr:
          type: string
        usage:
          type: string
        recurring:
          type: string
    SaleRepSettings:
      title: SaleRepSettings
      type: object
      properties:
        customer_name:
          type: string
        subscription_id:
          type: integer
          contentEncoding: int32
        site_link:
          type: string
        site_name:
          type: string
        subscription_mrr:
          type: string
        sales_rep_id:
          type: integer
          contentEncoding: int32
        sales_rep_name:
          type: string
    SaleRepSubscription:
      title: SaleRepSubscription
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        site_name:
          type: string
        subscription_url:
          type: string
        customer_name:
          type: string
        created_at:
          type: string
        mrr:
          type: string
        usage:
          type: string
        recurring:
          type: string
        last_payment:
          type: string
        churn_date:
          type:
          - string
          - 'null'
    Segment:
      title: Segment
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        price_point_id:
          type: integer
          contentEncoding: int32
        event_based_billing_metric_id:
          type: integer
          contentEncoding: int32
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        segment_property_1_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
        segment_property_2_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
        segment_property_3_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
        segment_property_4_value:
          oneOf:
          - type: string
          - type: number
          - type: integer
            contentEncoding: int32
          - type: boolean
        created_at:
          type: string
        updated_at:
          type: string
        prices:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SegmentPrice'
          description: ''
    SegmentPrice:
      title: SegmentPrice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        starting_quantity:
          type: integer
          contentEncoding: int32
        ending_quantity:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        unit_price:
          type: string
        price_point_id:
          type: integer
          contentEncoding: int32
        formatted_unit_price:
          type: string
        segment_id:
          type: integer
          contentEncoding: int32
    SegmentResponse:
      title: SegmentResponse
      type: object
      properties:
        segment:
          allOf:
          - $ref: '#/components/schemas/Segment'
          - {}
    Seller:
      title: Seller
      type: object
      properties:
        name:
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/InvoiceAddress'
          - {}
        phone:
          type: string
        logo_url:
          type:
          - string
          - 'null'
    SendInvoiceRequest:
      title: SendInvoiceRequest
      type: object
      properties:
        recipient_emails:
          maxItems: 5
          type: array
          items:
            type: string
          description: ''
        cc_recipient_emails:
          maxItems: 5
          type: array
          items:
            type: string
          description: ''
        bcc_recipient_emails:
          maxItems: 5
          type: array
          items:
            type: string
          description: ''
    ServiceCredit:
      title: ServiceCredit
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        amount_in_cents:
          type: integer
          description: The amount in cents of the entry
          contentEncoding: int64
        ending_balance_in_cents:
          type: integer
          description: The new balance for the credit account
          contentEncoding: int64
        entry_type:
          allOf:
          - $ref: '#/components/schemas/ServiceCreditType'
          - description: The type of entry
        memo:
          type: string
          description: The memo attached to the entry
    ServiceCreditResponse:
      title: ServiceCreditResponse
      required:
      - service_credit
      type: object
      properties:
        service_credit:
          allOf:
          - $ref: '#/components/schemas/ServiceCredit'
          - {}
    ServiceCreditType:
      title: ServiceCreditType
      enum:
      - Credit
      - Debit
      type: string
      description: The type of entry
    ShippingAddress:
      title: ShippingAddress
      type: object
      properties:
        street:
          type:
          - string
          - 'null'
        line2:
          type:
          - string
          - 'null'
        city:
          type:
          - string
          - 'null'
        state:
          type:
          - string
          - 'null'
        zip:
          type:
          - string
          - 'null'
        country:
          type:
          - string
          - 'null'
    SignupProformaPreview:
      title: SignupProformaPreview
      type: object
      properties:
        current_proforma_invoice:
          allOf:
          - $ref: '#/components/schemas/ProformaInvoice'
          - {}
        next_proforma_invoice:
          allOf:
          - $ref: '#/components/schemas/ProformaInvoice'
          - {}
    SignupProformaPreviewResponse:
      title: SignupProformaPreviewResponse
      required:
      - proforma_invoice_preview
      type: object
      properties:
        proforma_invoice_preview:
          allOf:
          - $ref: '#/components/schemas/SignupProformaPreview'
          - {}
    SingleErrorResponse1:
      title: SingleErrorResponse1
      required:
      - error
      type: object
      properties:
        error:
          type: string
    SingleStringErrorResponse1:
      title: SingleStringErrorResponse1
      type: object
      properties:
        errors:
          type: string
    Site:
      title: Site
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        subdomain:
          type: string
        currency:
          type: string
        seller_id:
          type: integer
          contentEncoding: int32
        non_primary_currencies:
          type: array
          items:
            type: string
          description: ''
        relationship_invoicing_enabled:
          type: boolean
        customer_hierarchy_enabled:
          type: boolean
        whopays_enabled:
          type: boolean
        whopays_default_payer:
          type: string
        allocation_settings:
          allOf:
          - $ref: '#/components/schemas/AllocationSettings'
          - {}
        default_payment_collection_method:
          type: string
        organization_address:
          allOf:
          - $ref: '#/components/schemas/OrganizationAddress'
          - {}
        tax_configuration:
          allOf:
          - $ref: '#/components/schemas/TaxConfiguration'
          - {}
        net_terms:
          allOf:
          - $ref: '#/components/schemas/NetTerms'
          - {}
        test:
          type: boolean
    SiteResponse:
      title: SiteResponse
      required:
      - site
      type: object
      properties:
        site:
          allOf:
          - $ref: '#/components/schemas/Site'
          - {}
    SiteStatistics:
      title: SiteStatistics
      type: object
      properties:
        total_subscriptions:
          type: integer
          contentEncoding: int32
        subscriptions_today:
          type: integer
          contentEncoding: int32
        total_revenue:
          type: string
        revenue_today:
          type: string
        revenue_this_month:
          type: string
        revenue_this_year:
          type: string
        total_canceled_subscriptions:
          type: integer
          contentEncoding: int32
        total_active_subscriptions:
          type: number
        total_past_due_subscriptions:
          type: number
        total_unpaid_subscriptions:
          type: number
        total_dunning_subscriptions:
          type: number
    SiteSummary:
      title: SiteSummary
      type: object
      properties:
        seller_name:
          type: string
        site_name:
          type: string
        site_id:
          type: integer
          contentEncoding: int32
        site_currency:
          type: string
        stats:
          allOf:
          - $ref: '#/components/schemas/SiteStatistics'
          - {}
    SnapDay:
      title: SnapDay
      const: end
      type: string
      description: Use for subscriptions with product eligible for calendar billing only. Value can be 1-28 or 'end'.
    Sortingdirection:
      title: Sortingdirection
      enum:
      - asc
      - desc
      type: string
      description: Used for sorting results.
    Subscription:
      title: Subscription
      type: object
      properties:
        id:
          type: integer
          description: The subscription unique id within Chargify.
          contentEncoding: int32
        state:
          allOf:
          - $ref: '#/components/schemas/SubscriptionState'
          - description: >-
              The state of a subscription.

              * **Live States**
                  * `active` - A normal, active subscription. It is not in a trial and is paid and up to date.
                  * `assessing` - An internal (transient) state that indicates a subscription is in the middle of periodic assessment. Do not base any access decisions in your app on this state, as it may not always be exposed.
                  * `pending` - An internal (transient) state that indicates a subscription is in the creation process. Do not base any access decisions in your app on this state, as it may not always be exposed.
                  * `trialing` - A subscription in trialing state has a valid trial subscription. This type of subscription may transition to active once payment is received when the trial has ended. Otherwise, it may go to a Problem or End of Life state.
                  * `paused` - An internal state that indicates that your account with Advanced Billing is in arrears.
              * **Problem States**
                  * `past_due` - Indicates that the most recent payment has failed, and payment is past due for this subscription. If you have enabled our automated dunning, this subscription will be in the dunning process (additional status and callbacks from the dunning process will be available in the future). If you are handling dunning and payment updates yourself, you will want to use this state to initiate a payment update from your customers.
                  * `soft_failure` - Indicates that normal assessment/processing of the subscription has failed for a reason that cannot be fixed by the Customer. For example, a Soft Fail may result from a timeout at the gateway or incorrect credentials on your part. The subscriptions should be retried automatically. An interface is being built for you to review problems resulting from these events to take manual action when needed.
                  * `unpaid` - Indicates an unpaid subscription. A subscription is marked unpaid if the retry period expires and you have configured your [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) settings to have a Final Action of `mark the subscription unpaid`.
              * **End of Life States**
                  * `canceled` - Indicates a canceled subscription. This may happen at your request (via the API or the web interface) or due to the expiration of the [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) process without payment. See the [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404559291021) documentation for info on how to restart a canceled subscription.
                  While a subscription is canceled, its period will not advance, it will not accrue any new charges, and Advanced Billing will not attempt to collect the overdue balance.
                  * `expired` - Indicates a subscription that has expired due to running its normal life cycle. Some products may be configured to have an expiration period. An expired subscription then is one that stayed active until it fulfilled its full period.
                  * `failed_to_create` - Indicates that signup has failed. (You may see this state in a signup_failure webhook.)
                  * `on_hold` - Indicates that a subscription’s billing has been temporarily stopped. While it is expected that the subscription will resume and return to active status, this is still treated as an “End of Life” state because the customer is not paying for services during this time.
                  * `suspended` - Indicates that a prepaid subscription has used up all their prepayment balance. If a prepayment is applied, it will return to an active state.
                  * `trial_ended` - A subscription in a trial_ended state is a subscription that completed a no-obligation trial and did not have a card on file at the expiration of the trial period. See [Product Pricing – No Obligation Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221) for more details.

              See [Subscription States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773) for more info about subscription states and state transitions.
        balance_in_cents:
          type: integer
          description: Gives the current outstanding subscription balance in the number of cents.
          contentEncoding: int64
        total_revenue_in_cents:
          type: integer
          description: Gives the total revenue from the subscription in the number of cents.
          contentEncoding: int64
        product_price_in_cents:
          type: integer
          description: '(Added Nov 5 2013) The recurring amount of the product (and version),currently subscribed. NOTE: this may differ from the current price of,the product, if you’ve changed the price of the product but haven’t,moved this subscription to a newer version.'
          contentEncoding: int64
        product_version_number:
          type: integer
          description: The version of the product for the subscription. Note that this is a deprecated field kept for backwards-compatibility.
          contentEncoding: int32
        current_period_ends_at:
          type: string
          description: Timestamp relating to the end of the current (recurring) period (i.e.,when the next regularly scheduled attempted charge will occur)
          contentEncoding: date-time
        next_assessment_at:
          type: string
          description: Timestamp that indicates when capture of payment will be tried or,retried. This value will usually track the current_period_ends_at, but,will diverge if a renewal payment fails and must be retried. In that,case, the current_period_ends_at will advance to the end of the next,period (time doesn’t stop because a payment was missed) but the,next_assessment_at will be scheduled for the auto-retry time (i.e. 24,hours in the future, in some cases)
          contentEncoding: date-time
        trial_started_at:
          type:
          - string
          - 'null'
          description: Timestamp for when the trial period (if any) began
          contentEncoding: date-time
        trial_ended_at:
          type:
          - string
          - 'null'
          description: Timestamp for when the trial period (if any) ended
          contentEncoding: date-time
        activated_at:
          type: string
          description: Timestamp for when the subscription began (i.e. when it came out of trial, or when it began in the case of no trial)
          contentEncoding: date-time
        expires_at:
          type:
          - string
          - 'null'
          description: Timestamp giving the expiration date of this subscription (if any)
          contentEncoding: date-time
        created_at:
          type: string
          description: The creation date for this subscription
          contentEncoding: date-time
        updated_at:
          type: string
          description: The date of last update for this subscription
          contentEncoding: date-time
        cancellation_message:
          type:
          - string
          - 'null'
          description: Seller-provided reason for, or note about, the cancellation.
        cancellation_method:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CancellationMethod'
          - description: The process used to cancel the subscription, if the subscription has been canceled. It is nil if the subscription's state is not canceled.
        cancel_at_end_of_period:
          type:
          - boolean
          - 'null'
          description: Whether or not the subscription will (or has) canceled at the end of the period.
        canceled_at:
          type:
          - string
          - 'null'
          description: The timestamp of the most recent cancellation
          contentEncoding: date-time
        current_period_started_at:
          type: string
          description: Timestamp relating to the start of the current (recurring) period
          contentEncoding: date-time
        previous_state:
          allOf:
          - $ref: '#/components/schemas/SubscriptionState'
          - description: Only valid for webhook payloads The previous state for webhooks that have indicated a change in state. For normal API calls, this will always be the same as the state (current state)
        signup_payment_id:
          type: integer
          description: The ID of the transaction that generated the revenue
          contentEncoding: int32
        signup_revenue:
          type: string
          description: The revenue, formatted as a string of decimal separated dollars and,cents, from the subscription signup ($50.00 would be formatted as,50.00)
        delayed_cancel_at:
          type:
          - string
          - 'null'
          description: Timestamp for when the subscription is currently set to cancel.
          contentEncoding: date-time
        coupon_code:
          type:
          - string
          - 'null'
          description: (deprecated) The coupon code of the single coupon currently applied to the subscription. See coupon_codes instead as subscriptions can now have more than one coupon.
          deprecated: true
        snap_day:
          type:
          - string
          - 'null'
          description: The day of the month that the subscription will charge according to calendar billing rules, if used.
        payment_collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer1'
          - {}
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          - {}
        credit_card:
          allOf:
          - $ref: '#/components/schemas/CreditCardPaymentProfile'
          - examples:
            - id: 10088716
              first_name: Test
              last_name: Subscription
              masked_card_number: XXXX-XXXX-XXXX-1
              card_type: bogus
              expiration_month: 1
              expiration_year: 2022
              customer_id: 14543792
              current_vault: bogus
              vault_token: '1'
              billing_address: 123 Montana Way
              billing_city: Billings
              billing_state: MT
              billing_zip: '59101'
              billing_country: US
              customer_vault_token: null
              billing_address_2: ''
              payment_type: credit_card
              site_gateway_setting_id: 1
              gateway_handle: null
        group:
          oneOf:
          - $ref: '#/components/schemas/NestedSubscriptionGroup'
          - {}
        bank_account:
          allOf:
          - $ref: '#/components/schemas/BankAccountPaymentProfile'
          - {}
        payment_type:
          type:
          - string
          - 'null'
          description: The payment profile type for the active profile on file.
        referral_code:
          type:
          - string
          - 'null'
          description: The subscription's unique code that can be given to referrals.
        next_product_id:
          type:
          - integer
          - 'null'
          description: If a delayed product change is scheduled, the ID of the product that the subscription will be changed to at the next renewal.
          contentEncoding: int32
        next_product_handle:
          type:
          - string
          - 'null'
          description: If a delayed product change is scheduled, the handle of the product that the subscription will be changed to at the next renewal.
        coupon_use_count:
          type:
          - integer
          - 'null'
          description: (deprecated) How many times the subscription's single coupon has been used. This field has no replacement for multiple coupons.
          contentEncoding: int32
          deprecated: true
        coupon_uses_allowed:
          type:
          - integer
          - 'null'
          description: (deprecated) How many times the subscription's single coupon may be used. This field has no replacement for multiple coupons.
          contentEncoding: int32
          deprecated: true
        reason_code:
          type:
          - string
          - 'null'
          description: If the subscription is canceled, this is their churn code.
        automatically_resume_at:
          type:
          - string
          - 'null'
          description: The date the subscription is scheduled to automatically resume from the on_hold state.
          contentEncoding: date-time
        coupon_codes:
          type: array
          items:
            type: string
          description: An array for all the coupons attached to the subscription.
        offer_id:
          type:
          - integer
          - 'null'
          description: The ID of the offer associated with the subscription.
          contentEncoding: int32
        payer_id:
          type:
          - integer
          - 'null'
          description: On Relationship Invoicing, the ID of the individual paying for the subscription. Defaults to the Customer ID unless the 'Customer Hierarchies & WhoPays' feature is enabled.
          contentEncoding: int32
        current_billing_amount_in_cents:
          type: integer
          description: The balance in cents plus the estimated renewal amount in cents.
          contentEncoding: int64
        product_price_point_id:
          type: integer
          description: The product price point currently subscribed to.
          contentEncoding: int32
        product_price_point_type:
          allOf:
          - $ref: '#/components/schemas/PricePointType'
          - description: >-
              Price point type. We expose the following types:

              1. **default**: a price point that is marked as a default price for a certain product.

              2. **custom**: a custom price point.

              3. **catalog**: a price point that is **not** marked as a default price for a certain product and is **not** a custom one.
        next_product_price_point_id:
          type:
          - integer
          - 'null'
          description: If a delayed product change is scheduled, the ID of the product price point that the subscription will be changed to at the next renewal.
          contentEncoding: int32
        net_terms:
          type:
          - integer
          - 'null'
          description: On Relationship Invoicing, the number of days before a renewal invoice is due.
          contentEncoding: int32
        stored_credential_transaction_id:
          type:
          - integer
          - 'null'
          description: For European sites subject to PSD2 and using 3D Secure, this can be used to reference a previous transaction for the customer. This will ensure the card will be charged successfully at renewal.
          contentEncoding: int32
        reference:
          type:
          - string
          - 'null'
          description: The reference value (provided by your app) for the subscription itelf.
        on_hold_at:
          type:
          - string
          - 'null'
          description: The timestamp of the most recent on hold action.
          contentEncoding: date-time
        prepaid_dunning:
          type: boolean
          description: Boolean representing whether the subscription is prepaid and currently in dunning. Only returned for Relationship Invoicing sites with the feature enabled
        coupons:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionIncludedCoupon'
          description: >-
            Additional coupon data. To use this data you also have to include the following param in the request`include[]=coupons`.

            Only in Read Subscription Endpoint.
        dunning_communication_delay_enabled:
          type: boolean
          description: Enable Communication Delay feature, making sure no communication (email or SMS) is sent to the Customer between 9PM and 8AM in time zone set by the `dunning_communication_delay_time_zone` attribute.
          default: false
        dunning_communication_delay_time_zone:
          type:
          - string
          - 'null'
          description: Time zone for the Dunning Communication Delay feature.
          examples:
          - '"Eastern Time (US & Canada)"'
        receives_invoice_emails:
          type:
          - boolean
          - 'null'
        locale:
          type:
          - string
          - 'null'
        currency:
          type: string
        scheduled_cancellation_at:
          type:
          - string
          - 'null'
          contentEncoding: date-time
        credit_balance_in_cents:
          type: integer
          contentEncoding: int64
        prepayment_balance_in_cents:
          type: integer
          contentEncoding: int64
        prepaid_configuration:
          allOf:
          - $ref: '#/components/schemas/PrepaidConfiguration'
          - {}
        self_service_page_token:
          type: string
          description: Returned only for list/read Subscription operation when `include[]=self_service_page_token` parameter is provided.
    SubscriptionAddCouponError1:
      title: SubscriptionAddCouponError1
      type: object
      properties:
        codes:
          type: array
          items:
            type: string
          description: ''
        coupon_code:
          type: array
          items:
            type: string
          description: ''
        coupon_codes:
          type: array
          items:
            type: string
          description: ''
        subscription:
          type: array
          items:
            type: string
          description: ''
    SubscriptionComponent:
      title: SubscriptionComponent
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        name:
          type: string
        kind:
          allOf:
          - $ref: '#/components/schemas/ComponentKind'
          - description: A handle for the component type
        unit_name:
          type: string
        enabled:
          type: boolean
          description: (for on/off components) indicates if the component is enabled for the subscription
        unit_balance:
          type: integer
          contentEncoding: int32
        currency:
          type: string
        allocated_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
          description: 'For Quantity-based components: The current allocation for the component on the given subscription. For On/Off components: Use 1 for on. Use 0 for off.'
        pricing_scheme:
          oneOf:
          - $ref: '#/components/schemas/PricingScheme'
          - {}
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type:
          - string
          - 'null'
        subscription_id:
          type: integer
          contentEncoding: int32
        recurring:
          type: boolean
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        downgrade_credit:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
        archived_at:
          type:
          - string
          - 'null'
        price_point_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        price_point_handle:
          type:
          - string
          - 'null'
        price_point_type:
          oneOf:
          - {}
          - $ref: '#/components/schemas/PricePointType'
        price_point_name:
          type:
          - string
          - 'null'
        product_family_id:
          type: integer
          contentEncoding: int32
        product_family_handle:
          type: string
        created_at:
          type: string
          contentEncoding: date-time
        updated_at:
          type: string
          contentEncoding: date-time
        use_site_exchange_rate:
          type:
          - boolean
          - 'null'
        description:
          type:
          - string
          - 'null'
        allow_fractional_quantities:
          type: boolean
        subscription:
          allOf:
          - $ref: '#/components/schemas/SubscriptionComponentSubscription'
          - description: An optional object, will be returned if provided `include=subscription` query param.
        display_on_hosted_page:
          type: boolean
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of '30' coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
    SubscriptionComponentAllocationErrorItem:
      title: SubscriptionComponentAllocationErrorItem
      type: object
      properties:
        kind:
          type: string
        message:
          type: string
    SubscriptionComponentAllocationError1:
      title: SubscriptionComponentAllocationError1
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionComponentAllocationErrorItem'
          description: ''
    SubscriptionComponentResponse:
      title: SubscriptionComponentResponse
      type: object
      properties:
        component:
          allOf:
          - $ref: '#/components/schemas/SubscriptionComponent'
          - {}
    SubscriptionComponentSubscription:
      title: SubscriptionComponentSubscription
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/SubscriptionState'
          - description: >-
              The state of a subscription.

              * **Live States**
                  * `active` - A normal, active subscription. It is not in a trial and is paid and up to date.
                  * `assessing` - An internal (transient) state that indicates a subscription is in the middle of periodic assessment. Do not base any access decisions in your app on this state, as it may not always be exposed.
                  * `pending` - An internal (transient) state that indicates a subscription is in the creation process. Do not base any access decisions in your app on this state, as it may not always be exposed.
                  * `trialing` - A subscription in trialing state has a valid trial subscription. This type of subscription may transition to active once payment is received when the trial has ended. Otherwise, it may go to a Problem or End of Life state.
                  * `paused` - An internal state that indicates that your account with Advanced Billing is in arrears.
              * **Problem States**
                  * `past_due` - Indicates that the most recent payment has failed, and payment is past due for this subscription. If you have enabled our automated dunning, this subscription will be in the dunning process (additional status and callbacks from the dunning process will be available in the future). If you are handling dunning and payment updates yourself, you will want to use this state to initiate a payment update from your customers.
                  * `soft_failure` - Indicates that normal assessment/processing of the subscription has failed for a reason that cannot be fixed by the Customer. For example, a Soft Fail may result from a timeout at the gateway or incorrect credentials on your part. The subscriptions should be retried automatically. An interface is being built for you to review problems resulting from these events to take manual action when needed.
                  * `unpaid` - Indicates an unpaid subscription. A subscription is marked unpaid if the retry period expires and you have configured your [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) settings to have a Final Action of `mark the subscription unpaid`.
              * **End of Life States**
                  * `canceled` - Indicates a canceled subscription. This may happen at your request (via the API or the web interface) or due to the expiration of the [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) process without payment. See the [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404559291021) documentation for info on how to restart a canceled subscription.
                  While a subscription is canceled, its period will not advance, it will not accrue any new charges, and Advanced Billing will not attempt to collect the overdue balance.
                  * `expired` - Indicates a subscription that has expired due to running its normal life cycle. Some products may be configured to have an expiration period. An expired subscription then is one that stayed active until it fulfilled its full period.
                  * `failed_to_create` - Indicates that signup has failed. (You may see this state in a signup_failure webhook.)
                  * `on_hold` - Indicates that a subscription’s billing has been temporarily stopped. While it is expected that the subscription will resume and return to active status, this is still treated as an “End of Life” state because the customer is not paying for services during this time.
                  * `suspended` - Indicates that a prepaid subscription has used up all their prepayment balance. If a prepayment is applied, it will return to an active state.
                  * `trial_ended` - A subscription in a trial_ended state is a subscription that completed a no-obligation trial and did not have a card on file at the expiration of the trial period. See [Product Pricing – No Obligation Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221) for more details.

              See [Subscription States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773) for more info about subscription states and state transitions.
        updated_at:
          type: string
      description: An optional object, will be returned if provided `include=subscription` query param.
    SubscriptionCustomPrice:
      title: SubscriptionCustomPrice
      required:
      - price_in_cents
      - interval
      - interval_unit
      type: object
      properties:
        name:
          type: string
          description: (Optional)
        handle:
          type: string
          description: (Optional)
        price_in_cents:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int64
          description: Required if using `custom_price` attribute.
        interval:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Required if using `custom_price` attribute.
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: Required if using `custom_price` attribute.
        trial_price_in_cents:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int64
          description: (Optional)
        trial_interval:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: (Optional)
        trial_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: (Optional)
        initial_charge_in_cents:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int64
          description: (Optional)
        initial_charge_after_trial:
          type: boolean
          description: (Optional)
        expiration_interval:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: (Optional)
        expiration_interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: (Optional)
        tax_included:
          type: boolean
          description: (Optional)
      description: (Optional) Used in place of `product_price_point_id` to define a custom price point unique to the subscription
    SubscriptionDateField:
      title: SubscriptionDateField
      enum:
      - current_period_ends_at
      - current_period_starts_at
      - created_at
      - activated_at
      - canceled_at
      - expires_at
      - trial_started_at
      - trial_ended_at
      - updated_at
      type: string
    SubscriptionGroup:
      title: SubscriptionGroup
      type: object
      properties:
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupPaymentProfile'
          - {}
        payment_collection_method:
          type: string
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        created_at:
          type: string
    SubscriptionGroupBalances:
      title: SubscriptionGroupBalances
      type: object
      properties:
        prepayments:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - {}
        service_credits:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - {}
        open_invoices:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - {}
        pending_discounts:
          allOf:
          - $ref: '#/components/schemas/AccountBalance'
          - {}
    SubscriptionGroupBankAccount:
      title: SubscriptionGroupBankAccount
      type: object
      properties:
        bank_name:
          type: string
          description: (Required when creating a subscription with ACH or GoCardless) The name of the bank where the customer’s account resides
        bank_account_number:
          type: string
          description: (Required when creating a subscription with ACH. Required when creating a subscription with GoCardless and bank_iban is blank) The customerʼs bank account number
        bank_routing_number:
          type: string
          description: (Required when creating a subscription with ACH. Optional when creating a subscription with GoCardless). The routing number of the bank. It becomes bank_code while passing via GoCardless API
        bank_iban:
          type: string
          description: (Optional when creating a subscription with GoCardless). International Bank Account Number. Alternatively, local bank details can be provided
        bank_branch_code:
          type: string
          description: (Optional when creating a subscription with GoCardless) Branch code. Alternatively, an IBAN can be provided
        bank_account_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountType'
          - description: Defaults to checking
        bank_account_holder_type:
          allOf:
          - $ref: '#/components/schemas/BankAccountHolderType'
          - description: Defaults to personal
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          - {}
        billing_address:
          type: string
        billing_city:
          type: string
        billing_state:
          type: string
        billing_zip:
          type: string
        billing_country:
          type: string
        chargify_token:
          type: string
        current_vault:
          allOf:
          - $ref: '#/components/schemas/BankAccountVault'
          - description: The vault that stores the payment profile with the provided vault_token.
        gateway_handle:
          type: string
    SubscriptionGroupComponentCustomPrice:
      title: SubscriptionGroupComponentCustomPrice
      type: object
      properties:
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: ''
        overage_pricing:
          type: array
          items:
            $ref: '#/components/schemas/ComponentCustomPrice'
          description: ''
      description: Used in place of `price_point_id` to define a custom price point unique to the subscription. You still need to provide `component_id`.
    SubscriptionGroupCreditCard:
      title: SubscriptionGroupCreditCard
      type: object
      properties:
        full_number:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          examples:
          - '4111111111111111'
        expiration_month:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        expiration_year:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        chargify_token:
          type: string
          examples:
          - tok_592nf92ng0sjd4300p
        vault_token:
          type: string
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
        gateway_handle:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        billing_address:
          type: string
        billing_address_2:
          type: string
        billing_city:
          type: string
        billing_state:
          type: string
        billing_zip:
          type: string
        billing_country:
          type: string
        last_four:
          type: string
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: The type of card used.
        customer_vault_token:
          type: string
        cvv:
          type: string
        payment_type:
          type: string
    SubscriptionGroupCustomer:
      title: SubscriptionGroupCustomer
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        organization:
          type: string
        email:
          type: string
        reference:
          type: string
    SubscriptionGroupItem:
      title: SubscriptionGroupItem
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        reference:
          type:
          - string
          - 'null'
        product_id:
          type: integer
          contentEncoding: int32
        product_handle:
          type:
          - string
          - 'null'
        product_price_point_id:
          type: integer
          contentEncoding: int32
        product_price_point_handle:
          type: string
        currency:
          type: string
        coupon_code:
          type:
          - string
          - 'null'
        total_revenue_in_cents:
          type: integer
          contentEncoding: int64
        balance_in_cents:
          type: integer
          contentEncoding: int64
    SubscriptionGroupMemberError:
      title: SubscriptionGroupMemberError
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        type:
          type: string
        message:
          type: string
    SubscriptionGroupPaymentProfile:
      title: SubscriptionGroupPaymentProfile
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        first_name:
          type: string
        last_name:
          type: string
        masked_card_number:
          type: string
    SubscriptionGroupPrepayment:
      title: SubscriptionGroupPrepayment
      required:
      - amount
      - details
      - memo
      - method
      type: object
      properties:
        amount:
          type: integer
          contentEncoding: int32
        details:
          type: string
        memo:
          type: string
        method:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupPrepaymentMethod'
          - {}
    SubscriptionGroupPrepaymentMethod:
      title: SubscriptionGroupPrepaymentMethod
      enum:
      - check
      - cash
      - money_order
      - ach
      - paypal_account
      - other
      type: string
    SubscriptionGroupPrepaymentRequest:
      title: SubscriptionGroupPrepaymentRequest
      required:
      - prepayment
      type: object
      properties:
        prepayment:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupPrepayment'
          - {}
    SubscriptionGroupPrepaymentResponse:
      title: SubscriptionGroupPrepaymentResponse
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        amount_in_cents:
          type: integer
          description: The amount in cents of the entry.
          contentEncoding: int64
        ending_balance_in_cents:
          type: integer
          description: The ending balance in cents of the account.
          contentEncoding: int64
        entry_type:
          allOf:
          - $ref: '#/components/schemas/ServiceCreditType'
          - description: The type of entry
        memo:
          type: string
          description: A memo attached to the entry.
    SubscriptionGroupResponse:
      title: SubscriptionGroupResponse
      required:
      - subscription_group
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroup'
          - {}
    SubscriptionGroupSignup:
      title: SubscriptionGroupSignup
      required:
      - subscriptions
      type: object
      properties:
        payment_profile_id:
          type: integer
          contentEncoding: int32
        payer_id:
          type: integer
          contentEncoding: int32
        payer_reference:
          type: string
        payment_collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
        payer_attributes:
          allOf:
          - $ref: '#/components/schemas/PayerAttributes'
          - {}
        credit_card_attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupCreditCard'
          - {}
        bank_account_attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupBankAccount'
          - {}
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionGroupSignupItem'
          description: ''
    SubscriptionGroupSignupComponent:
      title: SubscriptionGroupSignupComponent
      type: object
      properties:
        component_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          description: Required if passing any component to `components` attribute.
        allocated_quantity:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        unit_balance:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        price_point_id:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        custom_price:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupComponentCustomPrice'
          - description: Used in place of `price_point_id` to define a custom price point unique to the subscription. You still need to provide `component_id`.
    SubscriptionGroupSignupError:
      title: SubscriptionGroupSignupError
      type: object
      properties:
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionGroupSubscriptionError'
          description: Object that as key have subscription position in request subscriptions array and as value subscription errors object.
        payer_reference:
          type: string
        payer:
          allOf:
          - $ref: '#/components/schemas/PayerError'
          - {}
        subscription_group:
          type: array
          items:
            type: string
          description: ''
        payment_profile_id:
          type: string
        payer_id:
          type: string
    SubscriptionGroupSignupErrorResponse1:
      title: SubscriptionGroupSignupErrorResponse1
      required:
      - errors
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupSignupError'
          - {}
      examples:
      - errors:
          subscriptions:
            '0':
              payment_profile.chargify_token:
              - Chargify token not found
              product:
              - must be among the Products for this Site
              product_price_point_id:
              - Product price point must belong to product.
    SubscriptionGroupSignupFailure:
      title: SubscriptionGroupSignupFailure
      required:
      - subscription_group
      - customer
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupSignupFailureData'
          - {}
        customer:
          type:
          - string
          - 'null'
    SubscriptionGroupSignupFailureData:
      title: SubscriptionGroupSignupFailureData
      type: object
      properties:
        payer_id:
          type: integer
          contentEncoding: int32
        payer_reference:
          type: string
        payment_profile_id:
          type: integer
          contentEncoding: int32
        payment_collection_method:
          type: string
        payer_attributes:
          allOf:
          - $ref: '#/components/schemas/PayerAttributes'
          - {}
        credit_card_attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupCreditCard'
          - {}
        bank_account_attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupBankAccount'
          - {}
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionGroupSignupItem'
          description: ''
    SubscriptionGroupSignupItem:
      title: SubscriptionGroupSignupItem
      type: object
      properties:
        product_handle:
          type: string
          description: The API Handle of the product for which you are creating a subscription. Required, unless a `product_id` is given instead.
        product_id:
          type: integer
          description: The Product ID of the product for which you are creating a subscription. You can pass either `product_id` or `product_handle`.
          contentEncoding: int32
        product_price_point_id:
          type: integer
          description: The ID of the particular price point on the product.
          contentEncoding: int32
        product_price_point_handle:
          type: string
          description: The user-friendly API handle of a product's particular price point.
        offer_id:
          type: integer
          description: Use in place of passing product and component information to set up the subscription with an existing offer. May be either the Chargify ID of the offer or its handle prefixed with `handle:`
          contentEncoding: int32
        reference:
          type: string
          description: The reference value (provided by your app) for the subscription itelf.
        primary:
          type: boolean
          description: One of the subscriptions must be marked as primary in the group.
        currency:
          type: string
          description: (Optional) If Multi-Currency is enabled and the currency is configured in Chargify, pass it at signup to create a subscription on a non-default currency. Note that you cannot update the currency of an existing subscription.
        coupon_codes:
          type: array
          items:
            type: string
          description: An array for all the coupons attached to the subscription.
        components:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionGroupSignupComponent'
          description: ''
        custom_price:
          allOf:
          - $ref: '#/components/schemas/SubscriptionCustomPrice'
          - description: (Optional) Used in place of `product_price_point_id` to define a custom price point unique to the subscription
        calendar_billing:
          allOf:
          - $ref: '#/components/schemas/CalendarBilling'
          - description: (Optional). Cannot be used when also specifying next_billing_at
        metafields:
          type: object
          additionalProperties:
            type: string
          description: (Optional) A set of key/value pairs representing custom fields and their values. Metafields will be created “on-the-fly” in your site for a given key, if they have not been created yet.
          examples:
          - custom_field_name_1: custom_field_value_1
            custom_field_name_2: custom_field_value_2
    SubscriptionGroupSignupRequest:
      title: SubscriptionGroupSignupRequest
      required:
      - subscription_group
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupSignup'
          - {}
    SubscriptionGroupSignupResponse:
      title: SubscriptionGroupSignupResponse
      type: object
      properties:
        uid:
          type: string
        scheme:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          contentEncoding: int32
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        primary_subscription_id:
          type: integer
          contentEncoding: int32
        next_assessment_at:
          type: string
        state:
          type: string
        cancel_at_end_of_period:
          type: boolean
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionGroupItem'
          description: ''
        payment_collection_method:
          allOf:
          - $ref: '#/components/schemas/CollectionMethod'
          - description: The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
    SubscriptionGroupSignupSuccess:
      title: SubscriptionGroupSignupSuccess
      required:
      - subscription_group
      - customer
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupSignupSuccessData'
          - {}
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer1'
          - {}
    SubscriptionGroupSignupSuccessData:
      title: SubscriptionGroupSignupSuccessData
      required:
      - uid
      - scheme
      - customer_id
      - payment_profile_id
      - subscription_ids
      - primary_subscription_id
      - next_assessment_at
      - state
      - cancel_at_end_of_period
      type: object
      properties:
        uid:
          type: string
        scheme:
          type: integer
          contentEncoding: int32
        customer_id:
          type: integer
          contentEncoding: int32
        payment_profile_id:
          type: integer
          contentEncoding: int32
        subscription_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
        primary_subscription_id:
          type: integer
          contentEncoding: int32
        next_assessment_at:
          type: string
        state:
          type: string
        cancel_at_end_of_period:
          type: boolean
    SubscriptionGroupSubscriptionError:
      title: SubscriptionGroupSubscriptionError
      type: object
      properties:
        product:
          type: array
          items:
            type: string
          description: ''
        product_price_point_id:
          type: array
          items:
            type: string
          description: ''
        payment_profile:
          type: array
          items:
            type: string
          description: ''
        payment_profile.chargify_token:
          type: array
          items:
            type: string
          description: ''
      description: Object which contains subscription errors.
    SubscriptionGroupUpdateError:
      title: SubscriptionGroupUpdateError
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionGroupMemberError'
          description: ''
    SubscriptionGroupUpdateErrorResponse1:
      title: SubscriptionGroupUpdateErrorResponse1
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/SubscriptionGroupUpdateError'
          - {}
    SubscriptionInclude:
      title: SubscriptionInclude
      enum:
      - coupons
      - self_service_page_token
      type: string
    SubscriptionIncludedCoupon:
      title: SubscriptionIncludedCoupon
      type: object
      properties:
        code:
          type: string
          examples:
          - '"ABCD_10"'
        use_count:
          type: integer
          contentEncoding: int32
          examples:
          - 2
        uses_allowed:
          type: integer
          contentEncoding: int32
          examples:
          - 10
        expires_at:
          type:
          - string
          - 'null'
          examples:
          - '"2023-07-13T05:18:58-04:00"'
        recurring:
          type: boolean
        amount_in_cents:
          minimum: 0
          type:
          - integer
          - 'null'
          contentEncoding: int64
          examples:
          - 1000
        percentage:
          type:
          - string
          - 'null'
          examples:
          - '"15.0"'
    SubscriptionListDateField:
      title: SubscriptionListDateField
      const: updated_at
      type: string
      examples:
      - updated_at
    SubscriptionListInclude:
      title: SubscriptionListInclude
      const: self_service_page_token
      type: string
    SubscriptionMigrationPreview:
      title: SubscriptionMigrationPreview
      type: object
      properties:
        prorated_adjustment_in_cents:
          type: integer
          description: The amount of the prorated adjustment that would be issued for the current subscription.
          contentEncoding: int64
        charge_in_cents:
          type: integer
          description: The amount of the charge that would be created for the new product.
          contentEncoding: int64
        payment_due_in_cents:
          type: integer
          description: The amount of the payment due in the case of an upgrade.
          contentEncoding: int64
        credit_applied_in_cents:
          type: integer
          description: Represents a credit in cents that is applied to your subscription as part of a migration process for a specific product, which reduces the amount owed for the subscription.
          contentEncoding: int64
    SubscriptionMigrationPreviewOptions:
      title: SubscriptionMigrationPreviewOptions
      type: object
      properties:
        product_id:
          type: integer
          description: 'The ID of the target Product. Either a product_id or product_handle must be present. A Subscription can be migrated to another product for both the current Product Family and another Product Family. Note: Going to another Product Family, components will not be migrated as well.'
          contentEncoding: int32
        product_price_point_id:
          type: integer
          description: The ID of the specified product's price point. This can be passed to migrate to a non-default price point.
          contentEncoding: int32
        include_trial:
          type: boolean
          description: Whether to include the trial period configured for the product price point when starting a new billing period. Note that if preserve_period is set, then include_trial will be ignored.
          default: false
        include_initial_charge:
          type: boolean
          description: If `true` is sent initial charges will be assessed.
          default: false
        include_coupons:
          type: boolean
          description: 'If `true` is sent, any coupons associated with the subscription will be applied to the migration. If `false` is sent, coupons will not be applied. Note: When migrating to a new product family, the coupon cannot migrate.'
          default: true
        preserve_period:
          type: boolean
          description: If `false` is sent, the subscription's billing period will be reset to today and the full price of the new product will be charged. If `true` is sent, the billing period will not change and a prorated charge will be issued for the new product.
          default: false
        product_handle:
          type: string
          description: 'The handle of the target Product. Either a product_id or product_handle must be present. A Subscription can be migrated to another product for both the current Product Family and another Product Family. Note: Going to another Product Family, components will not be migrated as well.'
        product_price_point_handle:
          type: string
          description: The ID or handle of the specified product's price point. This can be passed to migrate to a non-default price point.
        proration:
          allOf:
          - $ref: '#/components/schemas/Proration'
          - {}
        proration_date:
          type: string
          description: The date that the proration is calculated from for the preview
    SubscriptionMigrationPreviewRequest:
      title: SubscriptionMigrationPreviewRequest
      required:
      - migration
      type: object
      properties:
        migration:
          allOf:
          - $ref: '#/components/schemas/SubscriptionMigrationPreviewOptions'
          - {}
    SubscriptionMigrationPreviewResponse:
      title: SubscriptionMigrationPreviewResponse
      required:
      - migration
      type: object
      properties:
        migration:
          allOf:
          - $ref: '#/components/schemas/SubscriptionMigrationPreview'
          - {}
    SubscriptionMRR:
      title: SubscriptionMRR
      required:
      - subscription_id
      - mrr_amount_in_cents
      type: object
      properties:
        subscription_id:
          type: integer
          contentEncoding: int32
        mrr_amount_in_cents:
          type: integer
          contentEncoding: int64
        breakouts:
          allOf:
          - $ref: '#/components/schemas/SubscriptionMRRBreakout'
          - {}
    SubscriptionMRRBreakout:
      title: SubscriptionMRRBreakout
      required:
      - plan_amount_in_cents
      - usage_amount_in_cents
      type: object
      properties:
        plan_amount_in_cents:
          type: integer
          contentEncoding: int64
        usage_amount_in_cents:
          type: integer
          contentEncoding: int64
    SubscriptionMRRResponse:
      title: SubscriptionMRRResponse
      required:
      - subscriptions_mrr
      type: object
      properties:
        subscriptions_mrr:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionMRR'
          description: ''
      examples:
      - subscriptions_mrr:
        - subscription_id: 0
          mrr_amount_in_cents: 0
          breakouts:
            plan_amount_in_cents: 0
            usage_amount_in_cents: 0
    SubscriptionNote:
      title: SubscriptionNote
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        body:
          type: string
        subscription_id:
          type: integer
          contentEncoding: int32
        created_at:
          type: string
        updated_at:
          type: string
        sticky:
          type: boolean
    SubscriptionNoteResponse:
      title: SubscriptionNoteResponse
      required:
      - note
      type: object
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/SubscriptionNote'
          - {}
    SubscriptionPreview:
      title: SubscriptionPreview
      type: object
      properties:
        current_billing_manifest:
          allOf:
          - $ref: '#/components/schemas/BillingManifest'
          - {}
        next_billing_manifest:
          allOf:
          - $ref: '#/components/schemas/BillingManifest'
          - {}
    SubscriptionPreviewResponse:
      title: SubscriptionPreviewResponse
      required:
      - subscription_preview
      type: object
      properties:
        subscription_preview:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPreview'
          - {}
    SubscriptionProductChange:
      title: SubscriptionProductChange
      required:
      - previous_product_id
      - new_product_id
      type: object
      properties:
        previous_product_id:
          type: integer
          contentEncoding: int32
        new_product_id:
          type: integer
          contentEncoding: int32
    SubscriptionProductMigration:
      title: SubscriptionProductMigration
      type: object
      properties:
        product_id:
          type: integer
          description: 'The ID of the target Product. Either a product_id or product_handle must be present. A Subscription can be migrated to another product for both the current Product Family and another Product Family. Note: Going to another Product Family, components will not be migrated as well.'
          contentEncoding: int32
        product_price_point_id:
          type: integer
          description: The ID of the specified product's price point. This can be passed to migrate to a non-default price point.
          contentEncoding: int32
        include_trial:
          type: boolean
          description: Whether to include the trial period configured for the product price point when starting a new billing period. Note that if preserve_period is set, then include_trial will be ignored.
          default: false
        include_initial_charge:
          type: boolean
          description: If `true` is sent initial charges will be assessed.
          default: false
        include_coupons:
          type: boolean
          description: 'If `true` is sent, any coupons associated with the subscription will be applied to the migration. If `false` is sent, coupons will not be applied. Note: When migrating to a new product family, the coupon cannot migrate.'
          default: true
        preserve_period:
          type: boolean
          description: If `false` is sent, the subscription's billing period will be reset to today and the full price of the new product will be charged. If `true` is sent, the billing period will not change and a prorated charge will be issued for the new product.
          default: false
        product_handle:
          type: string
          description: 'The handle of the target Product. Either a product_id or product_handle must be present. A Subscription can be migrated to another product for both the current Product Family and another Product Family. Note: Going to another Product Family, components will not be migrated as well.'
        product_price_point_handle:
          type: string
          description: The ID or handle of the specified product's price point. This can be passed to migrate to a non-default price point.
        proration:
          allOf:
          - $ref: '#/components/schemas/Proration'
          - {}
    SubscriptionProductMigrationRequest:
      title: SubscriptionProductMigrationRequest
      required:
      - migration
      type: object
      properties:
        migration:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProductMigration'
          - {}
    SubscriptionPurgeType:
      title: SubscriptionPurgeType
      enum:
      - customer
      - payment_profile
      type: string
    SubscriptionRemoveCouponErrors1:
      title: SubscriptionRemoveCouponErrors1
      required:
      - subscription
      type: object
      properties:
        subscription:
          type: array
          items:
            type: string
          description: ''
    SubscriptionResponse:
      title: SubscriptionResponse
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          - {}
    SubscriptionSort:
      title: SubscriptionSort
      enum:
      - signup_date
      - period_start
      - period_end
      - next_assessment
      - updated_at
      - created_at
      type: string
    SubscriptionState:
      title: SubscriptionState
      enum:
      - pending
      - failed_to_create
      - trialing
      - assessing
      - active
      - soft_failure
      - past_due
      - suspended
      - canceled
      - expired
      - paused
      - unpaid
      - trial_ended
      - on_hold
      - awaiting_signup
      type: string
      description: >-
        The state of a subscription.

        * **Live States**
            * `active` - A normal, active subscription. It is not in a trial and is paid and up to date.
            * `assessing` - An internal (transient) state that indicates a subscription is in the middle of periodic assessment. Do not base any access decisions in your app on this state, as it may not always be exposed.
            * `pending` - An internal (transient) state that indicates a subscription is in the creation process. Do not base any access decisions in your app on this state, as it may not always be exposed.
            * `trialing` - A subscription in trialing state has a valid trial subscription. This type of subscription may transition to active once payment is received when the trial has ended. Otherwise, it may go to a Problem or End of Life state.
            * `paused` - An internal state that indicates that your account with Advanced Billing is in arrears.
        * **Problem States**
            * `past_due` - Indicates that the most recent payment has failed, and payment is past due for this subscription. If you have enabled our automated dunning, this subscription will be in the dunning process (additional status and callbacks from the dunning process will be available in the future). If you are handling dunning and payment updates yourself, you will want to use this state to initiate a payment update from your customers.
            * `soft_failure` - Indicates that normal assessment/processing of the subscription has failed for a reason that cannot be fixed by the Customer. For example, a Soft Fail may result from a timeout at the gateway or incorrect credentials on your part. The subscriptions should be retried automatically. An interface is being built for you to review problems resulting from these events to take manual action when needed.
            * `unpaid` - Indicates an unpaid subscription. A subscription is marked unpaid if the retry period expires and you have configured your [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) settings to have a Final Action of `mark the subscription unpaid`.
        * **End of Life States**
            * `canceled` - Indicates a canceled subscription. This may happen at your request (via the API or the web interface) or due to the expiration of the [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) process without payment. See the [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404559291021) documentation for info on how to restart a canceled subscription.
            While a subscription is canceled, its period will not advance, it will not accrue any new charges, and Advanced Billing will not attempt to collect the overdue balance.
            * `expired` - Indicates a subscription that has expired due to running its normal life cycle. Some products may be configured to have an expiration period. An expired subscription then is one that stayed active until it fulfilled its full period.
            * `failed_to_create` - Indicates that signup has failed. (You may see this state in a signup_failure webhook.)
            * `on_hold` - Indicates that a subscription’s billing has been temporarily stopped. While it is expected that the subscription will resume and return to active status, this is still treated as an “End of Life” state because the customer is not paying for services during this time.
            * `suspended` - Indicates that a prepaid subscription has used up all their prepayment balance. If a prepayment is applied, it will return to an active state.
            * `trial_ended` - A subscription in a trial_ended state is a subscription that completed a no-obligation trial and did not have a card on file at the expiration of the trial period. See [Product Pricing – No Obligation Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221) for more details.

        See [Subscription States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773) for more info about subscription states and state transitions.
    SubscriptionStateChange:
      title: SubscriptionStateChange
      required:
      - previous_subscription_state
      - new_subscription_state
      type: object
      properties:
        previous_subscription_state:
          minLength: 1
          type: string
        new_subscription_state:
          minLength: 1
          type: string
    SubscriptionStateFilter:
      title: SubscriptionStateFilter
      enum:
      - active
      - canceled
      - expired
      - expired_cards
      - on_hold
      - past_due
      - pending_cancellation
      - pending_renewal
      - suspended
      - trial_ended
      - trialing
      - unpaid
      type: string
      description: Allowed values for filtering by the current state of the subscription.
    SubscriptionsMrrErrorResponse1:
      title: SubscriptionsMrrErrorResponse1
      required:
      - errors
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/AttributeError'
          - {}
      examples:
      - errors:
          attribute:
          - supplied value is invalid, expected ISO 8601 format
    TaxConfiguration:
      title: TaxConfiguration
      type: object
      properties:
        kind:
          allOf:
          - $ref: '#/components/schemas/TaxConfigurationKind'
          - {}
        destination_address:
          allOf:
          - $ref: '#/components/schemas/TaxDestinationAddress'
          - {}
        fully_configured:
          type: boolean
          description: 'Returns `true` when Chargify has been properly configured to charge tax using the specified tax system. More details about taxes: https://maxio-chargify.zendesk.com/hc/en-us/articles/5405488905869-Taxes-Introduction'
          default: false
    TaxConfigurationKind:
      title: TaxConfigurationKind
      enum:
      - custom
      - managed avalara
      - linked avalara
      - digital river
      type: string
    TaxDestinationAddress:
      title: TaxDestinationAddress
      enum:
      - shipping_then_billing
      - billing_then_shipping
      - shipping_only
      - billing_only
      type: string
    TooManyManagementLinkRequests:
      title: TooManyManagementLinkRequests
      required:
      - error
      - new_link_available_at
      type: object
      properties:
        error:
          type: string
        new_link_available_at:
          type: string
          contentEncoding: date-time
    TooManyManagementLinkRequestsError1:
      title: TooManyManagementLinkRequestsError1
      required:
      - errors
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/TooManyManagementLinkRequests'
          - {}
    UpdateAllocationExpirationDate:
      title: UpdateAllocationExpirationDate
      type: object
      properties:
        allocation:
          allOf:
          - $ref: '#/components/schemas/AllocationExpirationDate'
          - {}
    UpdateComponent:
      title: UpdateComponent
      type: object
      properties:
        handle:
          type: string
        name:
          type: string
          description: The name of the Component, suitable for display on statements. i.e. Text Messages.
        description:
          type:
          - string
          - 'null'
          description: The description of the component.
        accounting_code:
          type:
          - string
          - 'null'
        taxable:
          type: boolean
          description: Boolean flag describing whether a component is taxable or not.
        tax_code:
          type:
          - string
          - 'null'
          description: A string representing the tax code related to the component type. This is especially important when using the Avalara service to tax based on locale. This attribute has a max length of 10 characters.
        item_category:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/ItemCategory'
          - description: 'One of the following: Business Software, Consumer Software, Digital Services, Physical Goods, Other'
            examples:
            - Business Software
        display_on_hosted_page:
          type: boolean
        upgrade_charge:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/CreditType'
          - description: >-
              The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.

              Available values: `full`, `prorated`, `none`.
    UpdateComponentPricePoint:
      title: UpdateComponentPricePoint
      type: object
      properties:
        name:
          type: string
        handle:
          type: string
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        use_site_exchange_rate:
          type: boolean
          description: Whether to use the site level exchange rate or define your own prices for each currency if you have multiple currencies defined on the site.
        tax_included:
          type: boolean
          description: Whether or not the price point includes tax
        interval:
          type: integer
          description: The numerical interval. i.e. an interval of ‘30’ coupled with an interval_unit of day would mean this component price point would renew every 30 days. This property is only available for sites with Multifrequency enabled.
          contentEncoding: int32
        interval_unit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnit'
          - description: A string representing the interval unit for this component price point, either month or day. This property is only available for sites with Multifrequency enabled.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePrice'
          description: ''
    UpdateComponentPricePointRequest:
      title: UpdateComponentPricePointRequest
      type: object
      properties:
        price_point:
          allOf:
          - $ref: '#/components/schemas/UpdateComponentPricePoint'
          - {}
    UpdateComponentRequest:
      title: UpdateComponentRequest
      required:
      - component
      type: object
      properties:
        component:
          allOf:
          - $ref: '#/components/schemas/UpdateComponent'
          - {}
    UpdateCouponCurrency:
      title: UpdateCouponCurrency
      required:
      - currency
      - price
      type: object
      properties:
        currency:
          type: string
          description: ISO code for the site defined currency.
        price:
          type: integer
          description: Price for the given currency.
          contentEncoding: int32
    UpdateCurrencyPrice:
      title: UpdateCurrencyPrice
      required:
      - id
      - price
      type: object
      properties:
        id:
          type: integer
          description: ID of the currency price record being updated
          contentEncoding: int32
        price:
          type: integer
          description: New price for the given currency
          contentEncoding: int32
    UpdateCurrencyPricesRequest:
      title: UpdateCurrencyPricesRequest
      required:
      - currency_prices
      type: object
      properties:
        currency_prices:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCurrencyPrice'
          description: ''
    UpdateCustomer:
      title: UpdateCustomer
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        cc_emails:
          type: string
        organization:
          type: string
        reference:
          type: string
        address:
          type: string
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        locale:
          type: string
          description: Set a specific language on a customer record.
        vat_number:
          type: string
        tax_exempt:
          type: boolean
        tax_exempt_reason:
          type: string
        parent_id:
          type:
          - integer
          - 'null'
          contentEncoding: int32
    UpdateCustomerRequest:
      title: UpdateCustomerRequest
      required:
      - customer
      type: object
      properties:
        customer:
          allOf:
          - $ref: '#/components/schemas/UpdateCustomer'
          - {}
    UpdateEndpoint:
      title: UpdateEndpoint
      required:
      - url
      - webhook_subscriptions
      type: object
      properties:
        url:
          type: string
        webhook_subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSubscription'
          description: ''
      description: Used to Create or Update Endpoint
    UpdateEndpointRequest:
      title: UpdateEndpointRequest
      required:
      - endpoint
      type: object
      properties:
        endpoint:
          allOf:
          - $ref: '#/components/schemas/UpdateEndpoint'
          - description: Used to Create or Update Endpoint
      description: Used to Create or Update Endpoint
    UpdateMetadata:
      title: UpdateMetadata
      type: object
      properties:
        current_name:
          type: string
        name:
          type: string
        value:
          type: string
    UpdateMetadataRequest:
      title: UpdateMetadataRequest
      type: object
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/UpdateMetadata'
          - {}
    UpdateMetafield:
      title: UpdateMetafield
      type: object
      properties:
        current_name:
          type: string
        name:
          type: string
        scope:
          allOf:
          - $ref: '#/components/schemas/MetafieldScope'
          - description: "Warning: When updating a metafield's scope attribute, all scope attributes must be passed. Partially complete scope attributes will override the existing settings."
        input_type:
          allOf:
          - $ref: '#/components/schemas/MetafieldInput'
          - description: Indicates how data should be added to the metafield. For example, a text type is just a string, so a given metafield of this type can have any value attached. On the other hand, dropdown and radio have a set of allowed values that can be input, and appear differently on a Public Signup Page. Defaults to 'text'
        enum:
          type: array
          items:
            type: string
          description: Only applicable when input_type is radio or dropdown
    UpdateMetafieldsRequest:
      title: UpdateMetafieldsRequest
      type: object
      properties:
        metafields:
          oneOf:
          - $ref: '#/components/schemas/UpdateMetafield'
          - type: array
            items:
              $ref: '#/components/schemas/UpdateMetafield'
    UpdatePaymentProfile:
      title: UpdatePaymentProfile
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the card holder.
        last_name:
          type: string
          description: The last name of the card holder.
        full_number:
          type: string
          description: The full credit card number
          examples:
          - '5424000000000015'
        card_type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          - description: The type of card used.
        expiration_month:
          type: string
          description: (Optional when performing an Import via vault_token, required otherwise) The 1- or 2-digit credit card expiration month, as an integer or string, i.e. 5
        expiration_year:
          type: string
          description: (Optional when performing a Import via vault_token, required otherwise) The 4-digit credit card expiration year, as an integer or string, i.e. 2012
        current_vault:
          allOf:
          - $ref: '#/components/schemas/CurrentVault'
          - description: The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
        billing_address:
          type: string
          description: The credit card or bank account billing street address (i.e. 123 Main St.). This value is merely passed through to the payment gateway.
        billing_city:
          type: string
          description: The credit card or bank account billing address city (i.e. “Boston”). This value is merely passed through to the payment gateway.
        billing_state:
          type: string
          description: The credit card or bank account billing address state (i.e. MA). This value is merely passed through to the payment gateway. This must conform to the [ISO_3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) in order to be valid for tax locale purposes.
        billing_zip:
          type: string
          description: The credit card or bank account billing address zip code (i.e. 12345). This value is merely passed through to the payment gateway.
        billing_country:
          type: string
          description: The credit card or bank account billing address country, required in [ISO_3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format (i.e. “US”). This value is merely passed through to the payment gateway. Some gateways require country codes in a specific format. Please check your gateway’s documentation. If creating an ACH subscription, only US is supported at this time.
        billing_address_2:
          type:
          - string
          - 'null'
          description: Second line of the customer’s billing address i.e. Apt. 100
    UpdatePaymentProfileRequest:
      title: UpdatePaymentProfileRequest
      required:
      - payment_profile
      type: object
      properties:
        payment_profile:
          allOf:
          - $ref: '#/components/schemas/UpdatePaymentProfile'
          - {}
    UpdatePrice:
      title: UpdatePrice
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
        ending_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        unit_price:
          oneOf:
          - type: number
          - type: string
          description: The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or 0.00000065
        _destroy:
          type: boolean
        starting_quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
    UpdateProductPricePoint:
      title: UpdateProductPricePoint
      type: object
      properties:
        handle:
          type: string
        price_in_cents:
          type: integer
          contentEncoding: int64
    UpdateProductPricePointRequest:
      title: UpdateProductPricePointRequest
      required:
      - price_point
      type: object
      properties:
        price_point:
          allOf:
          - $ref: '#/components/schemas/UpdateProductPricePoint'
          - {}
    UpdateReasonCode:
      title: UpdateReasonCode
      type: object
      properties:
        code:
          type: string
          description: The unique identifier for the ReasonCode
        description:
          type: string
          description: The friendly summary of what the code signifies
        position:
          type: integer
          description: The order that code appears in lists
          contentEncoding: int32
    UpdateReasonCodeRequest:
      title: UpdateReasonCodeRequest
      required:
      - reason_code
      type: object
      properties:
        reason_code:
          allOf:
          - $ref: '#/components/schemas/UpdateReasonCode'
          - {}
    UpdateSegment:
      title: UpdateSegment
      required:
      - pricing_scheme
      type: object
      properties:
        pricing_scheme:
          allOf:
          - $ref: '#/components/schemas/PricingScheme'
          - description: The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
        prices:
          type: array
          items:
            $ref: '#/components/schemas/CreateorUpdateSegmentPrice'
          description: ''
    UpdateSegmentRequest:
      title: UpdateSegmentRequest
      required:
      - segment
      type: object
      properties:
        segment:
          allOf:
          - $ref: '#/components/schemas/UpdateSegment'
          - {}
    UpdateSubscription:
      title: UpdateSubscription
      type: object
      properties:
        credit_card_attributes:
          allOf:
          - $ref: '#/components/schemas/CreditCardAttributes'
          - {}
        product_handle:
          type: string
          description: Set to the handle of a different product to change the subscription's product
        product_id:
          type: integer
          description: Set to the id of a different product to change the subscription's product
          contentEncoding: int32
        product_change_delayed:
          type: boolean
          default: false
        next_product_id:
          type: string
          description: Set to an empty string to cancel a delayed product change.
        next_product_price_point_id:
          type: string
        snap_day:
          oneOf:
          - $ref: '#/components/schemas/SnapDay'
          - maximum: 28
            minimum: 1
            type: integer
            contentEncoding: int32
          description: Use for subscriptions with product eligible for calendar billing only. Value can be 1-28 or 'end'.
        next_billing_at:
          type: string
        payment_collection_method:
          type: string
        receives_invoice_emails:
          type: boolean
        net_terms:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
        stored_credential_transaction_id:
          type: integer
          contentEncoding: int32
        reference:
          type: string
        custom_price:
          allOf:
          - $ref: '#/components/schemas/SubscriptionCustomPrice'
          - description: (Optional) Used in place of `product_price_point_id` to define a custom price point unique to the subscription
        components:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSubscriptionComponent'
          description: (Optional) An array of component ids and custom prices to be added to the subscription.
        dunning_communication_delay_enabled:
          type:
          - boolean
          - 'null'
          description: Enable Communication Delay feature, making sure no communication (email or SMS) is sent to the Customer between 9PM and 8AM in time zone set by the `dunning_communication_delay_time_zone` attribute.
          default: false
        dunning_communication_delay_time_zone:
          type:
          - string
          - 'null'
          description: Time zone for the Dunning Communication Delay feature.
          examples:
          - '"Eastern Time (US & Canada)"'
    UpdateSubscriptionComponent:
      title: UpdateSubscriptionComponent
      type: object
      properties:
        component_id:
          type: integer
          contentEncoding: int32
        custom_price:
          allOf:
          - $ref: '#/components/schemas/ComponentCustomPrice'
          - description: Create or update custom pricing unique to the subscription. Used in place of `price_point_id`.
    UpdateSubscriptionGroup:
      title: UpdateSubscriptionGroup
      type: object
      properties:
        member_ids:
          type: array
          items:
            type: integer
            contentEncoding: int32
          description: ''
    UpdateSubscriptionGroupRequest:
      title: UpdateSubscriptionGroupRequest
      required:
      - subscription_group
      type: object
      properties:
        subscription_group:
          allOf:
          - $ref: '#/components/schemas/UpdateSubscriptionGroup'
          - {}
    UpdateSubscriptionNote:
      title: UpdateSubscriptionNote
      required:
      - body
      - sticky
      type: object
      properties:
        body:
          type: string
        sticky:
          type: boolean
      description: Updatable fields for Subscription Note
    UpdateSubscriptionNoteRequest:
      title: UpdateSubscriptionNoteRequest
      required:
      - note
      type: object
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/UpdateSubscriptionNote'
          - description: Updatable fields for Subscription Note
      description: Updatable fields for Subscription Note
    UpdateSubscriptionRequest:
      title: UpdateSubscriptionRequest
      required:
      - subscription
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/UpdateSubscription'
          - {}
    UpsertPrepaidConfiguration:
      title: UpsertPrepaidConfiguration
      type: object
      properties:
        initial_funding_amount_in_cents:
          type: integer
          contentEncoding: int64
        replenish_to_amount_in_cents:
          type: integer
          contentEncoding: int64
        auto_replenish:
          type: boolean
        replenish_threshold_amount_in_cents:
          type: integer
          contentEncoding: int64
    UpsertPrepaidConfigurationRequest:
      title: UpsertPrepaidConfigurationRequest
      required:
      - prepaid_configuration
      type: object
      properties:
        prepaid_configuration:
          allOf:
          - $ref: '#/components/schemas/UpsertPrepaidConfiguration'
          - {}
    Usage:
      title: Usage
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          contentEncoding: int64
        memo:
          type: string
        created_at:
          type: string
          contentEncoding: date-time
        price_point_id:
          type: integer
          contentEncoding: int32
        quantity:
          oneOf:
          - type: integer
            contentEncoding: int32
          - type: string
        overage_quantity:
          type: integer
          contentEncoding: int32
        component_id:
          type: integer
          contentEncoding: int32
        component_handle:
          type: string
        subscription_id:
          type: integer
          contentEncoding: int32
    UsageResponse:
      title: UsageResponse
      required:
      - usage
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/Usage'
          - {}
    VoidInvoice:
      title: VoidInvoice
      required:
      - reason
      type: object
      properties:
        reason:
          minLength: 1
          type: string
    VoidInvoiceEventData:
      title: VoidInvoiceEventData
      required:
      - credit_note_attributes
      - memo
      - applied_amount
      - transaction_time
      - is_advance_invoice
      - reason
      type: object
      properties:
        credit_note_attributes:
          oneOf:
          - $ref: '#/components/schemas/CreditNote'
          - {}
        memo:
          type:
          - string
          - 'null'
          description: The memo provided during invoice voiding.
        applied_amount:
          type:
          - string
          - 'null'
          description: The amount of the void.
        transaction_time:
          type:
          - string
          - 'null'
          description: The time the refund was applied, in ISO 8601 format, i.e. "2019-06-07T17:20:06Z"
          contentEncoding: date-time
        is_advance_invoice:
          type: boolean
          description: If true, the invoice is an advance invoice.
        reason:
          type: string
          description: The reason for the void.
      description: Example schema for an `void_invoice` event
    VoidInvoiceRequest:
      title: VoidInvoiceRequest
      required:
      - void
      type: object
      properties:
        void:
          allOf:
          - $ref: '#/components/schemas/VoidInvoice'
          - {}
    Webhook:
      title: Webhook
      type: object
      properties:
        event:
          type: string
          description: A string describing which event type produced the given webhook
        id:
          type: integer
          description: The unique identifier for the webhooks (unique across all of Chargify). This is not changed on a retry/replay of the same webhook, so it may be used to avoid duplicate action for the same event.
          contentEncoding: int32
        created_at:
          type: string
          description: Timestamp indicating when the webhook was created
        last_error:
          type: string
          description: Text describing the status code and/or error from the last failed attempt to send the Webhook. When a webhook is retried and accepted, this field will be cleared.
        last_error_at:
          type: string
          description: Timestamp indicating when the last non-acceptance occurred. If a webhook is later resent and accepted, this field will be cleared.
        accepted_at:
          type:
          - string
          - 'null'
          description: Timestamp indicating when the webhook was accepted by the merchant endpoint. When a webhook is explicitly replayed by the merchant, this value will be cleared until it is accepted again.
        last_sent_at:
          type: string
          description: Timestamp indicating when the most recent attempt was made to send the webhook
        last_sent_url:
          type: string
          description: The url that the endpoint was last sent to.
        successful:
          type: boolean
          description: A boolean flag describing whether the webhook was accepted by the webhook endpoint for the most recent attempt. (Acceptance is defined by receiving a “200 OK” HTTP response within a reasonable timeframe, i.e. 15 seconds)
        body:
          type: string
          description: The data sent within the webhook post
        signature:
          type: string
          description: The calculated webhook signature
        signature_hmac_sha_256:
          type: string
          description: The calculated HMAC-SHA-256 webhook signature
    WebhookOrder:
      title: WebhookOrder
      enum:
      - newest_first
      - oldest_first
      type: string
    WebhookResponse:
      title: WebhookResponse
      type: object
      properties:
        webhook:
          allOf:
          - $ref: '#/components/schemas/Webhook'
          - {}
    WebhookStatus:
      title: WebhookStatus
      enum:
      - successful
      - failed
      - pending
      - paused
      type: string
    WebhookSubscription:
      title: WebhookSubscription
      enum:
      - billing_date_change
      - component_allocation_change
      - customer_create
      - customer_update
      - dunning_step_reached
      - expiring_card
      - expiration_date_change
      - invoice_issued
      - metered_usage
      - payment_failure
      - payment_success
      - direct_debit_payment_pending
      - direct_debit_payment_paid_out
      - direct_debit_payment_rejected
      - prepaid_subscription_balance_changed
      - prepaid_usage
      - refund_failure
      - refund_success
      - renewal_failure
      - renewal_success
      - signup_failure
      - signup_success
      - statement_closed
      - statement_settled
      - subscription_card_update
      - subscription_group_card_update
      - subscription_product_change
      - subscription_state_change
      - trial_end_notice
      - upcoming_renewal_notice
      - upgrade_downgrade_failure
      - upgrade_downgrade_success
      - pending_cancellation_change
      - subscription_prepayment_account_balance_changed
      - subscription_service_credit_account_balance_changed
      type: string
    InvoiceEventPayment2:
      anyOf:
      - $ref: '#/components/schemas/PaymentMethodApplePay'
      - $ref: '#/components/schemas/PaymentMethodBankAccount'
      - $ref: '#/components/schemas/PaymentMethodCreditCard'
      - $ref: '#/components/schemas/PaymentMethodExternal'
      - $ref: '#/components/schemas/PaymentMethodPaypal'
      description: A nested data structure detailing the method of payment
      discriminator:
        propertyName: type
        mapping:
          apple_pay: PaymentMethodApplePay
          bank_account: PaymentMethodBankAccount
          credit_card: PaymentMethodCreditCard
          external: PaymentMethodExternal
          paypal_account: PaymentMethodPaypal
    Invoice-Event1:
      anyOf:
      - $ref: '#/components/schemas/ApplyCreditNoteEvent'
      - $ref: '#/components/schemas/ApplyDebitNoteEvent'
      - $ref: '#/components/schemas/ApplyPaymentEvent'
      - $ref: '#/components/schemas/BackportInvoiceEvent'
      - $ref: '#/components/schemas/ChangeChargebackStatusEvent'
      - $ref: '#/components/schemas/ChangeInvoiceCollectionMethodEvent'
      - $ref: '#/components/schemas/ChangeInvoiceStatusEvent'
      - $ref: '#/components/schemas/CreateCreditNoteEvent'
      - $ref: '#/components/schemas/FailedPaymentEvent'
      - $ref: '#/components/schemas/IssueInvoiceEvent'
      - $ref: '#/components/schemas/RefundInvoiceEvent'
      - $ref: '#/components/schemas/RemovePaymentEvent'
      - $ref: '#/components/schemas/VoidInvoiceEvent'
      - $ref: '#/components/schemas/VoidRemainderEvent'
      description: Base type for invoice events.
      discriminator:
        propertyName: event_type
        mapping:
          apply_credit_note: ApplyCreditNoteEvent
          apply_debit_note: ApplyDebitNoteEvent
          apply_payment: ApplyPaymentEvent
          backport_invoice: BackportInvoiceEvent
          change_chargeback_status: ChangeChargebackStatusEvent
          change_invoice_collection_method: ChangeInvoiceCollectionMethodEvent
          change_invoice_status: ChangeInvoiceStatusEvent
          create_credit_note: CreateCreditNoteEvent
          failed_payment: FailedPaymentEvent
          issue_invoice: IssueInvoiceEvent
          refund_invoice: RefundInvoiceEvent
          remove_payment: RemovePaymentEvent
          void_invoice: VoidInvoiceEvent
          void_remainder: VoidRemainderEvent
  securitySchemes:
    BasicAuth:
      type: http
      description: The `username` is a Maxio Advanced Billing API key. The `password` is `x`.
      scheme: basic
security:
- BasicAuth: []
tags:
- name: API Exports
- name: Advance Invoice
- name: Billing Portal
- name: Coupons
- name: Components
- name: Customers
- name: Custom Fields
- name: Events
- name: 'Events-Based Billing: Segments'
- name: Insights
- name: Invoices
- name: Offers
- name: Payment Profiles
- name: Product Families
- name: Products
- name: 'Product: Price Points'
- name: Proforma Invoices
- name: Reason Codes
- name: Referral Codes
- name: Sales Commissions
- name: Sites
- name: Subscriptions
- name: Subscription Components
- name: Subscription Groups
- name: Subscription Group Invoice Account
- name: Subscription Group Status
- name: Subscription Invoice Account
- name: Subscription Notes
- name: Subscription Products
- name: Subscription Status
- name: Webhooks
